var searchIndex = JSON.parse('{\
"air_interpreter_fs":{"doc":"","t":"FF","n":["air_interpreter_path","write_default_air_interpreter"],"q":[[0,"air_interpreter_fs"],[2,"std::path"],[3,"std::path"]],"d":["",""],"i":[0,0],"f":[[1,2],[1,[[4,[3]]]]],"c":[],"p":[[3,"Path",2],[3,"PathBuf",2],[15,"tuple"],[6,"Result",3]],"b":[]},\
"aquamarine":{"doc":"","t":"DIDEDNNNQNNDEQNDNDDNDNDNNNNDDNNLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLMMLLLLLLLLLLLLLLLLLKLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLMLLLLLLLLLLLLLKLLMMKLLLLLLLLLLMMLLLLLLLLLLLLLMMMMMMMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLMMMMMMMMMM","n":["AVMRunner","AquaRuntime","AquamarineApi","AquamarineApiError","AquamarineBackend","AquamarineDied","AquamarineQueueFull","CleanupData","Config","CreateAnomalyDir","CreateDataStore","DataStoreConfig","DataStoreError","Error","ExecutionTimedOut","InterpretationStats","OneshotCancelled","ParticleDataStore","ParticleEffects","ParticleExpired","Plumber","ReadData","RemoteRoutingEffects","SerializeAnomaly","SignatureVerificationFailed","StoreData","VaultError","VmConfig","VmPoolConfig","WorkerIsNotActive","WriteAnomaly","add_service","add_service","air_interpreter","air_size_limit","anomaly_data_store","anomaly_dir","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","batch_cleanup_data","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","call","call","call_requests","call_result_size_limit","call_tracing","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","create_runtime","create_runtime","create_worker_pool","current_peer_id","data_file","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","detect_anomaly","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","empty","execute","execution_timeout","failed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","hard_limit_enabled","ingest","init","init","init","init","init","init","init","init","init","init","init","init","init","initialize","interpretation_time","into","into","into","into","into","into","into","into","into","into","into","into","into","into_effects","into_effects","into_particle_id","max_heap_size","memory_delta","memory_stats","memory_stats","memory_stats","new","new","new","new","new","new","new","new","new_data","new_data_len","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","next_peers","next_peers","particle","particle_data_store","particle_size_limit","particles_anomaly_dir","particles_dir","particles_vault_dir","poll","poll","pool_size","read_data","references","references","references","references","references","references","references","references","references","references","references","references","references","remove_service","remove_service","remove_worker_pool","save_anomaly_data","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","source","start","store_data","success","to_human_readable_data","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vault","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","err","particle_id","particle_id","particle_id","particle_id","particle_id","particle_id","particle_id","timeout","worker_id"],"q":[[0,"aquamarine"],[370,"aquamarine::AquamarineApiError"],[380,"alloc::string"],[381,"particle_execution::particle_function"],[382,"std::collections::hash::map"],[383,"core::option"],[384,"particle_execution::particle_function"],[385,"std::path"],[386,"bnum::cast"],[387,"libp2p_identity::peer_id"],[388,"alloc::vec"],[389,"avm_interface::particle_parameters"],[390,"avm_interface::call_service_result"],[391,"fluence_keypair::key_pair"],[392,"avm_interface::raw_outcome"],[393,"core::result"],[394,"core::convert"],[395,"avm_interface::call_service_result"],[396,"core::task::wake"],[397,"types::peer_scope"],[398,"core::fmt"],[399,"core::fmt"],[400,"particle_protocol::particle"],[401,"core::fmt"],[402,"system_interface::fs::fd_flags"],[403,"std::io::error"],[404,"types::peer_scope"],[405,"avm_server::runner"],[406,"peer_metrics::particle_executor"],[407,"peer_metrics::vm_pool"],[408,"health"],[409,"workers::workers"],[410,"alloc::sync"],[411,"workers::key_storage"],[412,"workers::scope"],[413,"workers::workers"],[414,"system_interface::fs::fd_flags"],[415,"core::task::wake"],[416,"libipld_core::raw"],[417,"anyhow"],[418,"std::io"],[419,"cid::cid"],[420,"core::iter::traits::collect"],[421,"core::error"],[422,"tokio::runtime::task::join"],[423,"core::any"]],"d":["","","","","","","","","","","","","","","","Performance stats about particle’s interpretation","","","Effects produced by particle execution. Currently the only …","","","","","","","","","","","","","","","Path to AIR interpreter .wasm file (aquamarine.wasm)","Maximum AIR script size in bytes.","","Returns $ANOMALY_DATA_STORE/$particle_id/$timestamp","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Instruction to execute host calls","Maximum call result size in bytes.","","","","","","","","","","","","","","","","","","","Creates <code>AVM</code> in background (on blocking threadpool)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Send particle to the interpreters pool","Timeout of a particle execution","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","A knob to enable/disable hard limits behavior in AquaVM.","Receives and ingests incoming particle: creates a new …","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Maximum heap size in bytes available for the interpreter.","","Return current size of memory. Use only for diagnostics …","","","Create AVM with the provided config.","","","","","","","","New particle data","","","","","","","","","","","","","","","Instruction to send particle to these peers","","","","Maximum particle size in bytes.","Dir to store particles data of AquaVM performance anomalies","Dir for the interpreter to persist particle data to merge …","Dir to store directories shared between services in the …","","","Number of VMs to create","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,45,45,46,7,46,46,0,0,7,45,0,45,0,0,45,0,46,0,46,45,46,46,0,0,45,46,1,9,30,30,11,11,25,64,1,9,30,31,32,45,11,46,33,34,35,11,25,64,1,9,30,31,32,45,11,46,33,34,35,25,64,1,9,30,31,32,45,11,46,33,34,35,7,25,25,33,30,25,9,30,31,32,11,33,34,35,9,30,31,32,11,33,34,35,7,25,1,30,11,25,64,1,9,30,31,32,45,11,46,33,34,35,25,64,1,9,30,31,32,45,11,46,33,34,35,25,64,1,9,30,31,32,45,11,46,33,34,35,11,25,64,1,9,30,31,32,45,11,46,33,34,35,33,9,31,34,30,31,32,45,45,11,46,46,33,34,35,25,64,1,9,30,31,32,45,11,46,46,33,34,35,25,64,1,9,30,31,32,45,11,46,33,34,35,30,1,25,64,1,9,30,31,32,45,11,46,33,34,35,11,34,25,64,1,9,30,31,32,45,11,46,33,34,35,7,25,45,30,34,7,25,25,25,64,1,9,30,31,32,11,33,34,25,64,1,9,30,31,32,45,11,46,33,34,35,33,35,35,11,30,32,32,32,64,1,31,11,25,64,1,9,30,31,32,45,11,46,33,34,35,1,9,1,11,25,64,1,9,30,31,32,45,11,46,33,34,35,46,64,11,34,25,9,30,31,32,11,33,34,35,45,46,25,64,1,9,30,31,32,45,11,46,33,34,35,25,64,1,9,30,31,32,45,11,46,33,34,35,25,64,1,9,30,31,32,45,11,46,33,34,35,11,25,64,1,9,30,31,32,45,11,46,33,34,35,78,79,80,81,82,83,78,84,82,84],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[1,[-1,-2]],2,[4,[2,3]],[5,[3]]],6,7,8],[[9,2,[4,[2,3]]],[[0,[10]]]],0,0,0,[[11,12,12,[14,[13]]],15],[-1,-3,[],[],[[16,[-2]]]],[-1,-3,[],[],[[16,[-2]]]],[-1,-3,[],[],[[16,[-2]]]],[-1,-3,[],[],[[16,[-2]]]],[-1,-3,[],[],[[16,[-2]]]],[-1,-3,[],[],[[16,[-2]]]],[-1,-3,[],[],[[16,[-2]]]],[-1,-3,[],[],[[16,[-2]]]],[-1,-3,[],[],[[16,[-2]]]],[-1,-3,[],[],[[16,[-2]]]],[-1,-3,[],[],[[16,[-2]]]],[-1,-3,[],[],[[16,[-2]]]],[-1,-3,[],[],[[16,[-2]]]],[[11,[18,[[6,[2,17,[18,[13]],2]]]]],6],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-2,-3,-4,19,20,21],[[23,[22]]],[],[[24,[2]]],[[24,[[18,[13]]]]],[[24,[[18,[13]]]]]],[[25,-1,-2,-3,-4,26,27,-5,[4,[27,28]],21,2],[[23,[22,29]]],[[24,[2]]],[[24,[[18,[13]]]]],[[24,[[18,[13]]]]],[[24,[2]]],[[24,[2]]]],[[25,-1,-2,-3,19,20,21],[[23,[22]]],[[24,[2]]],[[24,[[18,[13]]]]],[[24,[[18,[13]]]]]],0,0,[[25,-1,-2,-3,-4,26,27,-5,[4,[27,28]],2,13,13,[18,[13]],2],[[23,[22,29]]],[[24,[2]]],[[24,[[18,[13]]]]],[[24,[[18,[13]]]]],[[24,[2]]],[[24,[2]]]],[9,9],[30,30],[31,31],[32,32],[11,11],[33,33],[34,34],[35,35],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[36,[[23,[-1]]],[]],[36,[[23,[25]]]],[[[1,[-1,-2]],37,38],6,7,8],0,[[11,12,12,[14,[13]]],15],[39,[[23,[6,40]]]],[39,[[23,[6,40]]]],[39,[[23,[6,40]]]],[39,[[23,[6,40]]]],[39,[[23,[6,40]]]],[39,[[23,[6,40]]]],[39,[[23,[6,40]]]],[39,[[23,[6,40]]]],[39,[[23,[6,40]]]],[39,[[23,[6,40]]]],[39,[[23,[6,40]]]],[39,[[23,[6,40]]]],[39,[[23,[6,40]]]],[38,-1,[]],[38,-1,[]],[38,-1,[]],[38,-1,[]],[38,-1,[]],[38,-1,[]],[38,-1,[]],[38,-1,[]],[38,-1,[]],[38,-1,[]],[38,-1,[]],[38,-1,[]],[38,-1,[]],[38,-1,[]],[38,-1,[]],[38,-1,[]],[38,-1,[]],[38,-1,[]],[38,-1,[]],[38,-1,[]],[38,-1,[]],[38,-1,[]],[38,-1,[]],[38,-1,[]],[38,-1,[]],[38,-1,[]],[[11,41,38,22],42],[38,6],[38,6],[38,6],[38,6],[38,6],[38,6],[38,6],[38,6],[38,6],[38,6],[38,6],[38,6],[38,6],[[],33],[[9,43,[5,[3]]],[[0,[10]]]],0,[[],34],[[30,39],44],[[31,39],44],[[32,39],44],[[45,39],44],[[45,39],44],[[11,39],44],[[46,39],44],[[46,39],44],[[33,39],44],[[34,39],44],[[35,39],44],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[47,46],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[[23,[48,49]]],[]],[-1,[[23,[48,49]]],[]],[-1,[[23,[48,49]]],[]],[-1,[[23,[48,49]]],[]],[-1,[[23,[48,49]]],[]],[-1,[[23,[48,49]]],[]],[-1,[[23,[48,49]]],[]],[-1,[[23,[48,49]]],[]],[-1,[[23,[48,49]]],[]],[-1,[[23,[48,49]]],[]],[-1,[[23,[48,49]]],[]],[-1,[[23,[48,49]]],[]],[-1,[[23,[48,49]]],[]],0,[[[1,[-1,-2]],43,[5,[3]],50],6,7,8],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[11,[[23,[6,46]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[23,[22]],2],33],[[[23,[22]],2],33],[45,[[5,[2]]]],0,0,[-1,51,[]],[25,51],[25,51],[[15,[5,[26]],52,53],[[23,[25,29]]]],[[31,32,-1,[54,[[23,[35,45]]]],[5,[55]],[5,[56]],[5,[57]],[59,[58]],[59,[60]],61,[63,[62]]],[[65,[[6,[[64,[-2,-1]],9]]]]],8,7],[[[0,[-1]],[59,[11]],-2,[5,[55]],[59,[58]],[59,[60]],61],[[1,[-1,-2]]],7,8],[[[54,[0]],41],9],[[17,15,[5,[26]],[5,[26]],[5,[26]],[5,[26]],42],30],[[38,41],31],[15,32],[[15,15,15],11],0,0,[[-1,48],[[23,[[66,[-2]],49]]],[],67],[[-1,48],[[23,[[66,[-2]],49]]],[],67],[[-1,48],[[23,[[66,[-2]],49]]],[],67],[[-1,48],[[23,[[66,[-2]],49]]],[],67],[[-1,48],[[23,[[66,[-2]],49]]],[],67],[[-1,48],[[23,[[66,[-2]],49]]],[],67],[[-1,48],[[23,[[66,[-2]],49]]],[],67],[[-1,48],[[23,[[66,[-2]],49]]],[],67],[[-1,48],[[23,[[66,[-2]],49]]],[],67],[[-1,48],[[23,[[66,[-2]],49]]],[],67],[[-1,48],[[23,[[66,[-2]],49]]],[],67],[[-1,48],[[23,[[66,[-2]],49]]],[],67],[[-1,48],[[23,[[66,[-2]],49]]],[],67],0,0,0,0,0,0,0,0,[[[64,[-1,-2]],68],[[69,[6]]],7,8],[[[1,[-1,-2]],68],[[69,[[23,[35,45]]]]],7,8],0,[[11,12,12,[14,[13]]],[[23,[[18,[13]],46]]]],[[70,-1,-2],[[23,[6,71]]],72,[[74,[73]]]],[[70,-1,-2],[[23,[6,71]]],72,[[74,[73]]]],[[70,-1,-2],[[23,[6,71]]],72,[[74,[73]]]],[[70,-1,-2],[[23,[6,71]]],72,[[74,[73]]]],[[70,-1,-2],[[23,[6,71]]],72,[[74,[73]]]],[[70,-1,-2],[[23,[6,71]]],72,[[74,[73]]]],[[70,-1,-2],[[23,[6,71]]],72,[[74,[73]]]],[[70,-1,-2],[[23,[6,71]]],72,[[74,[73]]]],[[70,-1,-2],[[23,[6,71]]],72,[[74,[73]]]],[[70,-1,-2],[[23,[6,71]]],72,[[74,[73]]]],[[70,-1,-2],[[23,[6,71]]],72,[[74,[73]]]],[[70,-1,-2],[[23,[6,71]]],72,[[74,[73]]]],[[70,-1,-2],[[23,[6,71]]],72,[[74,[73]]]],[[[1,[-1,-2]],2],6,7,8],[[9,2],[[0,[10]]]],[[[1,[-1,-2]],37],6,7,8],[[11,12,[14,[13]],20,19,[14,[13]],22,41,38],[[23,[6,46]]]],[[-1,[66,[-2]]],[[23,[6,49]]],[],67],[[-1,[66,[-2]]],[[23,[6,49]]],[],67],[[-1,[66,[-2]]],[[23,[6,49]]],[],67],[[-1,[66,[-2]]],[[23,[6,49]]],[],67],[[-1,[66,[-2]]],[[23,[6,49]]],[],67],[[-1,[66,[-2]]],[[23,[6,49]]],[],67],[[-1,[66,[-2]]],[[23,[6,49]]],[],67],[[-1,[66,[-2]]],[[23,[6,49]]],[],67],[[-1,[66,[-2]]],[[23,[6,49]]],[],67],[[-1,[66,[-2]]],[[23,[6,49]]],[],67],[[-1,[66,[-2]]],[[23,[6,49]]],[],67],[[-1,[66,[-2]]],[[23,[6,49]]],[],67],[[-1,[66,[-2]]],[[23,[6,49]]],[],67],[46,[[5,[75]]]],[[[64,[-1,-2]]],[[76,[6]]],7,8],[[11,[14,[13]],12,12,[14,[13]]],[[23,[6,46]]]],0,[[25,[18,[13]]],[[23,[2,29]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],[-1,77,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"Plumber",0],[3,"String",380],[4,"ServiceFunction",381],[3,"HashMap",382],[4,"Option",383],[15,"tuple"],[8,"AquaRuntime",0],[8,"ParticleFunctionStatic",381],[3,"AquamarineApi",0],[8,"Future",384],[3,"ParticleDataStore",0],[15,"str"],[15,"u8"],[15,"slice"],[3,"PathBuf",385],[8,"CastFrom",386],[3,"PeerId",387],[3,"Vec",388],[3,"ParticleParameters",389],[6,"CallResults",390],[4,"KeyPair",391],[3,"RawAVMOutcome",392],[4,"Result",393],[8,"Into",394],[3,"AVMRunner",0],[15,"u64"],[15,"u32"],[3,"CallServiceResult",390],[4,"RunnerError",395],[3,"VmConfig",0],[3,"VmPoolConfig",0],[3,"DataStoreConfig",0],[3,"ParticleEffects",0],[3,"InterpretationStats",0],[3,"RemoteRoutingEffects",0],[3,"Waker",396],[3,"WorkerId",397],[15,"usize"],[3,"Formatter",398],[3,"Error",398],[3,"Duration",399],[15,"bool"],[3,"ExtendedParticle",400],[6,"Result",398],[4,"AquamarineApiError",0],[4,"DataStoreError",0],[4,"VaultError",401],[3,"FdFlags",402],[3,"Error",403],[4,"PeerScope",397],[3,"AVMMemoryStats",404],[3,"AVMRuntimeLimits",404],[15,"i32"],[3,"Sender",405],[3,"ParticleExecutorMetrics",406],[3,"VmPoolMetrics",407],[3,"HealthCheckRegistry",408],[3,"Workers",409],[3,"Arc",410],[3,"KeyStorage",411],[3,"PeerScopes",412],[4,"Event",409],[3,"Receiver",405],[3,"AquamarineBackend",0],[6,"Result",413],[3,"SetFdFlags",402],[8,"AsFilelike",414],[3,"Context",396],[4,"Poll",415],[3,"RawCodec",416],[3,"Error",417],[8,"Read",418],[3,"Cid",419],[8,"Extend",420],[8,"Error",421],[3,"JoinHandle",422],[3,"TypeId",423],[13,"SignatureVerificationFailed",370],[13,"ParticleExpired",370],[13,"OneshotCancelled",370],[13,"AquamarineDied",370],[13,"ExecutionTimedOut",370],[13,"AquamarineQueueFull",370],[13,"WorkerIsNotActive",370]],"b":[[78,"impl-AVMRunner"],[79,"impl-AquaRuntime-for-AVMRunner"],[164,"impl-Display-for-AquamarineApiError"],[165,"impl-Debug-for-AquamarineApiError"],[167,"impl-Display-for-DataStoreError"],[168,"impl-Debug-for-DataStoreError"],[235,"impl-AVMRunner"],[236,"impl-AquaRuntime-for-AVMRunner"]]},\
"async_unlock":{"doc":"This crate describes functions to work with async_std’s …","t":"FF","n":["unlock","unlock_f"],"q":[[0,"async_unlock"],[2,"tokio::sync::mutex"],[3,"core::ops::function"]],"d":["Performs computation on a value inside Mutex, unlocking …","Performs async computation on a value inside Mutex This …"],"i":[0,0],"f":[[[[1,[-1]],-2],-3,[],2,[]],[[[1,[-1]],-2],-3,[],2,[]]],"c":[],"p":[[3,"Mutex",2],[8,"FnOnce",3]],"b":[]},\
"chain_connector":{"doc":"","t":"NNDEAIDEAANNNNDNNNARNNNDNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLKLKLKLKLKLLLLLLLKLLKLKLMLMLLLLLLMLLLLLLFFMMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLEDNESSDNMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDDNDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLMNDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMMMESMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDDLLLLLLLLLLLLLLLLLNDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDDLLLLLLLLLLLLLLLLLNDDNDDNDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNENNNSNEMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDESMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDDNDDLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLNDDLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLL","n":["Active","AddressParseError","CCInitParams","CCStatus","Capacity","ChainConnector","CommitmentId","ConnectorError","Core","Deal","DecodeConstHex","DecodeData","DecodeHex","Failed","HttpChainConnector","Inactive","InvalidU256","IpcInternalNetworkError","Offer","PEER_NOT_EXISTS","ParseChainDataFailed","ParseChainDataFailedAlloy","ParseError","PendingUnit","Removed","ResponseParseError","RpcCallError","RpcError","WaitDelegation","WaitStart","as_","as_","as_","as_","as_","as_","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","compare","current_epoch","debug","debug","debug","debug","debug","debug","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","detokenize","difficulty","drop","drop","drop","drop","drop","drop","encode_topic","encode_topic_preimage","epoch_duration","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","exit_deal","exit_deal","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_cc_init_params","get_cc_init_params","get_commitment_status","get_commitment_status","get_compute_units","get_compute_units","get_current_commitment_id","get_current_commitment_id","get_deal_statuses","get_deal_statuses","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_global_nonce","get_global_nonce","get_hash","get_tx_receipts","get_tx_receipts","get_tx_statuses","get_tx_statuses","global_nonce","hash","id","init","init","init","init","init","init","init_timestamp","into","into","into","into","into","into","is_commitment_not_active","is_too_many_proofs","max_proofs_per_epoch","min_proofs_per_epoch","new","new","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","partial_cmp","references","references","references","references","references","references","send_tx","serialize","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","source","start_epoch","stv_abi_encode_packed_to","stv_eip712_data_word","stv_to_tokens","submit_proof","submit_proof","to_owned","to_owned","to_string","to_string","topic_preimage_length","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_check","type_id","type_id","type_id","type_id","type_id","type_id","valid_token","vzip","vzip","vzip","vzip","vzip","vzip","CapacityCalls","CapacityCommitmentIsNotActive","CapacityCommitmentIsNotActive","CapacityErrors","SELECTORS","SELECTORS","TooManyProofs","TooManyProofs","_0","_0","abi_decode_raw","abi_decode_raw","abi_decode_returns","abi_decode_returns","abi_decode_returns","abi_encode_raw","abi_encode_raw","abi_encoded_size","abi_encoded_size","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","commitmentId","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","from","from","from","from","getGlobalNonce","getGlobalNonceCall","getGlobalNonceReturn","getStatus","getStatusCall","getStatusReturn","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","localUnitNonce","new","new","new","new","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","references","references","references","references","references","references","references","references","references","references","resultHash","selector","selector","selector_at","selector_at","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","status","submitProof","submitProofCall","submitProofReturn","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","tokenize","tokenize","tokenize","tokenize","tokenize","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unitId","valid_selector","valid_selector","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","code","data","message","CoreCalls","SELECTORS","_0","_0","_0","_0","_0","_0","_0","_0","abi_decode_raw","abi_decode_returns","abi_decode_returns","abi_decode_returns","abi_decode_returns","abi_decode_returns","abi_decode_returns","abi_decode_returns","abi_decode_returns","abi_encode_raw","abi_encoded_size","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","capacityCall","capacityReturn","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","currentEpoch","currentEpochCall","currentEpochReturn","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","difficulty","difficultyCall","difficultyReturn","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","epochDuration","epochDurationCall","epochDurationReturn","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","initTimestamp","initTimestampCall","initTimestampReturn","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","market","marketCall","marketReturn","maxProofsPerEpoch","maxProofsPerEpochCall","maxProofsPerEpochReturn","minProofsPerEpoch","minProofsPerEpochCall","minProofsPerEpochReturn","new","new","new","new","new","new","new","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","references","references","references","references","references","references","references","references","references","references","references","references","references","references","references","references","references","selector","selector_at","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","tokenize","tokenize","tokenize","tokenize","tokenize","tokenize","tokenize","tokenize","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","valid_selector","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ACTIVE","DealCalls","ENDED","INSUFFICIENT_FUNDS","NOT_ENOUGH_WORKERS","SELECTORS","SMALL_BALANCE","Status","_0","abi_decode_raw","abi_decode_returns","abi_encode_raw","abi_encoded_size","as_","as_","as_","as_","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","debug","debug","debug","debug","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","detokenize","drop","drop","drop","drop","encode_topic","encode_topic_preimage","fmt","from","from","from","from","getStatus","getStatusCall","getStatusReturn","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","init","init","init","init","into","into","into","into","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","references","references","references","references","selector","selector_at","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","stv_abi_encode_packed_to","stv_eip712_data_word","stv_to_tokens","to_owned","to_owned","to_owned","tokenize","topic_preimage_length","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_check","type_id","type_id","type_id","type_id","valid_selector","valid_token","vzip","vzip","vzip","vzip","ComputePeer","ComputeUnit","OfferCalls","SELECTORS","_0","_0","abi_decode_raw","abi_decode_returns","abi_decode_returns","abi_decode_returns","abi_encode_raw","abi_encoded_size","as_","as_","as_","as_","as_","as_","as_","as_","as_","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","commitmentId","deal","debug","debug","debug","debug","debug","debug","debug","debug","debug","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","detokenize","detokenize","drop","drop","drop","drop","drop","drop","drop","drop","drop","eip712_components","eip712_components","eip712_encode_data","eip712_encode_data","eip712_encode_type","eip712_encode_type","eip712_root_type","eip712_root_type","encode_topic","encode_topic","encode_topic_preimage","encode_topic_preimage","from","from","from","from","from","from","from","from","from","getComputePeer","getComputePeerCall","getComputePeerReturn","getComputeUnits","getComputeUnitsCall","getComputeUnitsReturn","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","id","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","new","new","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","offerId","owner","peerId","peerId","references","references","references","references","references","references","references","references","references","returnComputeUnitFromDeal","returnComputeUnitFromDealCall","returnComputeUnitFromDealReturn","selector","selector_at","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","startEpoch","stv_abi_encode_packed_to","stv_abi_encode_packed_to","stv_abi_encoded_size","stv_abi_encoded_size","stv_eip712_data_word","stv_eip712_data_word","stv_to_tokens","stv_to_tokens","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","tokenize","tokenize","tokenize","topic_preimage_length","topic_preimage_length","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unitCount","unitId","valid_selector","valid_token","valid_token","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"chain_connector"],[221,"chain_connector::Capacity"],[474,"chain_connector::ConnectorError"],[477,"chain_connector::Core"],[895,"chain_connector::Deal"],[1008,"chain_connector::Offer"],[1260,"bnum::cast"],[1261,"core::cmp"],[1262,"core::fmt"],[1263,"core::fmt"],[1264,"serde::de"],[1265,"alloy_sol_types::abi::token"],[1266,"alloc::vec"],[1267,"ccp_shared::types::cuid"],[1268,"core::future::future"],[1269,"alloc::boxed"],[1270,"core::pin"],[1271,"core::fmt"],[1272,"chain_data::error"],[1273,"hex::error"],[1274,"clarity::error"],[1275,"alloc::string"],[1276,"jsonrpsee_core::client::error"],[1277,"alloy_sol_types::errors"],[1278,"const_hex::error"],[1279,"types::deal_id"],[1280,"system_interface::fs::fd_flags"],[1281,"std::io::error"],[1282,"core::hash"],[1283,"core::marker"],[1284,"core::hash"],[1285,"libp2p_identity::peer_id"],[1286,"alloc::sync"],[1287,"particle_builtins::builtins"],[1288,"std::collections::hash::map"],[1289,"eyre"],[1290,"core::option"],[1291,"ruint::aliases"],[1292,"system_interface::fs::fd_flags"],[1293,"libipld_core::raw"],[1294,"anyhow"],[1295,"std::io"],[1296,"cid::cid"],[1297,"core::iter::traits::collect"],[1298,"serde::ser"],[1299,"core::error"],[1300,"alloy_sol_types"],[1301,"ccp_shared::proof"],[1302,"alloy_sol_types::errors"],[1303,"alloc::borrow"]],"d":["","","","","Module containing a contract’s types and functions.","","","","Module containing a contract’s types and functions.","Module containing a contract’s types and functions.","","","","","","","","","Module containing a contract’s types and functions.","“Peer doesn’t exists” in Market.sol","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Container for all the <code>Capacity</code> function calls.","@dev Capacity commitment is not active Custom error with …","","Container for all the <code>Capacity</code> custom errors.","All the selectors of this enum.","All the selectors of this enum.","@dev Throws if peer sent too many proofs for the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Function with signature <code>getGlobalNonce()</code> and selector …","Container type for the return parameters of the …","","@dev Returns the commitment status @param commitmentId …","@dev Returns the commitment status @param commitmentId …","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","@dev Submits a proof for the commitment @param unitId …","@dev Submits a proof for the commitment @param unitId …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Code","Optional data","Message","Container for all the <code>Core</code> function calls.","All the selectors of this enum.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Function with signature <code>capacity()</code> and selector <code>0x5cfc1a51</code>.","Container type for the return parameters of the <code>capacity()</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","@dev Returns current epoch @return current epoch number …","@dev Returns current epoch @return current epoch number …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","@dev Returns the difficulty for CCP Function with …","@dev Returns the difficulty for CCP Container type for the …","","","","","","","","","","","","","","","","","","","@dev Returns epoch duration @return epochDuration in …","@dev Returns epoch duration @return epochDuration in …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","@dev Returns epoch init timestamp @return initTimestamp in …","@dev Returns epoch init timestamp @return initTimestamp in …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Function with signature <code>market()</code> and selector <code>0x80f55605</code>.","Container type for the return parameters of the <code>market()</code> …","","@dev Returns the max randomX proofs per epoch Function …","@dev Returns the max randomX proofs per epoch Container …","","@dev Returns the min required randomX proofs per epoch for …","@dev Returns the min required randomX proofs per epoch for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Container for all the <code>Deal</code> function calls.","","","","All the selectors of this enum.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","@dev Returns the status of the deal Function with …","@dev Returns the status of the deal Container type for the …","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Container for all the <code>Offer</code> function calls.","All the selectors of this enum.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","@dev Returns the compute peer info Function with signature …","@dev Returns the compute peer info Container type for the …","","@dev Returns the compute units info of a peer Function …","@dev Returns the compute units info of a peer Container …","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","@dev Return the compute unit from a deal Function with …","@dev Return the compute unit from a deal Container type …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[2,21,0,0,0,0,0,0,0,0,21,21,21,2,0,2,21,21,0,0,21,21,21,0,2,21,21,21,2,2,20,105,21,2,3,5,20,105,21,2,3,5,20,105,21,2,3,5,2,3,2,3,5,5,105,20,105,21,2,3,5,20,105,21,2,3,5,20,105,21,2,3,5,3,2,105,20,105,21,2,3,5,2,2,105,2,5,5,5,5,5,5,106,20,21,21,2,3,3,5,20,105,21,21,21,21,21,21,21,21,21,2,3,5,5,106,20,106,20,106,20,106,20,106,20,20,105,21,2,3,5,106,20,5,106,20,106,20,105,5,5,20,105,21,2,3,5,105,20,105,21,2,3,5,0,0,105,105,20,3,5,20,105,21,2,3,5,5,20,105,21,2,3,5,20,3,20,105,21,2,3,5,21,5,2,2,2,106,20,2,3,21,3,2,20,105,21,2,2,3,5,20,105,21,2,3,5,2,20,105,21,2,3,5,2,20,105,21,2,3,5,0,0,66,0,65,66,0,66,70,72,65,66,69,71,73,65,66,65,66,65,66,67,68,69,70,71,72,73,74,65,66,67,68,69,70,71,72,73,74,65,66,67,68,69,70,71,72,73,74,67,68,69,70,71,72,73,74,67,68,69,70,71,72,73,74,71,65,66,67,68,69,70,71,72,73,74,65,66,67,68,69,70,71,72,73,74,65,66,67,68,69,70,71,72,73,74,65,66,67,68,69,70,71,72,73,74,65,66,67,68,69,70,71,72,73,74,65,0,0,65,0,0,65,66,67,68,69,70,71,72,73,74,65,66,67,68,69,70,71,72,73,74,65,66,67,68,69,70,71,72,73,74,73,67,68,69,71,73,65,66,67,68,69,70,71,72,73,74,65,66,67,68,69,70,71,72,73,74,73,65,66,65,66,65,66,67,68,69,70,71,72,73,74,68,65,0,0,67,68,69,70,71,72,73,74,67,68,69,71,73,65,66,67,68,69,70,71,72,73,74,65,66,67,68,69,70,71,72,73,74,65,66,67,68,69,70,71,72,73,74,73,65,66,65,66,67,68,69,70,71,72,73,74,107,107,107,0,75,77,79,81,83,85,87,89,91,75,76,78,80,82,84,86,88,90,75,75,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,75,0,0,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,75,0,0,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,75,0,0,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,75,0,0,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,75,0,0,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,75,0,0,75,0,0,75,0,0,76,78,80,82,84,86,88,90,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,75,75,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,76,78,80,82,84,86,88,90,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,75,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,0,93,93,93,92,93,0,95,92,94,92,92,92,93,94,95,92,93,94,95,92,93,94,95,93,94,95,93,94,95,92,93,94,95,92,93,94,95,92,93,94,95,93,92,93,94,95,93,93,93,92,93,94,95,92,0,0,92,93,94,95,92,93,94,95,92,93,94,95,94,92,93,94,95,92,93,94,95,92,92,92,93,94,95,93,93,93,93,94,95,94,93,92,93,93,94,95,92,93,94,95,93,92,93,94,95,92,93,92,93,94,95,0,0,0,96,99,101,96,98,100,102,96,96,96,97,31,98,99,100,101,102,103,96,97,31,98,99,100,101,102,103,96,97,31,98,99,100,101,102,103,97,31,98,99,100,101,102,103,97,31,98,99,100,101,102,103,97,31,96,97,31,98,99,100,101,102,103,96,97,31,98,99,100,101,102,103,96,97,31,98,99,100,101,102,103,97,31,96,97,31,98,99,100,101,102,103,97,31,97,31,97,31,97,31,97,31,97,31,96,97,31,98,99,100,101,102,103,96,0,0,96,0,0,96,97,31,98,99,100,101,102,103,31,96,97,31,98,99,100,101,102,103,96,97,31,98,99,100,101,102,103,98,100,102,96,97,31,98,99,100,101,102,103,97,97,98,100,96,97,31,98,99,100,101,102,103,96,0,0,96,96,96,97,31,98,99,100,101,102,103,31,97,31,97,31,97,31,97,31,97,31,98,99,100,101,102,103,98,100,102,97,31,96,97,31,98,99,100,101,102,103,96,97,31,98,99,100,101,102,103,96,97,31,98,99,100,101,102,103,97,102,96,97,31,96,97,31,98,99,100,101,102,103],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,2],[3,3],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[5,5],6],[[-1,-2],6,[],[]],0,[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[-1,[[9,[3]]],11],[[]],0,[10,4],[10,4],[10,4],[10,4],[10,4],[10,4],[[],12],[[[14,[13]]],4],0,[[2,2],15],[[5,5],15],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,16],[[19,[[18,[17]]]]],[]],[[20,16],[[19,[[18,[17]]]]]],[[21,7],22],[[21,7],22],[[2,7],22],[[3,7],22],[[3,7],22],[[5,7],22],[-1,-1,[]],[-1,-1,[]],[23,21],[24,21],[-1,-1,[]],[25,21],[26,21],[27,21],[28,21],[29,21],[30,21],[-1,-1,[]],[-1,-1,[]],[31,5],[-1,-1,[]],[-1,[[19,[[18,[17]]]]],[]],[20,[[19,[[18,[17]]]]]],[[-1,3],[[19,[[18,[17]]]]],[]],[[20,3],[[19,[[18,[17]]]]]],[-1,[[19,[[18,[17]]]]],[]],[20,[[19,[[18,[17]]]]]],[-1,[[19,[[18,[17]]]]],[]],[20,[[19,[[18,[17]]]]]],[[-1,[14,[32]]],[[19,[[18,[17]]]]],[]],[[20,[14,[32]]],[[19,[[18,[17]]]]]],[-1,[[9,[33,34]]],[]],[-1,[[9,[33,34]]],[]],[-1,[[9,[33,34]]],[]],[-1,[[9,[33,34]]],[]],[-1,[[9,[33,34]]],[]],[-1,[[9,[33,34]]],[]],[-1,[[19,[[18,[17]]]]],[]],[20,[[19,[[18,[17]]]]]],[[-1,-2],35,[36,37],38],[[-1,[14,[39]]],[[19,[[18,[17]]]]],[]],[[20,[14,[39]]],[[19,[[18,[17]]]]]],[[-1,[14,[39]]],[[19,[[18,[17]]]]],[]],[[20,[14,[39]]],[[19,[[18,[17]]]]]],0,[[5,-1],4,40],0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[41,15],[41,15],0,0,[[42,43],[[47,[[4,[[44,[20]],[46,[39,45]]]]]]]],[[[48,[13]]],[[49,[3]]]],[[16,50],5],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[5,5],[[49,[6]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[20,[14,[13]],41],[[9,[39,21]]]],[[3,-1],9,58],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[21,[[49,[59]]]],0,[[2,[14,[13]]],4],[2,60],[2],[[-1,61],[[19,[[18,[17]]]]],[]],[[20,61],[[19,[[18,[17]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,39,[]],[-1,39,[]],[[],10],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[13,[[62,[2]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[],[[62,[4]]]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[[],15],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[[[48,[13]],[64,[13]],15],[[62,[65]]]],[[[48,[13]],[64,[13]],15],[[62,[66]]]],[[[64,[13]],15],62],[[[64,[13]],15],62],[[[64,[13]],15],62],[[65,[14,[13]]],4],[[66,[14,[13]]],4],[65,10],[66,10],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[67,67],[68,68],[69,69],[70,70],[71,71],[72,72],[73,73],[74,74],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],0,[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,4],[10,4],[10,4],[10,4],[10,4],[10,4],[10,4],[10,4],[10,4],[10,4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,0,[-1,[[9,[33,34]]],[]],[-1,[[9,[33,34]]],[]],[-1,[[9,[33,34]]],[]],[-1,[[9,[33,34]]],[]],[-1,[[9,[33,34]]],[]],[-1,[[9,[33,34]]],[]],[-1,[[9,[33,34]]],[]],[-1,[[9,[33,34]]],[]],[-1,[[9,[33,34]]],[]],[-1,[[9,[33,34]]],[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],67],[[],68],[[],69],[[],71],[[],73],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],0,[65,[[48,[13]]]],[66,[[48,[13]]]],[10,[[49,[[48,[13]]]]]],[10,[[49,[[48,[13]]]]]],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[67],[68],[69],[71],[73],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],0,[[[48,[13]]],15],[[[48,[13]]],15],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[[48,[13]],[64,[13]],15],[[62,[75]]]],[[[64,[13]],15],62],[[[64,[13]],15],62],[[[64,[13]],15],62],[[[64,[13]],15],62],[[[64,[13]],15],62],[[[64,[13]],15],62],[[[64,[13]],15],62],[[[64,[13]],15],62],[[75,[14,[13]]],4],[75,10],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[76,76],[77,77],[78,78],[79,79],[80,80],[81,81],[82,82],[83,83],[84,84],[85,85],[86,86],[87,87],[88,88],[89,89],[90,90],[91,91],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],0,0,0,[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],0,0,0,[10,4],[10,4],[10,4],[10,4],[10,4],[10,4],[10,4],[10,4],[10,4],[10,4],[10,4],[10,4],[10,4],[10,4],[10,4],[10,4],[10,4],0,0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[[9,[33,34]]],[]],[-1,[[9,[33,34]]],[]],[-1,[[9,[33,34]]],[]],[-1,[[9,[33,34]]],[]],[-1,[[9,[33,34]]],[]],[-1,[[9,[33,34]]],[]],[-1,[[9,[33,34]]],[]],[-1,[[9,[33,34]]],[]],[-1,[[9,[33,34]]],[]],[-1,[[9,[33,34]]],[]],[-1,[[9,[33,34]]],[]],[-1,[[9,[33,34]]],[]],[-1,[[9,[33,34]]],[]],[-1,[[9,[33,34]]],[]],[-1,[[9,[33,34]]],[]],[-1,[[9,[33,34]]],[]],[-1,[[9,[33,34]]],[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[[],76],[[],78],[[],80],[[],82],[[],84],[[],86],[[],88],[[],90],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[75,[[48,[13]]]],[10,[[49,[[48,[13]]]]]],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[76],[78],[80],[82],[84],[86],[88],[90],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[[[48,[13]]],15],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[[[48,[13]],[64,[13]],15],[[62,[92]]]],[[[64,[13]],15],62],[[92,[14,[13]]],4],[92,10],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[93,93],[94,94],[95,95],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[[]],[10,4],[10,4],[10,4],[10,4],[[],12],[[[14,[13]]],4],[[93,7],22],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,[-1,[[9,[33,34]]],[]],[-1,[[9,[33,34]]],[]],[-1,[[9,[33,34]]],[]],[-1,[[9,[33,34]]],[]],[[],10],[[],10],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],94],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[92,[[48,[13]]]],[10,[[49,[[48,[13]]]]]],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[93,[14,[13]]],4],[93,60],[93],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[94],[[],10],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[13,[[62,[93]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[[],[[62,[4]]]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[[[48,[13]]],15],[[],15],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[[[48,[13]],[64,[13]],15],[[62,[96]]]],[[[64,[13]],15],62],[[[64,[13]],15],62],[[[64,[13]],15],62],[[96,[14,[13]]],4],[96,10],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[97,97],[31,31],[98,98],[99,99],[100,100],[101,101],[102,102],[103,103],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],0,0,[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[7,[[9,[4,8]]]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[10,-1,[]],[[]],[[]],[10,4],[10,4],[10,4],[10,4],[10,4],[10,4],[10,4],[10,4],[10,4],[[],[[14,[[104,[41]]]]]],[[],[[14,[[104,[41]]]]]],[97,[[14,[13]]]],[31,[[14,[13]]]],[[],[[104,[41]]]],[[],[[104,[41]]]],[[],[[104,[41]]]],[[],[[104,[41]]]],[[],12],[[],12],[[[14,[13]]],4],[[[14,[13]]],4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,0,[-1,[[9,[33,34]]],[]],[-1,[[9,[33,34]]],[]],[-1,[[9,[33,34]]],[]],[-1,[[9,[33,34]]],[]],[-1,[[9,[33,34]]],[]],[-1,[[9,[33,34]]],[]],[-1,[[9,[33,34]]],[]],[-1,[[9,[33,34]]],[]],[-1,[[9,[33,34]]],[]],0,[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],98],[[],100],[[],102],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[-1,33],[[9,[[51,[-2]],34]]],[],52],[[-1,33],[[9,[[51,[-2]],34]]],[],52],0,0,0,0,[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],[[53,-1,-2],[[9,[4,54]]],55,[[57,[56]]]],0,0,0,[96,[[48,[13]]]],[10,[[49,[[48,[13]]]]]],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],[[-1,[51,[-2]]],[[9,[4,34]]],[],52],0,[[97,[14,[13]]],4],[[31,[14,[13]]],4],[97,10],[31,10],[97,60],[31,60],[97],[31],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[98],[100],[102],[[],10],[[],10],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],[-1,63,[]],0,0,[[[48,[13]]],15],[[],15],[[],15],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[8,"CastFrom",1260],[4,"CCStatus",0],[3,"CommitmentId",0],[15,"tuple"],[3,"PendingUnit",0],[4,"Ordering",1261],[3,"Formatter",1262],[3,"Error",1262],[4,"Result",1263],[15,"usize"],[8,"Deserializer",1264],[3,"WordToken",1265],[15,"u8"],[3,"Vec",1266],[15,"bool"],[3,"CUID",1267],[8,"Future",1268],[3,"Box",1269],[3,"Pin",1270],[3,"HttpChainConnector",0],[4,"ConnectorError",0],[6,"Result",1262],[3,"Error",1271],[4,"ChainDataError",1272],[4,"FromHexError",1273],[4,"Error",1274],[3,"FromUtf8Error",1275],[4,"Error",1276],[4,"Error",1277],[4,"FromHexError",1278],[3,"ComputeUnit",1008],[3,"DealId",1279],[3,"FdFlags",1280],[3,"Error",1281],[15,"u64"],[8,"Hash",1282],[8,"Sized",1283],[8,"BuildHasher",1282],[3,"String",1275],[8,"Hasher",1282],[15,"str"],[3,"ChainConfig",1284],[3,"PeerId",1285],[3,"Arc",1286],[3,"CustomService",1287],[3,"HashMap",1288],[6,"Result",1289],[15,"array"],[4,"Option",1290],[6,"U256",1291],[3,"SetFdFlags",1280],[8,"AsFilelike",1292],[3,"RawCodec",1293],[3,"Error",1294],[8,"Read",1295],[3,"Cid",1296],[8,"Extend",1297],[8,"Serializer",1298],[8,"Error",1299],[6,"Word",1300],[3,"CCProof",1301],[6,"Result",1277],[3,"TypeId",1302],[15,"slice"],[4,"CapacityCalls",221],[4,"CapacityErrors",221],[3,"TooManyProofs",221],[3,"CapacityCommitmentIsNotActive",221],[3,"getGlobalNonceCall",221],[3,"getGlobalNonceReturn",221],[3,"getStatusCall",221],[3,"getStatusReturn",221],[3,"submitProofCall",221],[3,"submitProofReturn",221],[4,"CoreCalls",477],[3,"capacityCall",477],[3,"capacityReturn",477],[3,"marketCall",477],[3,"marketReturn",477],[3,"currentEpochCall",477],[3,"currentEpochReturn",477],[3,"epochDurationCall",477],[3,"epochDurationReturn",477],[3,"initTimestampCall",477],[3,"initTimestampReturn",477],[3,"difficultyCall",477],[3,"difficultyReturn",477],[3,"minProofsPerEpochCall",477],[3,"minProofsPerEpochReturn",477],[3,"maxProofsPerEpochCall",477],[3,"maxProofsPerEpochReturn",477],[4,"DealCalls",895],[4,"Status",895],[3,"getStatusCall",895],[3,"getStatusReturn",895],[4,"OfferCalls",1008],[3,"ComputePeer",1008],[3,"getComputePeerCall",1008],[3,"getComputePeerReturn",1008],[3,"getComputeUnitsCall",1008],[3,"getComputeUnitsReturn",1008],[3,"returnComputeUnitFromDealCall",1008],[3,"returnComputeUnitFromDealReturn",1008],[4,"Cow",1303],[3,"CCInitParams",0],[8,"ChainConnector",0],[13,"RpcCallError",474]],"b":[[94,"impl-Debug-for-ConnectorError"],[95,"impl-Display-for-ConnectorError"],[97,"impl-Debug-for-CommitmentId"],[98,"impl-Display-for-CommitmentId"],[102,"impl-From%3CError%3E-for-ConnectorError"],[103,"impl-From%3CChainDataError%3E-for-ConnectorError"],[105,"impl-From%3CFromHexError%3E-for-ConnectorError"],[106,"impl-From%3CError%3E-for-ConnectorError"],[107,"impl-From%3CFromUtf8Error%3E-for-ConnectorError"],[108,"impl-From%3CClientError%3E-for-ConnectorError"],[109,"impl-From%3CError%3E-for-ConnectorError"],[110,"impl-From%3CFromHexError%3E-for-ConnectorError"]]},\
"chain_data":{"doc":"","t":"INEINNNNNNENNNNNNDENNNNNNMLLLLLLLLLLLLMLLKLLLLLLLLLLLLLLLLLLLLLKFFLKFFFFFFMLKLLLLLLLLMLLLLLLLLLLLLLLLLMMMM","n":["ChainData","ChainData","ChainDataError","ChainEvent","DecodeConstHex","DecodeHex","DecodeHex","Empty","EthError","EthError","EventField","Indexed","InvalidComputePeerId","InvalidComputePeerId","InvalidParsedToken","InvalidParsedToken","InvalidTokenSize","Log","LogParseError","MissingParsedToken","MissingParsedToken","MissingToken","MissingTopic","NoTokens","NotIndexed","block_number","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","data","deserialize","eq","event_name","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","new","next","next_opt","param_type","parse","parse_chain_data","parse_log","parse_peer_id","peer_id_from_hex","peer_id_to_bytes","peer_id_to_hex","removed","serialize","signature","source","source","to_owned","to_owned","to_string","to_string","topic","topic","topics","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","event_field","event_field","position","position"],"q":[[0,"chain_data"],[102,"chain_data::LogParseError"],[106,"core::result"],[107,"serde::de"],[108,"core::fmt"],[109,"core::fmt"],[110,"ethabi::errors"],[111,"const_hex::error"],[112,"hex::error"],[113,"alloy_sol_types::errors"],[114,"alloc::string"],[115,"core::iter::traits::iterator"],[116,"core::ops::function"],[117,"ethabi::param_type::param_type"],[118,"core::marker"],[119,"ethabi::token::token"],[120,"alloc::vec"],[121,"alloy_sol_types::types::event"],[122,"libp2p_identity::peer_id"],[123,"serde::ser"],[124,"core::error"],[125,"core::option"],[126,"core::any"]],"d":["","","","","","","","","","","Kind of the field in Chain Event","If field is indexed, it’s passed among topics","","","","","","","","","","","","","If field is not indexed, it’s passed in log.data","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Parse data from chain. Accepts data with and without “0x…","","","","This code works only for PeerId generated from ed25519 …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,11,0,0,11,10,11,10,10,11,0,1,10,11,10,11,10,0,0,10,11,11,11,11,1,2,1,10,2,11,1,10,2,11,1,2,1,2,2,2,1,34,1,10,10,2,11,11,1,10,10,10,2,11,11,11,11,11,11,1,10,2,11,35,0,0,1,34,0,0,0,0,0,0,2,2,34,10,11,1,2,10,11,34,34,2,1,10,2,11,1,10,2,11,1,10,2,11,1,10,2,11,36,37,36,37],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[2,2],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],0,[-1,[[4,[2]]],5],[[1,1],6],[[],7],[[1,8],9],[[10,8],9],[[10,8],9],[[2,8],9],[[11,8],9],[[11,8],9],[-1,-1,[]],[12,10],[13,10],[-1,-1,[]],[-1,-1,[]],[14,11],[15,11],[10,11],[16,11],[12,11],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[17,-1],-2,[],[]],[[-1,7,-2],[[4,[-3,10]]],18,19,[]],[[-1,7,-2],[[4,[-3,10]]],18,19,[]],[1,20],[-1,[[4,[-2,10]]],18,21],[[7,[22,[20]]],[[4,[[24,[23]],10]]]],[2,[[4,[-1,11]]],25],[[[24,[26]]],[[4,[27,12]]]],[7,[[28,[27]]]],[27,[[29,[26]]]],[27,17],0,[[2,-1],4,30],[[],[[24,[1]]]],[10,[[32,[31]]]],[11,[[32,[31]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,17,[]],[-1,17,[]],[[],17],[[],17],0,[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,33,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0],"c":[],"p":[[4,"EventField",0],[3,"Log",0],[15,"tuple"],[4,"Result",106],[8,"Deserializer",107],[15,"bool"],[15,"str"],[3,"Formatter",108],[6,"Result",108],[4,"ChainDataError",0],[4,"LogParseError",0],[4,"ParseError",109],[4,"Error",110],[4,"FromHexError",111],[4,"FromHexError",112],[4,"Error",113],[3,"String",114],[8,"Iterator",115],[8,"Fn",116],[4,"ParamType",117],[8,"Sized",118],[15,"slice"],[4,"Token",119],[3,"Vec",120],[8,"SolEvent",121],[15,"u8"],[3,"PeerId",109],[6,"Result",122],[15,"array"],[8,"Serializer",123],[8,"Error",124],[4,"Option",125],[3,"TypeId",126],[8,"ChainData",0],[8,"ChainEvent",0],[13,"MissingToken",102],[13,"MissingTopic",102]],"b":[[43,"impl-Debug-for-ChainDataError"],[44,"impl-Display-for-ChainDataError"],[46,"impl-Debug-for-LogParseError"],[47,"impl-Display-for-LogParseError"],[49,"impl-From%3CParseError%3E-for-ChainDataError"],[50,"impl-From%3CError%3E-for-ChainDataError"],[53,"impl-From%3CFromHexError%3E-for-LogParseError"],[54,"impl-From%3CFromHexError%3E-for-LogParseError"],[55,"impl-From%3CChainDataError%3E-for-LogParseError"],[56,"impl-From%3CError%3E-for-LogParseError"],[57,"impl-From%3CParseError%3E-for-LogParseError"]]},\
"chain_listener":{"doc":"","t":"DLLLLLLLLLLLLLLLLLLLLL","n":["ChainListener","as_","borrow","borrow_mut","create_ws_client","debug","deref","deref_mut","drop","from","get_fd_flags","init","into","new","new_set_fd_flags","references","set_fd_flags","start","try_from","try_into","type_id","vzip"],"q":[[0,"chain_listener"],[22,"bnum::cast"],[23,"jsonrpsee_core::client::async_client"],[24,"jsonrpsee_core::client::error"],[25,"core::result"],[26,"core::fmt"],[27,"core::fmt"],[28,"std::io::error"],[29,"server_config::node_config"],[30,"server_config::node_config"],[31,"chain_connector::connector"],[32,"alloc::sync"],[33,"core_manager::manager"],[34,"ccp_rpc_client"],[35,"core::option"],[36,"std::path"],[37,"peer_metrics::chain_listener"],[38,"system_interface::fs::fd_flags"],[39,"libipld_core::raw"],[40,"anyhow"],[41,"std::io"],[42,"cid::cid"],[43,"core::iter::traits::collect"],[44,"tokio::runtime::task::join"],[45,"core::any"]],"d":["","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22],"f":[0,[-1,-3,[],[],[[1,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[2,[[5,[3,4]]]],[6,[[5,[7,8]]]],[9,-1,[]],[9,-1,[]],[9,7],[-1,-1,[]],[-1,[[5,[10,11]]],[]],[[],9],[-1,-2,[],[]],[[12,3,13,14,[16,[15]],[16,[17]],[19,[18]],20,[19,[21]]],22],[[-1,10],[[5,[[23,[-2]],11]]],[],24],[[25,-1,-2],[[5,[7,26]]],27,[[29,[28]]]],[[-1,[23,[-2]]],[[5,[7,11]]],[],24],[22,[[30,[7]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,31,[]],[-1,-2,[],[]]],"c":[],"p":[[8,"CastFrom",22],[15,"str"],[3,"Client",23],[4,"Error",24],[4,"Result",25],[3,"Formatter",26],[15,"tuple"],[3,"Error",26],[15,"usize"],[3,"FdFlags",27],[3,"Error",28],[3,"ChainConfig",29],[3,"ChainListenerConfig",29],[3,"PeerId",30],[8,"ChainConnector",31],[3,"Arc",32],[4,"CoreManager",33],[3,"CCPRpcHttpClient",34],[4,"Option",35],[3,"PathBuf",36],[3,"ChainListenerMetrics",37],[3,"ChainListener",0],[3,"SetFdFlags",27],[8,"AsFilelike",38],[3,"RawCodec",39],[3,"Error",40],[8,"Read",41],[3,"Cid",42],[8,"Extend",43],[3,"JoinHandle",44],[3,"TypeId",45]],"b":[]},\
"cid_utils":{"doc":"","t":"DLLLLLLLLLLLLLLLLLLLLLLLL","n":["Hash","as_bytes","borrow","borrow_mut","clone","clone_into","deserialize","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from_string","hash","into","new","references","serialize","to_owned","to_string","try_from","try_into","type_id"],"q":[[0,"cid_utils"],[25,"alloc::vec"],[26,"core::result"],[27,"serde::de"],[28,"core::fmt"],[29,"core::fmt"],[30,"core::hash"],[31,"eyre"],[32,"libipld_core::raw"],[33,"anyhow"],[34,"std::io"],[35,"cid::cid"],[36,"core::iter::traits::collect"],[37,"serde::ser"],[38,"alloc::string"],[39,"core::any"]],"d":["","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[1,[[3,[2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[-1,-2],4,[],[]],[-1,[[5,[1]]],6],[[1,1],7],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[1,8],9],[[1,8],9],[-1,-1,[]],[10,[[5,[1,11]]]],[[1,-1],4,12],[-1,-2,[],[]],[[[13,[2]]],[[14,[1]]]],[[15,-1,-2],[[5,[4,16]]],17,[[19,[18]]]],[[1,-1],5,20],[-1,-2,[],[]],[-1,21,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,22,[]]],"c":[],"p":[[3,"Hash",0],[15,"u8"],[3,"Vec",25],[15,"tuple"],[4,"Result",26],[8,"Deserializer",27],[15,"bool"],[3,"Formatter",28],[6,"Result",28],[15,"str"],[4,"Error",29],[8,"Hasher",30],[15,"slice"],[6,"Result",31],[3,"RawCodec",32],[3,"Error",33],[8,"Read",34],[3,"Cid",35],[8,"Extend",36],[8,"Serializer",37],[3,"String",38],[3,"TypeId",39]],"b":[[11,"impl-Display-for-Hash"],[12,"impl-Debug-for-Hash"]]},\
"config_utils":{"doc":"","t":"FFFFFFFF","n":["blueprint_dir","modules_dir","particles_anomaly_dir","particles_dir","particles_vault_dir","services_dir","to_peer_id","workdir"],"q":[[0,"config_utils"],[8,"std::path"],[9,"std::path"],[10,"libp2p_identity::peer_id"]],"d":["","","","","","","",""],"i":[0,0,0,0,0,0,0,0],"f":[[1,2],[1,2],[1,2],[1,2],[1,2],[1,2],[3,4],[1,2]],"c":[],"p":[[3,"Path",8],[3,"PathBuf",8],[3,"Keypair",9],[3,"PeerId",10]],"b":[]},\
"connected_client":{"doc":"","t":"EEDNNNLLLLLLLLLMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMMLMLLLLLLLLLLLLLLMLMMLLLLLLLLLLLLLLMMMMM","n":["ClientCommand","ClientEvent","ConnectedClient","NewConnection","Particle","Particle","as_","as_","as_","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","client","clone","clone_into","connect_to","connect_to_with_timeout","connect_with_keypair","connect_with_timeout","data_store","debug","debug","debug","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","execute_particle","fmt","fmt","from","from","from","get_data_store","get_fd_flags","get_fd_flags","get_fd_flags","get_local_vm","init","init","init","into","into","into","listen_for_n","local_vm","maybe_receive","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","node","node_address","particle_ttl","particle_ttl","receive","receive_args","references","references","references","send","send_particle","send_particle_ext","serialize","set_fd_flags","set_fd_flags","set_fd_flags","set_particle_ttl","short_timeout","short_timeout","timeout","timeout","tmp_dir","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","wait_particle_args","particle","multiaddr","particle","peer_id","sender"],"q":[[0,"connected_client"],[98,"connected_client::ClientCommand"],[99,"connected_client::ClientEvent"],[103,"bnum::cast"],[104,"multiaddr"],[105,"eyre"],[106,"core::time"],[107,"core::option"],[108,"fluence_keypair::key_pair"],[109,"core::fmt"],[110,"core::fmt"],[111,"serde::de"],[112,"serde_json::value"],[113,"std::collections::hash::map"],[114,"alloc::vec"],[115,"alloc::string"],[116,"core::convert"],[117,"core::fmt"],[118,"alloc::sync"],[119,"system_interface::fs::fd_flags"],[120,"std::io::error"],[121,"avm_server::runner"],[122,"tokio::sync::mutex"],[123,"core::ops::function"],[124,"core::default"],[125,"particle_protocol::particle"],[126,"libp2p_identity::peer_id"],[127,"system_interface::fs::fd_flags"],[128,"libipld_core::raw"],[129,"anyhow"],[130,"std::io"],[131,"cid::cid"],[132,"core::iter::traits::collect"],[133,"serde::ser"],[134,"core::any"],[135,"core::convert"]],"d":["Describes commands sent from client to relay node; also …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wait for a particle with specified <code>particle_id</code>, and read …","","","","",""],"i":[0,0,0,22,2,22,5,2,22,5,2,22,5,2,22,5,2,2,5,5,5,5,5,5,2,22,5,5,2,22,5,5,2,22,2,5,2,22,5,2,22,5,2,22,5,5,2,22,5,5,2,22,5,2,22,5,5,5,5,5,2,22,5,5,5,5,5,5,5,2,22,5,5,5,2,5,2,22,5,5,5,5,5,5,2,5,2,22,5,2,22,5,2,22,5,2,22,5,44,45,46,45,46],"f":[0,0,0,0,0,0,[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[2,2],[[-1,-2],3,[],[]],[4,[[6,[5]]]],[[4,7,7,[8,[7]]],[[6,[5]]]],[[4,[8,[9]]],[[6,[5]]]],[[4,[8,[9]],7,7,[8,[7]]],[[6,[5]]]],0,[10,[[12,[3,11]]]],[10,[[12,[3,11]]]],[10,[[12,[3,11]]]],[5],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[5],[13,-1,[]],[13,-1,[]],[-1,[[12,[2]]],14],[13,3],[13,3],[13,3],[[5,-1,[17,[15,16]]],[[6,[[18,[16]]]]],[[20,[19]]]],[[2,10],21],[[22,10],21],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[5,[[24,[23]]]],[-1,[[12,[25,26]]],[]],[-1,[[12,[25,26]]],[]],[-1,[[12,[25,26]]],[]],[5,[[28,[27]]]],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[5,13,-1],-2,29,30],0,[5,[[8,[31]]]],0,[[-1,25],[[12,[[33,[-2]],26]]],[],34],[[-1,25],[[12,[[33,[-2]],26]]],[],34],[[-1,25],[[12,[[33,[-2]],26]]],[],34],0,0,[5,7],0,[5,[[6,[31]]]],[5,[[6,[[18,[16]]]]]],[[35,-1,-2],[[12,[3,36]]],37,[[39,[38]]]],[[35,-1,-2],[[12,[3,36]]],37,[[39,[38]]]],[[35,-1,-2],[[12,[3,36]]],37,[[39,[38]]]],[[5,31],3],[[5,-1,[17,[15,16]]],19,[[20,[19]]]],[[5,-1,[17,[15,16]],40],19,[[20,[19]]]],[[2,-1],12,41],[[-1,[33,[-2]]],[[12,[3,26]]],[],34],[[-1,[33,[-2]]],[[12,[3,26]]],[],34],[[-1,[33,[-2]]],[[12,[3,26]]],[],34],[[5,7],3],[5,7],0,[5,7],0,0,[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[5,-1],[[6,[[18,[16]]]]],[[43,[15]]]],0,0,0,0,0],"c":[],"p":[[8,"CastFrom",103],[4,"ClientCommand",0],[15,"tuple"],[3,"Multiaddr",104],[3,"ConnectedClient",0],[6,"Result",105],[3,"Duration",106],[4,"Option",107],[4,"KeyPair",108],[3,"Formatter",109],[3,"Error",109],[4,"Result",110],[15,"usize"],[8,"Deserializer",111],[15,"str"],[4,"Value",112],[3,"HashMap",113],[3,"Vec",114],[3,"String",115],[8,"Into",116],[6,"Result",109],[4,"ClientEvent",0],[3,"ParticleDataStore",117],[3,"Arc",118],[3,"FdFlags",119],[3,"Error",120],[3,"AVMRunner",121],[3,"Mutex",122],[8,"Fn",123],[8,"Default",124],[3,"Particle",125],[3,"PeerId",126],[3,"SetFdFlags",119],[8,"AsFilelike",127],[3,"RawCodec",128],[3,"Error",129],[8,"Read",130],[3,"Cid",131],[8,"Extend",132],[15,"bool"],[8,"Serializer",133],[3,"TypeId",134],[8,"AsRef",116],[13,"Particle",98],[13,"NewConnection",99],[13,"Particle",99]],"b":[]},\
"connection_pool":{"doc":"","t":"ENNDDINNNNNNENNLLLLLLLLLLLLLLKLLKLLLLLLLLLLLLLLKLLKLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLKLLKLLLLLLLLMLKLLMLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMM","n":["Command","Connect","Connected","ConnectionPoolApi","ConnectionPoolBehaviour","ConnectionPoolT","CountConnections","Dial","Disconnect","Disconnected","GetContact","IsConnected","LifecycleEvent","LifecycleEvents","Send","add_discovered_addresses","add_subscriber","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","connect","connect","connect","count_connections","count_connections","count_connections","debug","debug","debug","debug","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","dial","dial","dial","disconnect","disconnect","disconnect","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","get_contact","get_contact","get_contact","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","handle_established_inbound_connection","handle_established_outbound_connection","handle_pending_inbound_connection","handle_pending_outbound_connection","init","init","init","init","into","into","into","into","is_connected","is_connected","is_connected","lifecycle_events","lifecycle_events","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","on_connection_handler_event","on_swarm_event","outlet","poll","send","send","send","send_timeout","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","addr","contact","out","out","out","out","out","out","out","out","particle","peer_id","peer_id","peer_id","to"],"q":[[0,"connection_pool"],[125,"connection_pool::Command"],[140,"libp2p_identity::peer_id"],[141,"multiaddr"],[142,"alloc::vec"],[143,"tokio::sync::mpsc::unbounded"],[144,"particle_protocol::contact"],[145,"futures_core::future"],[146,"tokio::sync::oneshot"],[147,"core::fmt"],[148,"core::fmt"],[149,"core::option"],[150,"core::fmt"],[151,"std::io::error"],[152,"libp2p_swarm::connection"],[153,"libp2p_swarm"],[154,"libp2p_swarm"],[155,"futures_core::stream"],[156,"particle_protocol::libp2p_protocol::upgrade"],[157,"peer_metrics::connection_pool"],[158,"particle_protocol::particle"],[159,"tokio::sync::mpsc::bounded"],[160,"system_interface::fs::fd_flags"],[161,"libp2p_swarm"],[162,"core::task::wake"],[163,"particle_protocol::libp2p_protocol::message"],[164,"libp2p_swarm::behaviour"],[165,"particle_protocol::libp2p_protocol::message"],[166,"core::any"]],"d":["","","","","","","","","","","","","","","","","Subscribes given channel for all <code>LifecycleEvent</code>s","","","","","","","","","","","","","","Connect to the contact by all of its known addresses and …","","","Returns number of connected contacts","","","","","","","","","","","","","","","Dial <code>address</code>, and send contact back on success <code>None</code> means …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns contact for a given peer if it is known","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns whether given peer is connected or not","","","","","","","","","","","","","","Sends a particle to a connected contact. Returns whether …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,18,6,0,0,0,18,18,18,6,18,18,0,18,18,1,1,1,18,8,6,1,18,8,6,8,6,8,6,43,1,8,43,1,8,1,18,8,6,1,18,8,6,1,18,8,6,43,1,8,43,1,8,1,18,8,6,18,8,6,6,1,18,8,6,43,1,8,1,18,8,6,1,1,1,1,1,18,8,6,1,18,8,6,43,1,8,43,8,1,1,18,8,6,1,1,8,1,43,1,8,8,1,18,8,6,8,6,6,1,18,8,6,1,18,8,6,1,18,8,6,1,18,8,6,44,45,45,46,44,47,48,49,50,51,46,47,48,49,46],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,[4,[3]]],5],[[1,[7,[6]]],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[8,8],[6,6],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,9],[[11,[10]]],[]],[[1,9,[12,[10]]],5],[[8,9],[[11,[10]]]],[-1,[[11,[13]]],[]],[[1,[12,[13]]],5],[8,[[11,[13]]]],[14,[[16,[5,15]]]],[14,[[16,[5,15]]]],[14,[[16,[5,15]]]],[14,[[16,[5,15]]]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[[-1,3],[[11,[[17,[9]]]]],[]],[[1,3,[12,[[17,[9]]]]],5],[[8,3],[[11,[[17,[9]]]]]],[[-1,2],[[11,[10]]],[]],[[1,2,[12,[10]]],5],[[8,2],[[11,[10]]]],[13,5],[13,5],[13,5],[13,5],[[18,14],19],[[8,14],19],[[6,14],19],[[6,14],19],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,2],[[11,[[17,[9]]]]],[]],[[1,2,[12,[[17,[9]]]]],5],[[8,2],[[11,[[17,[9]]]]]],[-1,[[16,[20,21]]],[]],[-1,[[16,[20,21]]],[]],[-1,[[16,[20,21]]],[]],[-1,[[16,[20,21]]],[]],[[1,22,2,3,3],[[16,[[23,[1]],24]]]],[[1,22,2,3,25],[[16,[[23,[1]],24]]]],[[1,22,3,3],[[16,[5,24]]]],[[1,22,[17,[2]],[26,[3]],25],[[16,[[4,[3]],24]]]],[[],13],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,2],[[11,[10]]],[]],[[1,2,[12,[10]]],5],[[8,2],[[11,[10]]]],[-1,[[27,[6]]],[]],[8,[[27,[6]]]],[[13,28,2,[17,[29]]],[[5,[1,[31,[30]],8]]]],[[-1,20],[[16,[[32,[-2]],21]]],[],33],[[-1,20],[[16,[[32,[-2]],21]]],[],33],[[-1,20],[[16,[[32,[-2]],21]]],[],33],[[-1,20],[[16,[[32,[-2]],21]]],[],33],[[1,2,22,[34,[1]]],5],[[1,35],5],0,[[1,36],[[39,[[38,[5,37]]]]]],[[-1,9,30],[[11,[40]]],[]],[[1,9,30,[12,[40]]],5],[[8,9,30],[[11,[40]]]],0,[[-1,[32,[-2]]],[[16,[5,21]]],[],33],[[-1,[32,[-2]]],[[16,[5,21]]],[],33],[[-1,[32,[-2]]],[[16,[5,21]]],[],33],[[-1,[32,[-2]]],[[16,[5,21]]],[],33],[-1,-2,[],[]],[-1,-2,[],[]],[-1,41,[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,42,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"ConnectionPoolBehaviour",0],[3,"PeerId",140],[3,"Multiaddr",141],[3,"Vec",142],[15,"tuple"],[4,"LifecycleEvent",0],[3,"UnboundedSender",143],[3,"ConnectionPoolApi",0],[3,"Contact",144],[15,"bool"],[6,"BoxFuture",145],[3,"Sender",146],[15,"usize"],[3,"Formatter",147],[3,"Error",147],[4,"Result",148],[4,"Option",149],[4,"Command",0],[6,"Result",147],[3,"FdFlags",150],[3,"Error",151],[3,"ConnectionId",152],[6,"THandler",153],[3,"ConnectionDenied",153],[4,"Endpoint",154],[15,"slice"],[6,"BoxStream",155],[3,"ProtocolConfig",156],[3,"ConnectionPoolMetrics",157],[3,"ExtendedParticle",158],[3,"Receiver",159],[3,"SetFdFlags",150],[8,"AsFilelike",160],[6,"THandlerOutEvent",153],[4,"FromSwarm",161],[3,"Context",162],[4,"HandlerMessage",163],[4,"ToSwarm",161],[4,"Poll",164],[4,"SendStatus",163],[3,"String",165],[3,"TypeId",166],[8,"ConnectionPoolT",0],[13,"Dial",125],[13,"Connect",125],[13,"Send",125],[13,"Disconnect",125],[13,"IsConnected",125],[13,"GetContact",125],[13,"CountConnections",125],[13,"LifecycleEvents",125]],"b":[[59,"impl-Debug-for-LifecycleEvent"],[60,"impl-Display-for-LifecycleEvent"]]},\
"control_macro":{"doc":"","t":"OOOO","n":["get_return","measure","ok_get","unwrap_return"],"q":[[0,"control_macro"]],"d":["Retrieves value from <code>Some</code>, returns on <code>None</code>","","Takes option as an argument, unwraps if <code>Some</code>, exit …","Retrieves value from <code>Some</code>, returns on <code>None</code>"],"i":[0,0,0,0],"f":[0,0,0,0],"c":[],"p":[],"b":[]},\
"core_manager":{"doc":"","t":"DEIDNDNDDGNDDKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLENNENDNNNNNENNENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMDDNDNELLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMLLLLLLLLLLLLLLLLLLLLL","n":["CUID","CoreManager","CoreManagerFunctions","CoreRange","Dev","DevCoreManager","Dummy","DummyCoreManager","LogicalCoreId","Map","Persistent","PhysicalCoreId","StrictCoreManager","acquire_worker_core","acquire_worker_core","acquire_worker_core","acquire_worker_core","acquire_worker_core","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","compare","compare","compare","default","default","default","deserialize","deserialize","deserialize","deserialize","encode_hex","encode_hex_upper","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","errors","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_hex","from_path","from_path","from_str","get_system_cpu_assignment","get_system_cpu_assignment","get_system_cpu_assignment","get_system_cpu_assignment","get_system_cpu_assignment","hash","hash","hash","into","into","into","into","into","into","into","into","new","new","new","partial_cmp","partial_cmp","partial_cmp","release","release","release","release","release","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","types","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AcquireError","CollectCoresData","CreateCoreManager","CreateError","CreateTopology","CurrentAssignment","DecodeError","DeserializationError","IllegalSystemCoreCount","IoError","IoError","LoadingError","NotEnoughCores","NotFoundAvailableCores","PersistError","PersistError","SerializationError","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","new","source","source","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","available","current_assignment","required","available","err","err","required","err","err","err","err","err","err","err","AcquireRequest","Assignment","CapacityCommitment","Cores","Deal","WorkType","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cuid_cores","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","hash","into","into","into","into","logical_core_ids","logical_core_ids","new","physical_core_id","physical_core_ids","pin_current_thread","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip"],"q":[[0,"core_manager"],[173,"core_manager::errors"],[255,"core_manager::errors::AcquireError"],[258,"core_manager::errors::CreateError"],[262,"core_manager::errors::LoadingError"],[267,"core_manager::errors::PersistError"],[269,"core_manager::types"],[341,"core::result"],[342,"core::cmp"],[343,"serde::de"],[344,"core::iter::traits::collect"],[345,"core::fmt"],[346,"core::fmt"],[347,"std::path"],[348,"core::hash"],[349,"core::option"],[350,"alloc::vec"],[351,"serde::ser"],[352,"alloc::string"],[353,"core::any"],[354,"toml::de"],[355,"core::str::error"],[356,"std::io::error"],[357,"toml::ser"],[358,"core::error"]],"d":["","","The <code>CoreManagerFunctions</code> trait defines operations for …","","","<code>DevCoreManager</code> is a CPU core manager that provides a more …","","","An opaque type that represents a CPU logical core.","","","An opaque type that represents a CPU physical core.","<code>StrictCoreManager</code> is a CPU core manager responsible for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Loads the state from <code>file_name</code> if exists. If not creates a …","Loads the state from <code>file_name</code> if exists. If not creates a …","Parse CoreRange from string like “1,2-30,31”","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,8,0,8,0,0,0,8,0,0,47,5,6,7,8,9,5,6,12,13,14,9,7,8,5,6,12,13,14,9,7,8,12,13,14,9,12,13,14,9,12,13,9,12,13,9,14,9,7,12,13,14,9,9,9,12,13,14,9,12,12,12,13,13,13,9,9,9,0,12,12,13,13,14,14,9,9,5,6,12,12,13,13,14,9,7,8,8,8,8,9,5,6,14,47,5,6,7,8,12,13,9,5,6,12,13,14,9,7,8,12,13,9,12,13,9,47,5,6,7,8,12,13,14,9,12,13,14,9,12,13,14,9,5,6,12,13,14,14,9,7,8,5,6,12,13,14,9,7,8,8,8,8,5,6,12,13,14,9,7,8,0,5,6,12,13,14,9,7,8,0,37,29,0,37,0,29,29,37,29,38,0,37,3,0,29,38,37,29,38,39,3,37,29,38,39,3,37,37,29,29,38,38,39,39,3,3,37,29,29,29,29,29,29,38,38,38,39,3,37,29,38,39,3,39,29,38,37,29,38,39,3,37,29,38,39,3,37,29,38,39,3,37,29,38,39,3,37,29,38,39,3,48,48,48,49,50,51,49,52,53,54,55,56,57,58,0,0,45,0,45,0,1,45,46,2,1,45,46,2,45,46,2,45,46,2,2,45,45,46,2,45,45,45,46,46,46,2,2,2,45,46,2,1,45,46,2,45,1,45,46,2,46,2,1,46,2,2,45,45,46,2,1,45,46,2,1,45,46,2,1,45,46,2,1,45,46,2],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],[[4,[2,3]]],[]],[[5,1],[[4,[2,3]]]],[[6,1],[[4,[2,3]]]],[[7,1],[[4,[2,3]]]],[[8,1],[[4,[2,3]]]],[9,[[11,[10]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[12,12],[13,13],[14,14],[9,9],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[12,12],16],[[13,13],16],[[9,9],16],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[],14],[[],9],[[],7],[-1,[[4,[12]]],17],[-1,[[4,[13]]],17],[-1,[[4,[14]]],17],[-1,[[4,[9]]],17],[9,-1,[[19,[18]]]],[9,-1,[[19,[18]]]],[[12,12],20],[[13,13],20],[[14,14],20],[[9,9],20],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],0,[[12,21],[[4,[15,22]]]],[[12,21],[[4,[15,22]]]],[[13,21],[[4,[15,22]]]],[[13,21],[[4,[15,22]]]],[[14,21],23],[[14,21],23],[[9,21],[[4,[15,22]]]],[[9,21],[[4,[15,22]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[24,12],[24,13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[5,8],[7,8],[6,8],[-1,-1,[]],[-1,[[4,[9]]],[[26,[[25,[10]]]]]],[[27,28,14],[[4,[[15,[5,0]],29]]]],[[27,28,14],[[4,[[15,[6,0]],29]]]],[30,[[4,[14]]]],[-1,2,[]],[5,2],[6,2],[7,2],[8,2],[[12,-1],15,31],[[13,-1],15,31],[[9,-1],15,31],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[24,12],[24,13],[[[11,[10]]],9],[[12,12],[[32,[16]]]],[[13,13],[[32,[16]]]],[[9,9],[[32,[16]]]],[[-1,[33,[9]]],15,[]],[[5,[33,[9]]],15],[[6,[33,[9]]],15],[[7,[33,[9]]],15],[[8,[33,[9]]],15],[[12,-1],4,34],[[13,-1],4,34],[[14,-1],4,34],[[9,-1],4,34],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[[[25,[28]]],[[4,[14]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[8,[[4,[5]]]],[-1,[[4,[-2]]],[],[]],[8,[[4,[7]]]],[8,[[4,[6]]]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[37,21],23],[[37,21],23],[[29,21],23],[[29,21],23],[[38,21],23],[[38,21],23],[[39,21],23],[[39,21],23],[[3,21],23],[[3,21],23],[-1,-1,[]],[38,29],[37,29],[40,29],[-1,-1,[]],[41,29],[42,29],[43,38],[-1,-1,[]],[42,38],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[33,[[15,[12,9]]]]],39],[29,[[32,[44]]]],[38,[[32,[44]]]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[45,45],[46,46],[2,2],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],0,[-1,[[4,[45]]],17],[[45,45],20],[[46,46],20],[[2,2],20],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[-1,-2],20,[],[]],[[45,21],23],[[46,21],23],[[2,21],23],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[45,-1],15,31],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[[33,[9]],45],1],0,0,[2,15],[[45,-1],4,34],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"AcquireRequest",269],[3,"Assignment",269],[4,"AcquireError",173],[4,"Result",341],[3,"DevCoreManager",0],[3,"StrictCoreManager",0],[3,"DummyCoreManager",0],[4,"CoreManager",0],[3,"CUID",0],[15,"u8"],[15,"array"],[3,"PhysicalCoreId",0],[3,"LogicalCoreId",0],[3,"CoreRange",0],[15,"tuple"],[4,"Ordering",342],[8,"Deserializer",343],[15,"char"],[8,"FromIterator",344],[15,"bool"],[3,"Formatter",345],[3,"Error",345],[6,"Result",345],[15,"u32"],[15,"slice"],[8,"AsRef",346],[3,"PathBuf",347],[15,"usize"],[4,"LoadingError",173],[15,"str"],[8,"Hasher",348],[4,"Option",349],[3,"Vec",350],[8,"Serializer",351],[3,"String",352],[3,"TypeId",353],[4,"CreateError",173],[4,"PersistError",173],[3,"CurrentAssignment",173],[3,"Error",354],[3,"Utf8Error",355],[3,"Error",356],[3,"Error",357],[8,"Error",358],[4,"WorkType",269],[3,"Cores",269],[8,"CoreManagerFunctions",0],[13,"NotFoundAvailableCores",255],[13,"NotEnoughCores",258],[13,"CreateTopology",258],[13,"CollectCoresData",258],[13,"CreateCoreManager",262],[13,"IoError",262],[13,"DecodeError",262],[13,"DeserializationError",262],[13,"PersistError",262],[13,"IoError",267],[13,"SerializationError",267]],"b":[[72,"impl-Debug-for-PhysicalCoreId"],[73,"impl-Display-for-PhysicalCoreId"],[74,"impl-Display-for-LogicalCoreId"],[75,"impl-Debug-for-LogicalCoreId"],[76,"impl-Debug-for-CoreRange"],[77,"impl-Display-for-CoreRange"],[78,"impl-Debug-for-CUID"],[79,"impl-Display-for-CUID"],[89,"impl-From%3CDevCoreManager%3E-for-CoreManager"],[90,"impl-From%3CDummyCoreManager%3E-for-CoreManager"],[91,"impl-From%3CStrictCoreManager%3E-for-CoreManager"],[152,"impl-TryInto%3CDevCoreManager%3E-for-CoreManager"],[154,"impl-TryInto%3CDummyCoreManager%3E-for-CoreManager"],[155,"impl-TryInto%3CStrictCoreManager%3E-for-CoreManager"],[200,"impl-Debug-for-CreateError"],[201,"impl-Display-for-CreateError"],[202,"impl-Display-for-LoadingError"],[203,"impl-Debug-for-LoadingError"],[204,"impl-Debug-for-PersistError"],[205,"impl-Display-for-PersistError"],[206,"impl-Display-for-CurrentAssignment"],[207,"impl-Debug-for-CurrentAssignment"],[208,"impl-Debug-for-AcquireError"],[209,"impl-Display-for-AcquireError"],[211,"impl-From%3CPersistError%3E-for-LoadingError"],[212,"impl-From%3CCreateError%3E-for-LoadingError"],[213,"impl-From%3CError%3E-for-LoadingError"],[215,"impl-From%3CUtf8Error%3E-for-LoadingError"],[216,"impl-From%3CError%3E-for-LoadingError"],[217,"impl-From%3CError%3E-for-PersistError"],[219,"impl-From%3CError%3E-for-PersistError"]]},\
"created_swarm":{"doc":"","t":"DDDDFMMFMLLLLMLLLLLLLLMMMMMLLLLMMMMFFLLLLMMLLLLLLLLLLLLLMMMCCLLLLLLLLLLLLLLLMMLLLLLLLLLLLLMMMFFFFFFMMMMMMLLLLLMMMMLLLLLLLLLMCAMMMLLMLLLLLLLLLLLLLLLLMNDDNDNDEDNLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLMMMMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMM","n":["BaseVmConfig","ChainConfig","CreatedSwarm","SwarmConfig","add_print","allowed_binaries","allowed_effectors","aqua_vm_config","aquamarine_api","as_","as_","as_","as_","bootstraps","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builtins_dir","builtins_keypair","cc_contract_address","cc_events_dir","chain_config","clone","clone","clone_into","clone_into","config","connectivity","connector_api_endpoint","core_contract_address","create_swarm","create_swarm_with_runtime","debug","debug","debug","debug","default_base_fee","default_priority_fee","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","enabled_system_services","exit_outlet","extend_system_services","fluence_app_service","fluence_spell_dtos","fmt","fmt","fmt","from","from","from","from","from_ref","from_ref","from_ref","from_ref","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","http_endpoint","http_port","init","init","init","init","into","into","into","into","into_request","into_request","into_request","into_request","keypair","listen_on","listen_on","make_swarms","make_swarms_with","make_swarms_with_cfg","make_swarms_with_keypair","make_swarms_with_mocked_vm","make_swarms_with_transport_and_mocked_vm","management_keypair","management_keypair","manager","market_contract_address","multiaddr","network_id","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","override_system_services_config","peer_id","peer_id","pool_size","references","references","references","references","serialize","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","spell_base_dir","system_services","system_services_config","tmp_dir","tmp_dir","tmp_dir","to_owned","to_owned","transport","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","wallet_key","AquaIpfs","AquaIpfsConfig","ConnectorConfig","Decider","DeciderConfig","Registry","RegistryConfig","ServiceKey","SystemServicesConfig","TrustGraph","all_values","aqua_ipfs","as_","as_","as_","as_","as_","as_","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","connector","curl_binary_path","debug","debug","debug","debug","debug","debug","decider","decider_period_sec","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","enable","eq","equivalent","equivalent","equivalent","equivalent","equivalent","expired_period_sec","external_api_multiaddr","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","from_string","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_hash","hash","init","init","init","init","init","init","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","ipfs_binary_path","local_api_multiaddr","matcher_address","network_api_endpoint","network_id","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","references","references","references","references","references","references","registry","registry_period_sec","renew_period_sec","replicate_period_sec","serialize","serialize","serialize","serialize","serialize","serialize","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","start_block","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","wallet_key","worker_gas","worker_ipfs_multiaddr","worker_period_sec"],"q":[[0,"created_swarm"],[149,"created_swarm::system_services_config"],[360,"core::iter::traits::iterator"],[361,"bnum::cast"],[362,"libp2p_identity::peer_id"],[363,"avm_server::runner"],[364,"nox::node"],[365,"alloc::boxed"],[366,"fluence_keypair::key_pair"],[367,"server_config::resolved_config"],[368,"tracing::span"],[369,"core::ops::function"],[370,"aquamarine::aqua_runtime"],[371,"core::fmt"],[372,"core::fmt"],[373,"serde::de"],[374,"core::fmt"],[375,"std::io::error"],[376,"tonic::request"],[377,"alloc::vec"],[378,"core::ops::function"],[379,"core::option"],[380,"fluence_libp2p::transport"],[381,"multiaddr"],[382,"system_interface::fs::fd_flags"],[383,"libipld_core::raw"],[384,"anyhow"],[385,"std::io"],[386,"cid::cid"],[387,"core::iter::traits::collect"],[388,"serde::ser"],[389,"core::any"],[390,"core::hash"],[391,"core::marker"],[392,"core::hash"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If none, comes from the chain","If none, comes from the chain","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,5,5,0,21,3,21,5,6,5,3,21,5,6,3,21,5,6,5,5,6,5,5,5,6,5,6,21,21,5,6,0,0,3,21,5,6,6,6,3,21,5,6,3,21,5,6,6,3,21,5,6,5,21,5,0,0,21,5,6,3,21,5,6,5,5,6,6,3,21,5,6,6,5,3,21,5,6,3,21,5,6,3,21,5,6,5,3,5,0,0,0,0,0,0,21,5,3,6,21,6,5,3,21,5,6,5,3,21,5,3,21,5,6,6,3,21,5,6,5,0,0,3,21,5,5,6,5,3,21,5,6,3,21,5,6,3,21,5,6,3,21,5,6,6,42,0,0,42,0,42,0,0,0,42,42,43,42,43,44,45,46,47,42,43,44,45,46,47,42,43,44,45,46,47,42,43,44,45,46,47,42,43,44,45,46,47,43,45,42,43,44,45,46,47,43,46,43,44,45,46,47,42,43,44,45,46,47,42,43,44,45,46,47,42,43,44,45,46,47,42,43,44,45,46,47,43,42,42,42,42,42,42,47,44,42,42,43,44,45,46,47,42,43,44,45,46,47,42,42,43,43,44,44,45,45,46,46,47,47,42,42,43,44,45,46,47,42,42,42,43,44,45,46,47,42,43,44,45,46,47,42,43,44,45,46,47,44,44,46,46,46,42,43,44,45,46,47,42,43,44,45,46,47,43,47,47,47,42,43,44,45,46,47,42,43,44,45,46,47,46,42,43,44,45,46,47,42,42,43,44,45,46,47,42,43,44,45,46,47,42,43,44,45,46,47,42,43,44,45,46,47,46,46,46,46],"f":[0,0,0,0,[-1,1,2],0,0,[3],0,[-1,-3,[],[],[[4,[-2]]]],[-1,-3,[],[],[[4,[-2]]]],[-1,-3,[],[],[[4,[-2]]]],[-1,-3,[],[],[[4,[-2]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[5,5],[6,6],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],0,0,0,0,[5,[[1,[7,[10,[[9,[8]]]],11,5,12,13]]]],[[5,-1],[[1,[7,[10,[[9,[-2]]]],11,5,12,13]]],14,15],[16,[[18,[1,17]]]],[16,[[18,[1,17]]]],[16,[[18,[1,17]]]],[16,[[18,[1,17]]]],0,0,[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[-1,[[18,[6]]],20],[19,1],[19,1],[19,1],[19,1],0,0,0,0,0,[[21,16],22],[[5,16],22],[[6,16],[[18,[1,17]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[[18,[23,24]]],[]],[-1,[[18,[23,24]]],[]],[-1,[[18,[23,24]]],[]],[-1,[[18,[23,24]]],[]],0,0,[[],19],[[],19],[[],19],[[],19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],0,0,0,[19,[[26,[21]]]],[[19,-1,-2,-3,27],[[26,[21]]],28,28,28],[[19,-1],[[26,[21]]],28],[[19,11],[[26,[21]]]],[[19,-1,[30,[29]],-2],[[26,[21]]],28,28],[[19,31],[[26,[21]]]],0,0,0,0,0,0,[[[26,[32]],32],5],[[-1,23],[[18,[[33,[-2]],24]]],[],34],[[-1,23],[[18,[[33,[-2]],24]]],[],34],[[-1,23],[[18,[[33,[-2]],24]]],[],34],[[-1,23],[[18,[[33,[-2]],24]]],[],34],0,0,0,0,[[35,-1,-2],[[18,[1,36]]],37,[[39,[38]]]],[[35,-1,-2],[[18,[1,36]]],37,[[39,[38]]]],[[35,-1,-2],[[18,[1,36]]],37,[[39,[38]]]],[[35,-1,-2],[[18,[1,36]]],37,[[39,[38]]]],[[6,-1],18,40],[[-1,[33,[-2]]],[[18,[1,24]]],[],34],[[-1,[33,[-2]]],[[18,[1,24]]],[],34],[[-1,[33,[-2]]],[[18,[1,24]]],[],34],[[-1,[33,[-2]]],[[18,[1,24]]],[],34],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[[],[[26,[42]]]],0,[-1,-3,[],[],[[4,[-2]]]],[-1,-3,[],[],[[4,[-2]]]],[-1,-3,[],[],[[4,[-2]]]],[-1,-3,[],[],[[4,[-2]]]],[-1,-3,[],[],[[4,[-2]]]],[-1,-3,[],[],[[4,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,42],[43,43],[44,44],[45,45],[46,46],[47,47],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],0,0,[16,[[18,[1,17]]]],[16,[[18,[1,17]]]],[16,[[18,[1,17]]]],[16,[[18,[1,17]]]],[16,[[18,[1,17]]]],[16,[[18,[1,17]]]],0,0,[[],43],[[],44],[[],45],[[],46],[[],47],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[19,-1,[]],[-1,[[18,[42]]],20],[-1,[[18,[43]]],20],[-1,[[18,[44]]],20],[-1,[[18,[45]]],20],[-1,[[18,[46]]],20],[-1,[[18,[47]]],20],[19,1],[19,1],[19,1],[19,1],[19,1],[19,1],0,[[42,42],27],[[-1,-2],27,[],[]],[[-1,-2],27,[],[]],[[-1,-2],27,[],[]],[[-1,-2],27,[],[]],[[-1,-2],27,[],[]],0,0,[[42,16],[[18,[1,17]]]],[[42,16],[[18,[1,17]]]],[[43,16],[[18,[1,17]]]],[[44,16],[[18,[1,17]]]],[[45,16],[[18,[1,17]]]],[[46,16],[[18,[1,17]]]],[[47,16],[[18,[1,17]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[48,[[30,[42]]]],[-1,[[18,[23,24]]],[]],[-1,[[18,[23,24]]],[]],[-1,[[18,[23,24]]],[]],[-1,[[18,[23,24]]],[]],[-1,[[18,[23,24]]],[]],[-1,[[18,[23,24]]],[]],[[-1,-2],49,[50,51],52],[[42,-1],1,53],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],[-1,[[25,[-2]]],[],[]],0,0,0,0,0,[[-1,23],[[18,[[33,[-2]],24]]],[],34],[[-1,23],[[18,[[33,[-2]],24]]],[],34],[[-1,23],[[18,[[33,[-2]],24]]],[],34],[[-1,23],[[18,[[33,[-2]],24]]],[],34],[[-1,23],[[18,[[33,[-2]],24]]],[],34],[[-1,23],[[18,[[33,[-2]],24]]],[],34],[[35,-1,-2],[[18,[1,36]]],37,[[39,[38]]]],[[35,-1,-2],[[18,[1,36]]],37,[[39,[38]]]],[[35,-1,-2],[[18,[1,36]]],37,[[39,[38]]]],[[35,-1,-2],[[18,[1,36]]],37,[[39,[38]]]],[[35,-1,-2],[[18,[1,36]]],37,[[39,[38]]]],[[35,-1,-2],[[18,[1,36]]],37,[[39,[38]]]],0,0,0,0,[[42,-1],18,40],[[43,-1],18,40],[[44,-1],18,40],[[45,-1],18,40],[[46,-1],18,40],[[47,-1],18,40],[[-1,[33,[-2]]],[[18,[1,24]]],[],34],[[-1,[33,[-2]]],[[18,[1,24]]],[],34],[[-1,[33,[-2]]],[[18,[1,24]]],[],34],[[-1,[33,[-2]]],[[18,[1,24]]],[],34],[[-1,[33,[-2]]],[[18,[1,24]]],[],34],[[-1,[33,[-2]]],[[18,[1,24]]],[],34],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,54,[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0],"c":[],"p":[[15,"tuple"],[8,"Iterator",360],[3,"BaseVmConfig",0],[8,"CastFrom",361],[3,"SwarmConfig",0],[3,"ChainConfig",0],[3,"PeerId",362],[3,"AVMRunner",363],[3,"Node",364],[3,"Box",365],[4,"KeyPair",366],[3,"ResolvedConfig",367],[3,"Span",368],[8,"Fn",369],[8,"AquaRuntime",370],[3,"Formatter",371],[3,"Error",371],[4,"Result",372],[15,"usize"],[8,"Deserializer",373],[3,"CreatedSwarm",0],[6,"Result",371],[3,"FdFlags",374],[3,"Error",375],[3,"Request",376],[3,"Vec",377],[15,"bool"],[8,"FnMut",369],[3,"Duration",378],[4,"Option",379],[4,"Transport",380],[3,"Multiaddr",381],[3,"SetFdFlags",374],[8,"AsFilelike",382],[3,"RawCodec",383],[3,"Error",384],[8,"Read",385],[3,"Cid",386],[8,"Extend",387],[8,"Serializer",388],[3,"TypeId",389],[4,"ServiceKey",149],[3,"SystemServicesConfig",149],[3,"AquaIpfsConfig",149],[3,"ConnectorConfig",149],[3,"DeciderConfig",149],[3,"RegistryConfig",149],[15,"str"],[15,"u64"],[8,"Hash",390],[8,"Sized",391],[8,"BuildHasher",390],[8,"Hasher",390],[3,"String",392]],"b":[[239,"impl-Display-for-ServiceKey"],[240,"impl-Debug-for-ServiceKey"]]},\
"fluence_libp2p":{"doc":"","t":"NNDDELLLLLLLFFLLLLLLLLLOLLLLLLLLLLLLLOLLLLLLAOLLAFLLLLLLLLLLLLLLLLLLLLFFFF","n":["Memory","Network","PeerId","RandomPeerId","Transport","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_memory_transport","build_transport","clone","clone","clone_into","clone_into","cmp","deserialize","eq","equivalent","equivalent","event_polling","fmt","fmt","fmt","from","from","from","from","from","from_bytes","from_maddr","from_multihash","from_public_key","from_str","generate_swarm_event_type","hash","into","into","into","is_network","partial_cmp","peerid_serializer_opt","poll_loop","random","random","random_multiaddr","remote_multiaddr","serialize","to_base58","to_bytes","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","deserialize","serialize","create_memory_maddr","create_tcp_maddr"],"q":[[0,"fluence_libp2p"],[70,"fluence_libp2p::peerid_serializer_opt"],[72,"fluence_libp2p::random_multiaddr"],[74,"multihash::multihash"],[75,"libp2p_identity::keypair"],[76,"core::time"],[77,"libp2p_core::muxing::boxed"],[78,"libp2p_core::transport::boxed"],[79,"core::cmp"],[80,"core::result"],[81,"serde::de"],[82,"core::fmt"],[83,"core::fmt"],[84,"multiaddr"],[85,"core::hash"],[86,"core::option"],[87,"libp2p_core::connection"],[88,"serde::ser"],[89,"alloc::string"],[90,"alloc::vec"],[91,"core::any"]],"d":["","","Identifier of a peer of the network.","","","","","","","","","","","","","","","","","","","","","Intended to simplify simple polling functions that just …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Parses a <code>PeerId</code> from bytes.","","Tries to turn a <code>Multihash</code> into a <code>PeerId</code>.","Builds a <code>PeerId</code> from a public key.","","Generates a type of events produced by Swarm by its name","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Generates PeerId from random Ed25519 key","Generates a random peer ID from a cryptographically secure …","","Retrieves multiaddr of the remote peer","","Returns a base-58 encoded string of this <code>PeerId</code>.","Returns a raw bytes representation of this <code>PeerId</code>.","","","","","","","","","","","","","","","","","","","","",""],"i":[8,8,0,0,0,1,29,8,1,29,8,1,0,0,8,1,8,1,1,8,1,1,1,0,8,1,1,29,8,1,1,1,1,8,1,1,1,0,1,29,8,1,8,1,0,0,29,1,0,0,8,1,1,8,1,1,29,8,1,1,1,29,8,1,29,8,1,29,8,1,0,0,0,0],"f":[0,0,0,0,0,[1,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[3,4],[[7,[[6,[1,5]]]]]],[[8,3,4],[[7,[[6,[1,5]]]]]],[8,8],[1,1],[[-1,-2],6,[],[]],[[-1,-2],6,[],[]],[[1,1],9],[-1,[[10,[8]]],11],[[1,1],12],[[-1,-2],12,[],[]],[[-1,-2],12,[],[]],0,[[8,13],14],[[1,13],[[10,[6,15]]]],[[1,13],[[10,[6,15]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[16,1],[16,1],[[[18,[17]]],[[10,[1,19]]]],[20,8],[2,[[10,[1,2]]]],[16,1],[21,[[10,[1]]]],0,[[1,-1],6,22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[8,12],[[1,1],[[23,[9]]]],0,0,[[],1],[[],1],0,[24,20],[[8,-1],10,25],[1,26],[1,[[27,[17]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,26,[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[[[27,[17]]],[[10,[1]]]],[-1,[[10,[-2]]],[],[]],[2,[[10,[1]]]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[[23,[1]]]]],11],[[[23,[1]],-1],10,25],[[],20],[[],20]],"c":[],"p":[[3,"PeerId",0],[3,"Multihash",74],[3,"Keypair",75],[3,"Duration",76],[3,"StreamMuxerBox",77],[15,"tuple"],[3,"Boxed",78],[4,"Transport",0],[4,"Ordering",79],[4,"Result",80],[8,"Deserializer",81],[15,"bool"],[3,"Formatter",82],[6,"Result",82],[3,"Error",82],[3,"PublicKey",75],[15,"u8"],[15,"slice"],[4,"ParseError",83],[3,"Multiaddr",84],[15,"str"],[8,"Hasher",85],[4,"Option",86],[4,"ConnectedPoint",87],[8,"Serializer",88],[3,"String",89],[3,"Vec",90],[3,"TypeId",91],[3,"RandomPeerId",0]],"b":[[25,"impl-Debug-for-PeerId"],[26,"impl-Display-for-PeerId"],[30,"impl-From%3C%26PublicKey%3E-for-PeerId"],[31,"impl-From%3CPublicKey%3E-for-PeerId"],[58,"impl-TryFrom%3CVec%3Cu8%3E%3E-for-PeerId"],[60,"impl-TryFrom%3CMultihash%3C64%3E%3E-for-PeerId"]]},\
"fs_utils":{"doc":"","t":"NNENLLFFFFFFFLLLLFFFFFFLFLLLLMMMMMM","n":["CreateDir","DeserializeData","LoadDataError","ReadPersistedData","borrow","borrow_mut","canonicalize","copy_dir_all","create_dir","create_dir_write_only","create_dirs","file_name","file_stem","fmt","fmt","from","into","list_files","load_persisted_data","remove_dir","remove_dirs","remove_file","set_write_only","source","to_abs_path","to_string","try_from","try_into","type_id","err","err","err","path","path","path"],"q":[[0,"fs_utils"],[29,"fs_utils::LoadDataError"],[35,"std::path"],[36,"eyre"],[37,"std::path"],[38,"std::io::error"],[39,"core::result"],[40,"core::fmt"],[41,"alloc::string"],[42,"core::fmt"],[43,"core::option"],[44,"alloc::vec"],[45,"core::error"],[46,"core::any"]],"d":["","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","List files in directory","Load some data from disk in parallel","","","","","","","","","","","","","","","",""],"i":[11,11,0,11,11,11,0,0,0,0,0,0,0,11,11,11,11,0,0,0,0,0,0,11,0,11,11,11,11,19,20,21,19,20,21],"f":[0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[2,[1]]],[[4,[3]]]],[[-1,-2],[[2,[5]]],[[4,[3]]],[[4,[3]]]],[-1,[[7,[5,6]]],[[4,[3]],8]],[-1,[[7,[5,6]]],[[4,[3]],8]],[[[9,[-1]]],[[7,[5,6]]],[[4,[3]],8]],[-1,[[2,[10]]],[[4,[3]]]],[-1,[[2,[10]]],[[4,[3]]]],[[11,12],13],[[11,12],13],[-1,-1,[]],[-1,-2,[],[]],[3,[[15,[[0,[14]]]]]],[3,[[7,[[16,[[5,[-1,1]]]],11]]],[]],[3,[[7,[5,6]]]],[[[9,[-1]]],[[7,[5,6]]],[[4,[3]],8]],[3,[[7,[5,6]]]],[3,[[7,[5,6]]]],[11,[[15,[17]]]],[1,1],[-1,10,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,18,[]],0,0,0,0,0,0],"c":[],"p":[[3,"PathBuf",35],[6,"Result",36],[3,"Path",35],[8,"AsRef",37],[15,"tuple"],[3,"Error",38],[4,"Result",39],[8,"Debug",40],[15,"slice"],[3,"String",41],[4,"LoadDataError",0],[3,"Formatter",40],[6,"Result",40],[8,"Iterator",42],[4,"Option",43],[3,"Vec",44],[8,"Error",45],[3,"TypeId",46],[13,"CreateDir",29],[13,"ReadPersistedData",29],[13,"DeserializeData",29]],"b":[[13,"impl-Debug-for-LoadDataError"],[14,"impl-Display-for-LoadDataError"]]},\
"health":{"doc":"Health check registry implementation.","t":"NIDENNLLLLLLLLLLLLLKLLLLLLL","n":["Fail","HealthCheck","HealthCheckRegistry","HealthStatus","Ok","Warning","borrow","borrow","borrow_mut","borrow_mut","default","eq","fmt","from","from","into","into","new","register","status","status","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"health"],[27,"core::fmt"],[28,"core::fmt"],[29,"core::result"],[30,"core::any"]],"d":["","","","The result of the health check, which can be one of the …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[2,0,0,0,2,2,1,2,1,2,1,2,2,1,2,1,2,1,1,8,1,1,2,1,2,1,2],"f":[0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[2,2],3],[[2,4],5],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[1,6,-1],7,8],[-1,[[9,[7]]],[]],[1,2],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,11,[]],[-1,11,[]]],"c":[],"p":[[3,"HealthCheckRegistry",0],[4,"HealthStatus",0],[15,"bool"],[3,"Formatter",27],[6,"Result",27],[15,"str"],[15,"tuple"],[8,"HealthCheck",0],[6,"Result",28],[4,"Result",29],[3,"TypeId",30]],"b":[]},\
"hex_utils":{"doc":"","t":"FADLLLLLLLLL","n":["decode_hex","serde_as","Hex","borrow","borrow_mut","deserialize_as","from","into","serialize_as","try_from","try_into","type_id"],"q":[[0,"hex_utils"],[2,"hex_utils::serde_as"],[12,"alloc::vec"],[13,"hex::error"],[14,"core::result"],[15,"serde::de"],[16,"hex"],[17,"hex"],[18,"core::any"]],"d":["","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","",""],"i":[0,0,0,11,11,11,11,11,11,11,11,11],"f":[[1,[[5,[[3,[2]],4]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[5,[-2]]],6,7],[-1,-1,[]],[-1,-2,[],[]],[[-1,-2],5,8,9],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,10,[]]],"c":[],"p":[[15,"str"],[15,"u8"],[3,"Vec",12],[4,"FromHexError",13],[4,"Result",14],[8,"Deserializer",15],[8,"FromHex",16],[8,"ToHex",16],[8,"Serializer",17],[3,"TypeId",18],[3,"Hex",2]],"b":[]},\
"ivalue_utils":{"doc":"","t":"NNNNNNNNNNNNNNEENNNNNNNNNNNNNNNNNNNNSSFLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLFFFFLLLLLLLLLLLLF","n":["Array","Array","Boolean","Boolean","ByteArray","ByteArray","F32","F32","F64","F64","I32","I32","I64","I64","IType","IValue","Record","Record","S16","S16","S32","S32","S64","S64","S8","S8","String","String","U16","U16","U32","U32","U64","U64","U8","U8","VARIANT_COUNT","VARIANT_COUNT","as_str","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deserialize","eq","eq","equivalent","equivalent","equivalent","error","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","into","into","into_record","into_record_opt","into_string","ok","parse","serialize","to_bytes","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","unit"],"q":[[0,"ivalue_utils"],[91,"core::option"],[92,"core::result"],[93,"serde::de"],[94,"serde_json::value"],[95,"core::fmt"],[96,"core::fmt"],[97,"alloc::vec"],[98,"core::hash"],[99,"wast::parser"],[100,"wast"],[101,"serde::ser"],[102,"std::io::error"],[103,"std::io"],[104,"core::any"]],"d":["An array of values of the same type.","A byte array.","Boolean.","Boolean value.","Specialization of arrays for byte vector.","Specialization of array type for byte vector.","A 32-bits float.","A 32-bits float.","A 64-bits float.","A 64-bits float.","A 32-bits integer (as defined in WebAssembly core).","A 32-bits integer (as defined in WebAssembly core).","A 64-bits integer (as defined in WebAssembly core).","A 64-bits integer (as defined in WebAssembly core).","Represents the types supported by WIT.","A WIT value.","A record contains record index from interfaces AST.","A record.","A 16-bits signed integer.","A 16-bits signed integer.","A 32-bits signed integer.","A 32-bits signed integer.","A 64-bits signed integer.","A 64-bits signed integer.","A 8-bits signed integer.","A 8-bits signed integer.","A string.","A string.","A 16-bits unsigned integer.","A 16-bits unsigned integer.","A 32-bits unsigned integer.","A 32-bits unsigned integer.","A 64-bits unsigned integer.","A 64-bits unsigned integer.","A 8-bits unsigned integer.","A 8-bits unsigned integer.","","","","","","","","","","","","","","","","","","","Converts erroneous result of call_service into …","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts result of call_service into <code>IValue::Record</code>","Converts result of call_service into <code>IValue::Record</code>","","Converts successful result of call_service into …","","","","","","","","","","","","","Converts empty result of call_service into <code>IValue::Record</code>"],"i":[4,1,4,1,4,1,4,1,4,1,4,1,4,1,0,0,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,0,4,1,4,1,4,1,4,1,1,4,4,1,4,4,4,0,4,1,4,1,1,1,1,1,1,1,1,1,1,1,1,1,4,4,1,0,0,0,0,4,4,4,4,1,4,4,1,4,1,4,1,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[3,[2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[4,4],[1,1],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[],1],[-1,[[6,[4]]],7],[[4,4],8],[[1,1],8],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[9,[[3,[1]]]],[[4,10],[[6,[5,11]]]],[[1,10],[[6,[5,11]]]],[-1,-1,[]],[12,1],[13,1],[14,1],[[[16,[15]]],1],[17,1],[18,1],[19,1],[-1,-1,[]],[20,1],[15,1],[21,1],[22,1],[23,1],[[4,-1],5,24],[-1,-2,[],[]],[-1,-2,[],[]],[[[6,[9,9]]],[[3,[1]]]],[[[6,[[3,[9]],9]]],[[3,[1]]]],[1,[[3,[14]]]],[9,[[3,[1]]]],[25,[[6,[4,26]]]],[[4,-1],6,27],[[4,-1],[[6,[5,28]]],29],[-1,-2,[],[]],[-1,-2,[],[]],[4,14],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,30,[]],[-1,30,[]],[[],[[3,[1]]]]],"c":[],"p":[[4,"IValue",0],[15,"str"],[4,"Option",91],[4,"IType",0],[15,"tuple"],[4,"Result",92],[8,"Deserializer",93],[15,"bool"],[4,"Value",94],[3,"Formatter",95],[3,"Error",95],[15,"i64"],[15,"u16"],[3,"String",96],[15,"u8"],[3,"Vec",97],[15,"u32"],[15,"u64"],[15,"f64"],[15,"i32"],[15,"i8"],[15,"f32"],[15,"i16"],[8,"Hasher",98],[3,"Parser",99],[3,"Error",100],[8,"Serializer",101],[3,"Error",102],[8,"Write",103],[3,"TypeId",104]],"b":[[58,"impl-From%3Ci64%3E-for-IValue"],[59,"impl-From%3Cu16%3E-for-IValue"],[60,"impl-From%3CString%3E-for-IValue"],[61,"impl-From%3CVec%3Cu8%3E%3E-for-IValue"],[62,"impl-From%3Cu32%3E-for-IValue"],[63,"impl-From%3Cu64%3E-for-IValue"],[64,"impl-From%3Cf64%3E-for-IValue"],[66,"impl-From%3Ci32%3E-for-IValue"],[67,"impl-From%3Cu8%3E-for-IValue"],[68,"impl-From%3Ci8%3E-for-IValue"],[69,"impl-From%3Cf32%3E-for-IValue"],[70,"impl-From%3Ci16%3E-for-IValue"]]},\
"json_utils":{"doc":"","t":"AFFFFF","n":["base64_serde","err_as_value","into_array","into_string","deserialize","serialize"],"q":[[0,"json_utils"],[4,"json_utils::base64_serde"],[6,"serde_json::value"],[7,"core::fmt"],[8,"core::fmt"],[9,"core::option"],[10,"alloc::string"],[11,"core::result"],[12,"serde::de"],[13,"serde::ser"]],"d":["","Converts an error into IValue::String","","","",""],"i":[0,0,0,0,0,0],"f":[0,[-1,1,[2,3]],[1,[[5,[[4,[1]]]]]],[1,[[5,[6]]]],[-1,[[8,[[4,[7]]]]],9],[[[4,[7]],-1],8,10]],"c":[],"p":[[4,"Value",6],[8,"Debug",7],[8,"Display",7],[3,"Vec",8],[4,"Option",9],[3,"String",10],[15,"u8"],[4,"Result",11],[8,"Deserializer",12],[8,"Serializer",13]],"b":[]},\
"kademlia":{"doc":"","t":"NNNENDDIDENNNNNNNKLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMKLLKLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMM","n":["AddContact","Bootstrap","Cancelled","Command","DiscoverPeer","Kademlia","KademliaApi","KademliaApiT","KademliaConfig","KademliaError","LocalLookup","Neighborhood","NoKnownPeers","NoPeersFound","PeerBanned","PeerTimedOut","QueryTimedOut","add_contact","add_contact","add_contact","add_kad_node","as_","as_","as_","as_","as_","bootstrap","bootstrap","bootstrap","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","debug","debug","debug","debug","debug","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","discover_peer","discover_peer","discover_peer","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","from","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","handle_established_inbound_connection","handle_established_outbound_connection","handle_pending_inbound_connection","handle_pending_outbound_connection","init","init","init","init","init","into","into","into","into","into","kad_config","local_lookup","local_lookup","local_lookup","neighborhood","neighborhood","neighborhood","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","on_connection_handler_event","on_swarm_event","outlet","peer_id","poll","references","references","references","references","references","remote_neighborhood","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","contact","count","key","out","out","out","out","peer","peer"],"q":[[0,"kademlia"],[144,"kademlia::Command"],[153,"particle_protocol::contact"],[154,"libp2p_identity::peer_id"],[155,"multiaddr"],[156,"alloc::vec"],[157,"bnum::cast"],[158,"core::result"],[159,"futures_core::future"],[160,"tokio::sync::oneshot"],[161,"core::fmt"],[162,"core::fmt"],[163,"std::io::error"],[164,"libp2p_swarm::connection"],[165,"libp2p_swarm"],[166,"libp2p_swarm"],[167,"core::option"],[168,"multihash::multihash"],[169,"libp2p_metrics"],[170,"alloc::sync"],[171,"system_interface::fs::fd_flags"],[172,"libp2p_swarm"],[173,"core::task::wake"],[174,"libp2p_swarm"],[175,"libipld_core::raw"],[176,"anyhow"],[177,"std::io"],[178,"cid::cid"],[179,"core::iter::traits::collect"],[180,"alloc::string"],[181,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[18,18,10,0,18,0,0,0,0,0,18,18,10,10,10,10,10,46,3,5,3,17,3,18,5,10,46,3,5,17,3,18,5,10,17,3,18,5,10,5,5,17,3,18,5,10,17,17,3,18,5,10,17,3,18,5,10,46,3,5,17,3,18,5,10,18,5,10,10,17,3,18,5,10,17,3,18,5,10,3,3,3,3,17,3,18,5,10,17,3,18,5,10,17,46,3,5,46,3,5,3,17,3,18,5,10,3,3,5,17,3,17,3,18,5,10,3,17,3,18,5,10,5,10,17,3,18,5,10,17,3,18,5,10,17,3,18,5,10,17,3,18,5,10,47,48,48,49,50,51,48,49,51],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[3,1],4],[[5,1],2],[[3,6,[8,[7]]],4],[-1,-3,[],[],[[9,[-2]]]],[-1,-3,[],[],[[9,[-2]]]],[-1,-3,[],[],[[9,[-2]]]],[-1,-3,[],[],[[9,[-2]]]],[-1,-3,[],[],[[9,[-2]]]],[-1,[[12,[[11,[4,10]]]]],[]],[[3,[13,[[11,[4,10]]]]],4],[5,[[12,[[11,[4,10]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[5,5],[[-1,-2],4,[],[]],[14,[[11,[4,15]]]],[14,[[11,[4,15]]]],[14,[[11,[4,15]]]],[14,[[11,[4,15]]]],[14,[[11,[4,15]]]],[16,-1,[]],[17],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[[-1,6],[[12,[[11,[[8,[7]],10]]]]],[]],[[3,6,[13,[[11,[[8,[7]],10]]]]],4],[[5,6],[[12,[[11,[[8,[7]],10]]]]]],[16,4],[16,4],[16,4],[16,4],[16,4],[[18,14],19],[[5,14],19],[[10,14],19],[[10,14],19],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[[11,[20,21]]],[]],[-1,[[11,[20,21]]],[]],[-1,[[11,[20,21]]],[]],[-1,[[11,[20,21]]],[]],[-1,[[11,[20,21]]],[]],[[3,22,6,7,7],[[11,[[23,[3]],24]]]],[[3,22,6,7,25],[[11,[[23,[3]],24]]]],[[3,22,7,7],[[11,[4,24]]]],[[3,22,[26,[6]],[27,[7]],25],[[11,[[8,[7]],24]]]],[[],16],[[],16],[[],16],[[],16],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[-1,6],[[12,[[11,[[8,[7]],10]]]]],[]],[[3,6,[13,[[8,[7]]]]],4],[[5,6],[[12,[[11,[[8,[7]],10]]]]]],[[-1,28,16],[[12,[[11,[[8,[6]],10]]]]],[]],[[3,28,16,[13,[[11,[[8,[6]],10]]]]],4],[[5,28,16],[[12,[[11,[[8,[6]],10]]]]]],[[17,[26,[[30,[29]]]]],[[4,[3,5]]]],[[-1,20],[[11,[[31,[-2]],21]]],[],32],[[-1,20],[[11,[[31,[-2]],21]]],[],32],[[-1,20],[[11,[[31,[-2]],21]]],[],32],[[-1,20],[[11,[[31,[-2]],21]]],[],32],[[-1,20],[[11,[[31,[-2]],21]]],[],32],[[3,6,22,[33,[3]]],4],[[3,34],4],0,0,[[3,35],[[38,[[37,[4,[36,[3]]]]]]]],[[39,-1,-2],[[11,[4,40]]],41,[[43,[42]]]],[[39,-1,-2],[[11,[4,40]]],41,[[43,[42]]]],[[39,-1,-2],[[11,[4,40]]],41,[[43,[42]]]],[[39,-1,-2],[[11,[4,40]]],41,[[43,[42]]]],[[39,-1,-2],[[11,[4,40]]],41,[[43,[42]]]],[[3,28,[13,[[11,[[8,[6]],10]]]]],4],[[-1,[31,[-2]]],[[11,[4,21]]],[],32],[[-1,[31,[-2]]],[[11,[4,21]]],[],32],[[-1,[31,[-2]]],[[11,[4,21]]],[],32],[[-1,[31,[-2]]],[[11,[4,21]]],[],32],[[-1,[31,[-2]]],[[11,[4,21]]],[],32],[-1,-2,[],[]],[-1,44,[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"Contact",153],[15,"bool"],[3,"Kademlia",0],[15,"tuple"],[3,"KademliaApi",0],[3,"PeerId",154],[3,"Multiaddr",155],[3,"Vec",156],[8,"CastFrom",157],[4,"KademliaError",0],[4,"Result",158],[6,"BoxFuture",159],[3,"Sender",160],[3,"Formatter",161],[3,"Error",161],[15,"usize"],[3,"KademliaConfig",0],[4,"Command",0],[6,"Result",161],[3,"FdFlags",162],[3,"Error",163],[3,"ConnectionId",164],[6,"THandler",165],[3,"ConnectionDenied",165],[4,"Endpoint",166],[4,"Option",167],[15,"slice"],[3,"Multihash",168],[3,"Metrics",169],[3,"Arc",170],[3,"SetFdFlags",162],[8,"AsFilelike",171],[6,"THandlerOutEvent",165],[4,"FromSwarm",172],[3,"Context",173],[6,"THandlerInEvent",165],[4,"ToSwarm",172],[4,"Poll",174],[3,"RawCodec",175],[3,"Error",176],[8,"Read",177],[3,"Cid",178],[8,"Extend",179],[3,"String",180],[3,"TypeId",181],[8,"KademliaApiT",0],[13,"AddContact",144],[13,"Neighborhood",144],[13,"LocalLookup",144],[13,"Bootstrap",144],[13,"DiscoverPeer",144]],"b":[[67,"impl-Debug-for-KademliaError"],[68,"impl-Display-for-KademliaError"]]},\
"local_vm":{"doc":"","t":"DNNDNNEENNDNGNNNNNNLMLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLFFLLLLLLLLLMMFLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLF","n":["AVMRunner","Call","CleanupData","ClientFunctionsResult","CreateAnomalyDir","CreateDataStore","DataStoreError","Instruction","None","Null","ParticleDataStore","ReadData","Returned","Seq","SerializeAnomaly","Some","StoreData","VaultError","WriteAnomaly","add","anomaly_data_store","anomaly_dir","as_","as_","as_","as_","as_","batch_cleanup_data","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","call","call_tracing","client_functions","clone","clone_into","create_runtime","data_file","debug","debug","debug","debug","debug","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","detect_anomaly","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","host_call","init","init","init","init","init","initialize","into","into","into","into","into","into_air","into_effects","make_particle","make_vm","memory_stats","memory_stats","new","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","outcome","particle_data_store","read_args","read_data","references","references","references","references","references","returned","save_anomaly_data","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","source","store_data","to_human_readable_data","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vault","vzip","vzip","vzip","vzip","vzip","wrap_script"],"q":[[0,"local_vm"],[157,"alloc::string"],[158,"std::path"],[159,"bnum::cast"],[160,"libp2p_identity::peer_id"],[161,"alloc::vec"],[162,"avm_interface::call_service_result"],[163,"std::collections::hash::map"],[164,"fluence_keypair::key_pair"],[165,"avm_interface::raw_outcome"],[166,"avm_server::errors"],[167,"core::result"],[168,"core::convert"],[169,"avm_interface::particle_parameters"],[170,"serde_json::value"],[171,"particle_args::args"],[172,"core::task::wake"],[173,"core::fmt"],[174,"core::fmt"],[175,"core::fmt"],[176,"system_interface::fs::fd_flags"],[177,"std::io::error"],[178,"aquamarine::particle_effects"],[179,"alloc::sync"],[180,"particle_protocol::particle"],[181,"core::option"],[182,"std::path"],[183,"avm_server::runner"],[184,"libipld_core::raw"],[185,"anyhow"],[186,"std::io"],[187,"cid::cid"],[188,"core::iter::traits::collect"],[189,"core::error"],[190,"core::any"]],"d":["","","","","","","","","No value.","","","","","","","Some value of type <code>T</code>.","","","","","","Returns $ANOMALY_DATA_STORE/$particle_id/$timestamp","","","","","","","","","","","","","","","","","","","","","","","Creates <code>AVM</code> in background (on blocking threadpool)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Create AVM with the provided config.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,33,0,33,33,0,0,37,1,0,33,0,1,33,37,33,33,33,1,3,3,1,25,12,3,33,3,1,25,12,3,33,1,25,12,3,33,12,12,12,0,3,3,12,3,1,25,12,3,33,1,25,12,3,33,1,25,12,3,33,3,1,25,12,3,33,1,1,1,1,1,1,1,25,3,33,33,1,25,12,3,33,33,1,25,12,3,33,0,1,25,12,3,33,3,1,25,12,3,33,1,12,0,0,12,12,12,3,1,25,12,3,33,25,3,0,3,1,25,12,3,33,25,3,1,25,12,3,33,33,3,12,3,33,1,25,12,3,33,1,25,12,3,33,1,25,12,3,33,3,1,25,12,3,33,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],1],0,[[3,4,4,[6,[5]]],7],[-1,-3,[],[],[[8,[-2]]]],[-1,-3,[],[],[[8,[-2]]]],[-1,-3,[],[],[[8,[-2]]]],[-1,-3,[],[],[[8,[-2]]]],[-1,-3,[],[],[[8,[-2]]]],[[3,[10,[[11,[2,9,[10,[5]],2]]]]],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[12,-1,-2,-3,-4,13,14,-5,[16,[14,15]],17,2],[[20,[18,19]]],[[21,[2]]],[[21,[[10,[5]]]]],[[21,[[10,[5]]]]],[[21,[2]]],[[21,[2]]]],[[12,-1,-2,-3,22,[16,[14,15]],17],[[20,[18]]],[[21,[2]]],[[21,[[10,[5]]]]],[[21,[[10,[5]]]]]],[[12,-1,-2,-3,-4,13,14,-5,[16,[14,15]],2,5,5,[10,[5]],2],[[20,[18,19]]],[[21,[2]]],[[21,[[10,[5]]]]],[[21,[[10,[5]]]]],[[21,[2]]],[[21,[2]]]],[[[16,[2,23]],24],25],[3,3],[[-1,-2],11,[],[]],[26,[[20,[12]]]],[[3,4,4,[6,[5]]],7],[27,[[20,[11,28]]]],[27,[[20,[11,28]]]],[27,[[20,[11,28]]]],[27,[[20,[11,28]]]],[27,[[20,[11,28]]]],[29,-1,[]],[29,-1,[]],[29,-1,[]],[29,-1,[]],[29,-1,[]],[29,-1,[]],[29,-1,[]],[29,-1,[]],[29,-1,[]],[29,-1,[]],[[3,30,29,18],31],[29,11],[29,11],[29,11],[29,11],[29,11],[[1,1],31],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[-1,-2],31,[],[]],[[1,27],32],[[25,27],32],[[3,27],[[20,[11,28]]]],[[33,27],[[20,[11,28]]]],[[33,27],[[20,[11,28]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[34,33],[-1,-1,[]],[-1,[[20,[35,36]]],[]],[-1,[[20,[35,36]]],[]],[-1,[[20,[35,36]]],[]],[-1,[[20,[35,36]]],[]],[-1,[[20,[35,36]]],[]],[[[16,[2,23]],24],[[11,[15,37]]]],[[],29],[[],29],[[],29],[[],29],[[],29],[3,[[20,[11,33]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,2],[[[20,[18]],2],38],[[9,[16,[2,23]],2,-1,12,[39,[3]],31,30,17],40,[[21,[[41,[9]]]]]],[42,12],[12,43],[12,43],[[7,[41,[13]],44,45],[[20,[12,19]]]],[[7,7,7],3],[[-1,35],[[20,[[46,[-2]],36]]],[],47],[[-1,35],[[20,[[46,[-2]],36]]],[],47],[[-1,35],[[20,[[46,[-2]],36]]],[],47],[[-1,35],[[20,[[46,[-2]],36]]],[],47],[[-1,35],[[20,[[46,[-2]],36]]],[],47],0,0,[[40,9,12,[39,[3]],17],[[41,[[20,[[10,[23]],[10,[23]]]]]]]],[[3,4,4,[6,[5]]],[[20,[[10,[5]],33]]]],[[48,-1,-2],[[20,[11,49]]],50,[[52,[51]]]],[[48,-1,-2],[[20,[11,49]]],50,[[52,[51]]]],[[48,-1,-2],[[20,[11,49]]],50,[[52,[51]]]],[[48,-1,-2],[[20,[11,49]]],50,[[52,[51]]]],[[48,-1,-2],[[20,[11,49]]],50,[[52,[51]]]],0,[[3,4,[6,[5]],[16,[14,15]],22,[6,[5]],18,30,29],[[20,[11,33]]]],[[-1,[46,[-2]]],[[20,[11,36]]],[],47],[[-1,[46,[-2]]],[[20,[11,36]]],[],47],[[-1,[46,[-2]]],[[20,[11,36]]],[],47],[[-1,[46,[-2]]],[[20,[11,36]]],[],47],[[-1,[46,[-2]]],[[20,[11,36]]],[],47],[33,[[41,[53]]]],[[3,[6,[5]],4,4,[6,[5]]],[[20,[11,33]]]],[[12,[10,[5]]],[[20,[2,19]]]],[-1,-2,[],[]],[-1,2,[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,[[20,[-2]]],[],[]],[-1,54,[]],[-1,54,[]],[-1,54,[]],[-1,54,[]],[-1,54,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[2,[16,[2,23]],-1,31,[41,[9]]],2,[[21,[[41,[9]]]]]]],"c":[],"p":[[4,"Instruction",0],[3,"String",157],[3,"ParticleDataStore",0],[15,"str"],[15,"u8"],[15,"slice"],[3,"PathBuf",158],[8,"CastFrom",159],[3,"PeerId",160],[3,"Vec",161],[15,"tuple"],[3,"AVMRunner",0],[15,"u64"],[15,"u32"],[3,"CallServiceResult",162],[3,"HashMap",163],[4,"KeyPair",164],[3,"RawAVMOutcome",165],[4,"RunnerError",166],[4,"Result",167],[8,"Into",168],[3,"ParticleParameters",169],[4,"Value",170],[3,"Args",171],[3,"ClientFunctionsResult",0],[3,"Waker",172],[3,"Formatter",173],[3,"Error",173],[15,"usize"],[3,"Duration",174],[15,"bool"],[6,"Result",173],[4,"DataStoreError",0],[4,"VaultError",175],[3,"FdFlags",176],[3,"Error",177],[6,"Returned",0],[3,"ParticleEffects",178],[3,"Arc",179],[3,"Particle",180],[4,"Option",181],[3,"Path",158],[3,"AVMMemoryStats",182],[3,"AVMRuntimeLimits",182],[15,"i32"],[3,"SetFdFlags",176],[8,"AsFilelike",183],[3,"RawCodec",184],[3,"Error",185],[8,"Read",186],[3,"Cid",187],[8,"Extend",188],[8,"Error",189],[3,"TypeId",190]],"b":[[38,"impl-AVMRunner"],[39,"impl-AquaRuntime-for-AVMRunner"],[76,"impl-Display-for-DataStoreError"],[77,"impl-Debug-for-DataStoreError"],[105,"impl-AquaRuntime-for-AVMRunner"],[106,"impl-AVMRunner"]]},\
"log_format":{"doc":"","t":"DLLLLLLLLLLLLLLLLLL","n":["Format","borrow","borrow_mut","clone","clone_into","default","fmt","format_event","from","into","to_owned","try_from","try_into","type_id","with_display_span_list","with_level","with_target","with_timer","without_time"],"q":[[0,"log_format"],[19,"core::clone"],[20,"tracing_subscriber::fmt::time"],[21,"core::fmt"],[22,"core::fmt"],[23,"tracing_subscriber::fmt::format"],[24,"tracing_core::event"],[25,"tracing_subscriber::fmt::time"],[26,"tracing_subscriber::registry"],[27,"tracing_subscriber::fmt::format"],[28,"core::any"]],"d":["","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","Sets whether or not an event’s spans is displayed.","Sets whether or not an event’s level is displayed.","Sets whether or not an event’s target is displayed.","Use the given <code>timer</code> for log message timestamps.","Do not emit timestamps with log messages."],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],[[1,[-1]]],2],[[-1,-2],3,[],[]],[[],[[1,[4]]]],[[[1,[-1]],5],6,7],[[[1,[-1]],[8,[-2,-3]],9,10],6,11,[12,13],14],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[[[1,[-1]],17],[[1,[-1]]],[]],[[[1,[-1]],17],[[1,[-1]]],[]],[[[1,[-1]],17],[[1,[-1]]],[]],[[[1,[-1]],-2],[[1,[-2]]],[],[]],[[[1,[-1]]],[[1,[3]]],[]]],"c":[],"p":[[3,"Format",0],[8,"Clone",19],[15,"tuple"],[3,"SystemTime",20],[3,"Formatter",21],[6,"Result",21],[8,"Debug",21],[3,"FmtContext",22],[3,"Writer",23],[3,"Event",24],[8,"FormatTime",20],[8,"Subscriber",25],[8,"LookupSpan",26],[8,"FormatFields",23],[4,"Result",27],[3,"TypeId",28],[15,"bool"]],"b":[]},\
"log_utils":{"doc":"","t":"DLLLFFLLLLLLLLLL","n":["LogSpec","borrow","borrow_mut","default","enable_logs","enable_logs_for","from","into","new","try_from","try_into","type_id","with_defaults","with_directives","with_level","with_wasm_level"],"q":[[0,"log_utils"],[16,"tracing_subscriber::filter::env::directive"],[17,"alloc::vec"],[18,"core::result"],[19,"core::any"],[20,"tracing_core::metadata"],[21,"log"]],"d":["","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1],"f":[0,[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],2],[1,2],[-1,-1,[]],[-1,-2,[],[]],[[[4,[3]]],1],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,6,[]],[1,1],[[1,[4,[3]]],1],[[1,7],1],[[1,8],1]],"c":[],"p":[[3,"LogSpec",0],[15,"tuple"],[3,"Directive",16],[3,"Vec",17],[4,"Result",18],[3,"TypeId",19],[3,"Level",20],[4,"Level",21]],"b":[]},\
"now_millis":{"doc":"","t":"FFF","n":["now","now_ms","now_sec"],"q":[[0,"now_millis"],[3,"core::time"]],"d":["Returns UNIX timestamp as Duration","Returns UNIX timestamp in milliseconds","Returns UNIX timestamp in seconds"],"i":[0,0,0],"f":[[[],1],[[],2],[[],3]],"c":[],"p":[[3,"Duration",3],[15,"u128"],[15,"u64"]],"b":[]},\
"nox":{"doc":"","t":"NNNNNEDNNNNDENNNNENNNDNNDDMLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLMMLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMLLMFMLLLLLLLLLLLMLLMLLLLLLLLLLLMLLLLLLLLLMLLLMMLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMM","n":["AddContact","Bootstrap","Connect","ConnectionLimits","ConnectionPool","ConnectionPoolCommand","Connectivity","CountConnections","Dial","Disconnect","DiscoverPeer","FluenceNetworkBehaviour","FluenceNetworkBehaviourEvent","GetContact","Identify","IsConnected","Kademlia","KademliaCommand","LifecycleEvents","LocalLookup","Neighborhood","Node","Ping","Send","StartedHttp","Versions","aquamarine_api","as_","as_","as_","as_","as_","as_","as_","as_","as_ref","as_ref","avm_version","bootstrap_frequency","bootstrap_nodes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builtins","builtins_management_peer_id","chain_listener","clone","clone","clone_into","clone_into","connection_pool","connectivity","debug","debug","debug","debug","debug","debug","debug","debug","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","discover_peer","dispatcher","drop","drop","drop","drop","drop","drop","drop","drop","env_filter","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","handle_established_inbound_connection","handle_established_outbound_connection","handle_pending_inbound_connection","handle_pending_outbound_connection","health","init","init","init","init","init","init","init","init","inject_identify_event","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","kademlia","kademlia_bootstrap","listen","listen_addr","log_layer","metrics","new","new","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","node_version","on_connection_handler_event","on_swarm_event","peer_id","poll","reconnect_bootstraps","references","references","references","references","references","references","references","references","resolve_contact","scope","send","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","spell_version","start","start","swarm","swarm","system_service","to_owned","to_owned","tracing_layer","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with","addr","contact","out","out","out","out","out","out","out","out","particle","peer_id","peer_id","peer_id","to","contact","count","key","out","out","out","out","peer","peer"],"q":[[0,"nox"],[239,"nox::ConnectionPoolCommand"],[254,"nox::KademliaCommand"],[263,"bnum::cast"],[264,"kademlia::api"],[265,"connection_pool::api"],[266,"server_config::services_config"],[267,"peer_metrics::services_metrics"],[268,"workers::key_storage"],[269,"alloc::sync"],[270,"workers::workers"],[271,"workers::scope"],[272,"health"],[273,"core::option"],[274,"alloc::string"],[275,"particle_builtins::builtins"],[276,"core::fmt"],[277,"core::fmt"],[278,"libp2p_identity::peer_id"],[279,"particle_protocol::contact"],[280,"kademlia::error"],[281,"tracing_subscriber::layer"],[282,"tracing_core::subscriber"],[283,"tracing_subscriber::registry"],[284,"core::fmt"],[285,"std::io::error"],[286,"libp2p_swarm::connection"],[287,"multiaddr"],[288,"libp2p_swarm"],[289,"libp2p_swarm"],[290,"alloc::vec"],[291,"libp2p_identify::behaviour"],[292,"tonic::request"],[293,"libp2p_core::transport"],[294,"aquamarine::aqua_runtime"],[295,"core::convert"],[296,"tracing_appender::non_blocking"],[297,"server_config::resolved_config"],[298,"core_manager::manager"],[299,"aquamarine::config"],[300,"system_services::distro"],[301,"alloc::boxed"],[302,"eyre"],[303,"server_config::network_config"],[304,"particle_protocol::particle"],[305,"tokio::sync::mpsc::bounded"],[306,"system_services::distro"],[307,"libp2p_swarm"],[308,"core::task::wake"],[309,"libp2p_swarm"],[310,"libipld_core::raw"],[311,"anyhow"],[312,"std::io"],[313,"cid::cid"],[314,"core::iter::traits::collect"],[315,"libp2p_identity::keypair"],[316,"libp2p_core::muxing::boxed"],[317,"libp2p_core::transport::boxed"],[318,"prometheus_client::registry"],[319,"libp2p_swarm"],[320,"aquamarine::particle_effects"],[321,"aquamarine::error"],[322,"aquamarine::aquamarine"],[323,"aquamarine::aquamarine"],[324,"spell_event_bus::api"],[325,"spell_event_bus::bus"],[326,"spell_event_bus::api"],[327,"sorcerer::sorcerer"],[328,"libp2p_metrics"],[329,"peer_metrics::services_metrics::backend"],[330,"core::net::socket_addr"],[331,"chain_listener::listener"]],"d":["","","","","","","This structure is just a composition of Kademlia and …","","","","","Coordinates protocols, so they can cooperate","<code>NetworkBehaviour::ToSwarm</code> produced by …","","","","","","","","","","","","","","","","","","","","","","","","","","Bootstrap will be executed after [1, N, 2<em>N, 3</em>N, …] …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Discover a peer via Kademlia","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Run kademlia bootstrap after first bootstrap is connected, …","Starts node service listener.","","","","","","","","","","","","","","","","","","","","Dial bootstraps, and then re-dial on each disconnection","","","","","","","","","","","","","","","","","","","","","Starts node service","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[27,27,28,31,31,0,0,28,28,28,27,0,0,28,31,28,31,0,28,27,27,0,31,28,0,0,45,27,28,45,2,29,34,31,15,2,2,15,2,2,27,28,45,2,29,34,31,15,27,28,45,2,29,34,31,15,45,45,45,2,15,2,15,2,45,27,28,45,2,29,34,31,15,27,28,45,2,29,34,31,15,27,28,45,2,29,34,31,15,2,45,27,28,45,2,29,34,31,15,0,27,28,29,31,15,27,28,45,2,29,34,31,15,2,2,15,15,27,28,45,2,29,34,31,15,34,34,34,34,2,27,28,45,2,29,34,31,15,34,27,28,45,2,29,34,31,15,27,28,45,2,29,34,31,15,2,2,45,29,0,2,45,34,15,27,28,45,2,29,34,31,15,15,34,34,2,34,2,27,28,45,2,29,34,31,15,2,45,2,27,28,45,2,29,34,31,15,15,45,2,45,45,15,2,15,0,27,28,45,2,29,34,31,15,27,28,45,2,29,34,31,15,27,28,45,2,29,34,31,15,27,28,45,2,29,34,31,15,45,95,96,96,97,95,98,99,100,101,102,97,98,99,100,97,103,104,104,105,106,107,104,105,107],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[2,3],[2,4],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[2,5,6,[8,[7]],[8,[9]],10,[12,[11]],13],[[14,[2]]]],0,0,[2,2],[15,15],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],0,0,[17,[[19,[16,18]]]],[17,[[19,[16,18]]]],[17,[[19,[16,18]]]],[17,[[19,[16,18]]]],[17,[[19,[16,18]]]],[17,[[19,[16,18]]]],[17,[[19,[16,18]]]],[17,[[19,[16,18]]]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[[2,21],[[19,[[12,[22]],23]]]],0,[20,16],[20,16],[20,16],[20,16],[20,16],[20,16],[20,16],[20,16],[[],[[0,[[24,[-1]]]]],[25,26]],[[27,17],[[19,[16,18]]]],[[28,17],[[19,[16,18]]]],[[29,17],30],[[31,17],[[19,[16,18]]]],[[15,17],30],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[[19,[32,33]]],[]],[-1,[[19,[32,33]]],[]],[-1,[[19,[32,33]]],[]],[-1,[[19,[32,33]]],[]],[-1,[[19,[32,33]]],[]],[-1,[[19,[32,33]]],[]],[-1,[[19,[32,33]]],[]],[-1,[[19,[32,33]]],[]],[[34,35,21,36,36],[[19,[[37,[34]],38]]]],[[34,35,21,36,39],[[19,[[37,[34]],38]]]],[[34,35,36,36],[[19,[16,38]]]],[[34,35,[12,[21]],[40,[36]],39],[[19,[[41,[36]],38]]]],0,[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[34,42,43],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],[-1,[[44,[-2]]],[],[]],0,[2,16],[[[45,[-1]],-2],[[19,[16,[46,[33]]]]],47,[[48,[[41,[36]]]]]],0,[[],[[16,[[0,[[24,[-1]]]],49]]],[25,26]],0,[[50,[8,[51]],52,53,53,54],[[56,[[55,[[45,[-1]]]]]]],47],[[57,[12,[11]]],[[16,[34,2,[59,[58]]]]]],[[13,13,13,60],15],[[-1,32],[[19,[[61,[-2]],33]]],[],62],[[-1,32],[[19,[[61,[-2]],33]]],[],62],[[-1,32],[[19,[[61,[-2]],33]]],[],62],[[-1,32],[[19,[[61,[-2]],33]]],[],62],[[-1,32],[[19,[[61,[-2]],33]]],[],62],[[-1,32],[[19,[[61,[-2]],33]]],[],62],[[-1,32],[[19,[[61,[-2]],33]]],[],62],[[-1,32],[[19,[[61,[-2]],33]]],[],62],0,[[34,21,35,[63,[34]]],16],[[34,64],16],0,[[34,65],[[68,[[67,[[66,[34]]]]]]]],[2,16],[[69,-1,-2],[[19,[16,70]]],71,[[73,[72]]]],[[69,-1,-2],[[19,[16,70]]],71,[[73,[72]]]],[[69,-1,-2],[[19,[16,70]]],71,[[73,[72]]]],[[69,-1,-2],[[19,[16,70]]],71,[[73,[72]]]],[[69,-1,-2],[[19,[16,70]]],71,[[73,[72]]]],[[69,-1,-2],[[19,[16,70]]],71,[[73,[72]]]],[[69,-1,-2],[[19,[16,70]]],71,[[73,[72]]]],[[69,-1,-2],[[19,[16,70]]],71,[[73,[72]]]],[[2,21,53],[[12,[22]]]],0,[[2,22,58],43],[[-1,[61,[-2]]],[[19,[16,33]]],[],62],[[-1,[61,[-2]]],[[19,[16,33]]],[],62],[[-1,[61,[-2]]],[[19,[16,33]]],[],62],[[-1,[61,[-2]]],[[19,[16,33]]],[],62],[[-1,[61,[-2]]],[[19,[16,33]]],[],62],[[-1,[61,[-2]]],[[19,[16,33]]],[],62],[[-1,[61,[-2]]],[[19,[16,33]]],[],62],[[-1,[61,[-2]]],[[19,[16,33]]],[],62],0,[[[55,[[45,[-1]]]],21],[[56,[0]]],47],0,[[74,57,[76,[[16,[21,75]]]],[41,[36]],[12,[11]],[12,[77]]],[[56,[[16,[[78,[34]],2,[59,[58]]]]]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[79,21,53],[[56,[[12,[[0,[[24,[-1]]]]]]]]],[25,26]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,80,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[8,"CastFrom",263],[3,"Connectivity",0],[3,"KademliaApi",264],[3,"ConnectionPoolApi",265],[3,"ServicesConfig",266],[3,"ServicesMetrics",267],[3,"KeyStorage",268],[3,"Arc",269],[3,"Workers",270],[3,"PeerScopes",271],[3,"HealthCheckRegistry",272],[4,"Option",273],[3,"String",274],[3,"Builtins",275],[3,"Versions",0],[15,"tuple"],[3,"Formatter",276],[3,"Error",276],[4,"Result",277],[15,"usize"],[3,"PeerId",278],[3,"Contact",279],[4,"KademliaError",280],[8,"Layer",281],[8,"Subscriber",282],[8,"LookupSpan",283],[4,"KademliaCommand",0],[4,"ConnectionPoolCommand",0],[3,"StartedHttp",0],[6,"Result",276],[4,"FluenceNetworkBehaviourEvent",0],[3,"FdFlags",284],[3,"Error",285],[3,"FluenceNetworkBehaviour",0],[3,"ConnectionId",286],[3,"Multiaddr",287],[6,"THandler",288],[3,"ConnectionDenied",288],[4,"Endpoint",289],[15,"slice"],[3,"Vec",290],[4,"Event",291],[15,"bool"],[3,"Request",292],[3,"Node",0],[4,"TransportError",293],[8,"AquaRuntime",294],[8,"Into",295],[3,"WorkerGuard",296],[3,"ResolvedConfig",297],[4,"CoreManager",298],[3,"DataStoreConfig",299],[15,"str"],[3,"SystemServiceDistros",300],[3,"Box",301],[6,"Result",302],[3,"NetworkConfig",303],[3,"ExtendedParticle",304],[3,"Receiver",305],[3,"Versions",300],[3,"SetFdFlags",284],[8,"AsFilelike",306],[6,"THandlerOutEvent",288],[4,"FromSwarm",307],[3,"Context",308],[6,"THandlerInEvent",288],[4,"ToSwarm",307],[4,"Poll",309],[3,"RawCodec",310],[3,"Error",311],[8,"Read",312],[3,"Cid",313],[8,"Extend",314],[3,"Keypair",315],[3,"StreamMuxerBox",316],[3,"Boxed",317],[3,"Registry",318],[3,"Swarm",288],[4,"TracingConfig",297],[3,"TypeId",319],[3,"RemoteRoutingEffects",320],[4,"AquamarineApiError",321],[3,"AquamarineApi",322],[3,"AquamarineBackend",322],[3,"Deployer",323],[3,"SpellEventBusApi",324],[3,"SpellEventBus",325],[3,"TriggerEvent",324],[3,"UnboundedReceiver",326],[3,"Sorcerer",327],[3,"Metrics",328],[3,"ServicesMetricsBackend",329],[4,"SocketAddr",330],[3,"ChainListener",331],[13,"Dial",239],[13,"Connect",239],[13,"Send",239],[13,"Disconnect",239],[13,"IsConnected",239],[13,"GetContact",239],[13,"CountConnections",239],[13,"LifecycleEvents",239],[13,"AddContact",254],[13,"Neighborhood",254],[13,"LocalLookup",254],[13,"Bootstrap",254],[13,"DiscoverPeer",254]],"b":[[35,"impl-AsRef%3CKademliaApi%3E-for-Connectivity"],[36,"impl-AsRef%3CConnectionPoolApi%3E-for-Connectivity"]]},\
"particle_args":{"doc":"","t":"ENDENNNNDNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLMMLLLLLLLLLLLLLLLLLLLMLLLLLMLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMM","n":["AVMError","AnomalyDataSeError","Args","ArgsError","DataStoreError","DeserializeError","InterpreterFailed","InvalidFormat","JError","MissingField","NonUnaryOption","RunnerError","SerdeJson","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","debug","debug","debug","debug","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_base58","from_eyre","from_fd","from_filelike","from_grip","from_into_filelike","from_into_socketlike","from_socketlike","function_args","function_name","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","init","init","init","init","into","into","into","into","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","next","next_opt","service_id","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","source","tetraplets","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","err","err","expected_type","field","field","field","field","length","value"],"q":[[0,"particle_args"],[114,"particle_args::ArgsError"],[123,"core::fmt"],[124,"core::fmt"],[125,"core::fmt"],[126,"alloc::vec"],[127,"core::iter::traits::iterator"],[128,"eyre"],[129,"std::os::fd::owned"],[130,"io_lifetimes::portability"],[131,"io_lifetimes::portability"],[132,"std::io::error"],[133,"core::convert"],[134,"system_interface::fs::fd_flags"],[135,"core::option"],[136,"alloc::string"],[137,"avm_interface::call_request_parameters"],[138,"core::any"]],"d":["","This errors are encountered from serialization of data …","Arguments passed by VM to host on call_service","","This errors are encountered from a data store object.","","This error contains interpreter outcome in case when …","","An error that can be created from any other error …","","","This errors are encountered from an AVM runner.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Retrieves next json value from iterator, parse it to T …","Retrieves a json value from iterator if it’s not empty, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,10,0,0,10,9,10,9,0,9,9,10,9,1,9,2,10,1,9,2,10,1,2,1,2,1,9,2,10,1,9,2,10,1,9,2,10,1,9,2,10,1,9,9,2,2,10,10,1,9,2,2,2,10,10,10,0,2,10,10,10,10,10,10,1,1,1,9,2,10,1,9,2,10,1,9,2,10,2,1,9,2,10,1,1,1,1,9,2,10,10,1,1,2,9,2,10,1,1,9,2,10,1,9,2,10,1,9,2,10,1,9,2,10,33,34,35,33,34,36,35,36,35],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[2,2],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[4,[[6,[3,5]]]],[4,[[6,[3,5]]]],[4,[[6,[3,5]]]],[4,[[6,[3,5]]]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,-1,[]],[7,3],[7,3],[7,3],[7,3],[[1,4],8],[[9,4],8],[[9,4],8],[[2,4],8],[[2,4],8],[[[10,[-1]],4],[[6,[3,5]]],11],[[[10,[-1]],4],[[6,[3,5]]],12],[-1,-1,[]],[-1,-1,[]],[13,-1,[]],[-1,-1,[]],[-1,2,14],[13,-1,[]],[-1,-1,[]],[-1,[[10,[-1]]],[]],[[15,-1],[[6,[[17,[16]],9]]],18],[19,2],[20,-1,[]],[20,-1,[]],[20,-1,[]],[-1,-2,21,[]],[-1,-2,22,[]],[20,-1,[]],0,0,[-1,[[6,[23,24]]],[]],[-1,[[6,[23,24]]],[]],[-1,[[6,[23,24]]],[]],[-1,[[6,[23,24]]],[]],[[],7],[[],7],[[],7],[[],7],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[[25,[15]]]],[[-1,23],[[6,[[26,[-2]],24]]],[],27],[[-1,23],[[6,[[26,[-2]],24]]],[],27],[[-1,23],[[6,[[26,[-2]],24]]],[],27],[[-1,23],[[6,[[26,[-2]],24]]],[],27],[[15,-1],[[6,[-2,9]]],18,28],[[15,-1],[[6,[[29,[-2]],9]]],18,28],0,[[-1,[26,[-2]]],[[6,[3,24]]],[],27],[[-1,[26,[-2]]],[[6,[3,24]]],[],27],[[-1,[26,[-2]]],[[6,[3,24]]],[],27],[[-1,[26,[-2]]],[[6,[3,24]]],[],27],[[[10,[-1]]],[[29,[14]]],14],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[31,[[6,[1]]]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,32,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"Args",0],[3,"JError",0],[15,"tuple"],[3,"Formatter",123],[3,"Error",123],[4,"Result",124],[15,"usize"],[6,"Result",123],[4,"ArgsError",0],[4,"AVMError",0],[8,"Debug",123],[8,"Display",123],[15,"never"],[8,"Error",125],[15,"str"],[15,"u8"],[3,"Vec",126],[8,"Iterator",127],[3,"Report",128],[3,"OwnedFd",129],[8,"IntoFilelike",130],[8,"IntoSocketlike",130],[3,"FdFlags",131],[3,"Error",132],[8,"AsRef",133],[3,"SetFdFlags",131],[8,"AsFilelike",130],[8,"Deserialize",134],[4,"Option",135],[3,"String",136],[3,"CallRequestParams",137],[3,"TypeId",138],[13,"SerdeJson",114],[13,"InvalidFormat",114],[13,"DeserializeError",114],[13,"NonUnaryOption",114]],"b":[[42,"impl-Debug-for-ArgsError"],[43,"impl-Display-for-ArgsError"],[44,"impl-Display-for-JError"],[45,"impl-Debug-for-JError"],[46,"impl-Debug-for-AVMError%3CE%3E"],[47,"impl-Display-for-AVMError%3CE%3E"]]},\
"particle_builtins":{"doc":"","t":"DDDMMLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLMMLLLLLMLLLLLLLLLMLLLLLMFLLLLLMLLLMLLLLLLLLLLLLLFF","n":["Builtins","CustomService","NodeInfo","air_version","allowed_binaries","as_","as_","as_","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builtins_call","call","call","clone","clone_into","connectivity","custom_service_call","custom_services","debug","debug","debug","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","extend","external_addresses","fallback","fmt","fmt","from","from","from","functions","get_fd_flags","get_fd_flags","get_fd_flags","init","init","init","into","into","into","modules","new","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","node_version","ok","references","references","references","remove","serialize","services","set_fd_flags","set_fd_flags","set_fd_flags","spell_version","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","wrap","wrap_unit"],"q":[[0,"particle_builtins"],[85,"bnum::cast"],[86,"particle_args::args"],[87,"particle_execution::particle_params"],[88,"particle_execution::function_outcome"],[89,"core::clone"],[90,"core::marker"],[91,"core::marker"],[92,"core::convert"],[93,"connection_pool::api"],[94,"core::future::future"],[95,"alloc::boxed"],[96,"core::pin"],[97,"core::fmt"],[98,"core::fmt"],[99,"alloc::string"],[100,"particle_execution::particle_function"],[101,"std::collections::hash::map"],[102,"core::option"],[103,"core::fmt"],[104,"std::io::error"],[105,"alloc::vec"],[106,"server_config::services_config"],[107,"peer_metrics::services_metrics"],[108,"workers::key_storage"],[109,"alloc::sync"],[110,"workers::workers"],[111,"workers::scope"],[112,"health"],[113,"system_interface::fs::fd_flags"],[114,"serde_json::value"],[115,"libipld_core::raw"],[116,"anyhow"],[117,"std::io"],[118,"cid::cid"],[119,"core::iter::traits::collect"],[120,"serde::ser"],[121,"core::any"],[122,"particle_args::args_error"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","if set, all <code>function_name</code> mismatches with …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","(function_name -&gt; service function)","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,15,15,31,2,15,31,2,15,31,2,15,2,2,2,15,15,2,2,2,31,2,15,31,2,15,31,2,15,31,2,15,2,15,31,2,15,31,2,15,31,31,2,15,31,2,15,31,2,15,2,31,2,31,2,15,15,0,31,2,15,2,15,2,31,2,15,15,15,31,2,15,31,2,15,31,2,15,31,2,15,0,0],"f":[0,0,0,0,0,[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[2,[-1]],3,4],5,[6,7,8,[10,[9]],[10,[11]]]],[[[2,[-1]],3,4],5,[6,7,8,[10,[9]],[10,[11]]]],[[[2,[-1]],3,4],[[14,[[13,[12]]]]],[6,7,8,[10,[9]],[10,[11]]]],[15,15],[[-1,-2],16,[],[]],0,[[[2,[-1]],3,4],5,[6,7,8,[10,[9]],[10,[11]]]],0,[17,[[19,[16,18]]]],[17,[[19,[16,18]]]],[17,[[19,[16,18]]]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,-1,[]],[20,16],[20,16],[20,16],[[[2,[-1]],21,[23,[21,22]],[24,[22]]],[[14,[[13,[12]]]]],[6,7,8,[10,[9]],[10,[11]]]],0,0,[[[2,[-1]],17],25,26],[[15,17],25],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,[[19,[27,28]]],[]],[-1,[[19,[27,28]]],[]],[-1,[[19,[27,28]]],[]],[[],20],[[],20],[[],20],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[30,[[16,[29,22]]]],[24,[22]]],31],[[-1,32,33,[35,[34]],[35,[36]],37,[24,[38]],21],[[2,[-1]]],[6,7,8,[10,[9]],[10,[11]]]],[[-1,27],[[19,[[39,[-2]],28]]],[],40],[[-1,27],[[19,[[39,[-2]],28]]],[],40],[[-1,27],[[19,[[39,[-2]],28]]],[],40],0,[41,5],[[42,-1,-2],[[19,[16,43]]],44,[[46,[45]]]],[[42,-1,-2],[[19,[16,43]]],44,[[46,[45]]]],[[42,-1,-2],[[19,[16,43]]],44,[[46,[45]]]],[[[2,[-1]],29],[[14,[[13,[12]]]]],[6,7,8,[10,[9]],[10,[11]]]],[[15,-1],19,47],0,[[-1,[39,[-2]]],[[19,[16,28]]],[],40],[[-1,[39,[-2]]],[[19,[16,28]]],[],40],[[-1,[39,[-2]]],[[19,[16,28]]],[],40],0,[-1,-2,[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,[[19,[-2]]],[],[]],[-1,48,[]],[-1,48,[]],[-1,48,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[19,[41,49]]],5],[[[19,[16,49]]],5]],"c":[],"p":[[8,"CastFrom",85],[3,"Builtins",0],[3,"Args",86],[3,"ParticleParams",87],[4,"FunctionOutcome",88],[8,"Clone",89],[8,"Send",90],[8,"Sync",90],[3,"KademliaApi",91],[8,"AsRef",92],[3,"ConnectionPoolApi",93],[8,"Future",94],[3,"Box",95],[3,"Pin",96],[3,"NodeInfo",0],[15,"tuple"],[3,"Formatter",97],[3,"Error",97],[4,"Result",98],[15,"usize"],[3,"String",99],[4,"ServiceFunction",100],[3,"HashMap",101],[4,"Option",102],[6,"Result",97],[8,"Debug",97],[3,"FdFlags",103],[3,"Error",104],[15,"str"],[3,"Vec",105],[3,"CustomService",0],[3,"ServicesConfig",106],[3,"ServicesMetrics",107],[3,"KeyStorage",108],[3,"Arc",109],[3,"Workers",110],[3,"PeerScopes",111],[3,"HealthCheckRegistry",112],[3,"SetFdFlags",103],[8,"AsFilelike",113],[4,"Value",114],[3,"RawCodec",115],[3,"Error",116],[8,"Read",117],[3,"Cid",118],[8,"Extend",119],[8,"Serializer",120],[3,"TypeId",121],[3,"JError",122]],"b":[[15,"impl-Builtins%3CC%3E"],[16,"impl-ParticleFunction-for-Builtins%3CC%3E"]]},\
"particle_execution":{"doc":"","t":"NNNNENNNNNNIIGIDDNEGGRENNLLLLLLLLLLLKKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLMLLLLLMLLLLLLLLLLLLLLLLLLMLLLKKMLLLLLMLMLLLLLMLLLLLLLLLLMLLLLLLLLLLLMM","n":["CleanupVault","CreateVault","Empty","Err","FunctionOutcome","Immut","InitializeVault","Mut","NotDefined","NotFound","Ok","ParticleFunction","ParticleFunctionMut","ParticleFunctionOutput","ParticleFunctionStatic","ParticleParams","ParticleVault","ReadVault","ServiceFunction","ServiceFunctionImmut","ServiceFunctionMut","VIRTUAL_PARTICLE_VAULT_PREFIX","VaultError","WriteVault","WrongVault","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branch","call","call","call","call_mut","cat","cat_slice","cleanup","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","create","debug","debug","debug","debug","debug","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","extend","extend","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_output","from_residual","from_residual","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_spell_id","id","init","init","init","init","init","init_peer_id","initialize","initialize_worker","inject_vault","into","into","into","into","into","is_defined","is_spell_particle","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","not_err","or_else","peer_scope","put","real_particle_vault","real_worker_particle_vault","remove","remove","script","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","signature","source","timestamp","to_owned","to_owned","to_owned","to_particle_parameters","to_string","token","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","ttl","type_id","type_id","type_id","type_id","type_id","virtual_particle_vault","vzip","vzip","vzip","vzip","vzip","args","params"],"q":[[0,"particle_execution"],[164,"particle_execution::FunctionOutcome"],[166,"core::ops::control_flow"],[167,"particle_args::args"],[168,"core::future::future"],[169,"alloc::boxed"],[170,"core::pin"],[171,"libp2p_identity::peer_id"],[172,"std::path"],[173,"alloc::string"],[174,"core::result"],[175,"alloc::vec"],[176,"particle_protocol::particle"],[177,"types::peer_scope"],[178,"core::fmt"],[179,"core::fmt"],[180,"core::option"],[181,"core::fmt"],[182,"core::convert"],[183,"particle_args::args_error"],[184,"core::convert"],[185,"std::io::error"],[186,"marine::wasmtime"],[187,"eyre"],[188,"std::path"],[189,"core::ops::function"],[190,"marine_call_parameters"],[191,"core::any"]],"d":["","","","","","","","","","","","","","","","Lightweight, static version of the [Particle] structure It …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Map <code>vault_dir/$current-peer-id</code> to <code>/tmp/vault</code> inside the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns false if variant is [NotDefined]","","","","","","","","Returns false if variant is Err","","","","Returns Particle File Vault path on Nox’s filesystem","","","","","","","","","","","","Unix timestamp in milliseconds","","","","","","","","","","","","","","","","","TTL in milliseconds","","","","","","Returns Particle File Vault path on Marine’s filesystem …","","","","","","",""],"i":[14,14,1,1,0,8,14,8,1,14,1,0,0,0,0,0,0,14,0,0,0,0,0,14,14,8,1,4,10,14,8,1,4,10,14,1,46,47,8,48,10,10,10,1,4,10,4,1,4,10,10,8,1,4,10,14,8,1,4,10,14,8,1,4,10,14,8,1,4,10,14,46,47,1,4,10,14,14,8,8,8,1,1,1,4,10,14,1,1,1,8,1,4,10,14,4,4,8,1,4,10,14,4,10,10,10,8,1,4,10,14,1,4,10,8,1,4,10,14,1,1,4,10,10,10,46,47,4,8,1,4,10,14,4,14,4,1,4,10,4,14,4,8,1,4,10,14,8,1,4,10,14,4,8,1,4,10,14,10,8,1,4,10,14,49,49],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,2],[[-1,3,4],[[7,[[6,[5]]]]],[]],[[-1,3,4],[[7,[[6,[5]]]]],[]],[[8,3,4],1],[[-1,3,4],9,[]],[[10,11,4,12],[[15,[13,14]]]],[[10,11,4,12],[[15,[[17,[16]],14]]]],[[10,11,18,18],[[15,[19,14]]]],[1,1],[4,4],[10,10],[[20,21,13],4],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[-1,-2],19,[],[]],[[10,11,18,18],[[15,[19,14]]]],[22,[[15,[19,23]]]],[22,[[15,[19,23]]]],[22,[[15,[19,23]]]],[22,[[15,[19,23]]]],[22,[[15,[19,23]]]],[24,-1,[]],[24,-1,[]],[24,-1,[]],[24,-1,[]],[24,-1,[]],[24,-1,[]],[24,-1,[]],[24,-1,[]],[24,-1,[]],[24,-1,[]],[24,19],[24,19],[24,19],[24,19],[24,19],[[-1,13,[25,[13,8]],[26,[8]]],[[7,[[6,[5]]]]],[]],[[-1,13,[25,[13,8]],[26,[8]]],[[7,[[6,[5]]]]],[]],[[1,22],27],[[4,22],27],[[10,22],27],[[14,22],27],[[14,22],27],[-1,-1,[]],[28,8],[29,8],[-1,-1,[]],[30,-1,[]],[-1,1,31],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],1],[[[15,[32,-1]]],1,[[34,[33]]]],[33,1],[-1,[[15,[35,36]]],[]],[-1,[[15,[35,36]]],[]],[-1,[[15,[35,36]]],[]],[-1,[[15,[35,36]]],[]],[-1,[[15,[35,36]]],[]],[18,[[26,[13]]]],0,[[],24],[[],24],[[],24],[[],24],[[],24],0,[10,[[15,[19,14]]]],[[10,11],[[15,[19,14]]]],[[10,11,37],[[38,[19]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,39],[18,39],[40,10],[[-1,35],[[15,[[41,[-2]],36]]],[],42],[[-1,35],[[15,[[41,[-2]],36]]],[],42],[[-1,35],[[15,[[41,[-2]],36]]],[],42],[[-1,35],[[15,[[41,[-2]],36]]],[],42],[[-1,35],[[15,[[41,[-2]],36]]],[],42],[1,39],[[1,-1],1,43],0,[[10,11,4,13,18],[[15,[40,14]]]],[[10,11,18,18],40],[[10,11],40],[[-1,18],[[7,[[6,[5]]]]],[]],[[-1,18],[[7,[[6,[5]]]]],[]],0,[[-1,[41,[-2]]],[[15,[19,36]]],[],42],[[-1,[41,[-2]]],[[15,[19,36]]],[],42],[[-1,[41,[-2]]],[[15,[19,36]]],[],42],[[-1,[41,[-2]]],[[15,[19,36]]],[],42],[[-1,[41,[-2]]],[[15,[19,36]]],[],42],0,[14,[[26,[31]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[4,44],[-1,13,[]],0,[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],0,[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[-1,45,[]],[[10,18,18],40],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0],"c":[],"p":[[4,"FunctionOutcome",0],[4,"ControlFlow",166],[3,"Args",167],[3,"ParticleParams",0],[8,"Future",168],[3,"Box",169],[3,"Pin",170],[4,"ServiceFunction",0],[6,"ParticleFunctionOutput",0],[3,"ParticleVault",0],[3,"PeerId",171],[3,"Path",172],[3,"String",173],[4,"VaultError",0],[4,"Result",174],[15,"u8"],[3,"Vec",175],[15,"str"],[15,"tuple"],[3,"Particle",176],[4,"PeerScope",177],[3,"Formatter",178],[3,"Error",178],[15,"usize"],[3,"HashMap",179],[4,"Option",180],[6,"Result",178],[6,"ServiceFunctionImmut",0],[6,"ServiceFunctionMut",0],[15,"never"],[8,"Error",181],[4,"Infallible",182],[3,"JError",183],[8,"Into",182],[3,"FdFlags",184],[3,"Error",185],[6,"ModuleDescriptor",186],[6,"Result",187],[15,"bool"],[3,"PathBuf",172],[3,"SetFdFlags",184],[8,"AsFilelike",188],[8,"FnOnce",189],[3,"ParticleParameters",190],[3,"TypeId",191],[8,"ParticleFunction",0],[8,"ParticleFunctionStatic",0],[8,"ParticleFunctionMut",0],[13,"NotDefined",164]],"b":[[76,"impl-Debug-for-VaultError"],[77,"impl-Display-for-VaultError"],[79,"impl-From%3CBox%3Cdyn+Fn(Args,+ParticleParams)+-%3E+Pin%3CBox%3Cdyn+Future%3COutput+=+FunctionOutcome%3E+%2B+Send%3E%3E+%2B+Send+%2B+Sync%3E%3E-for-ServiceFunction"],[80,"impl-From%3CBox%3Cdyn+FnMut(Args,+ParticleParams)+-%3E+Pin%3CBox%3Cdyn+Future%3COutput+=+FunctionOutcome%3E+%2B+Send%3E%3E+%2B+Send+%2B+Sync%3E%3E-for-ServiceFunction"],[88,"impl-FromResidual%3CResult%3CInfallible,+E%3E%3E-for-FunctionOutcome"],[89,"impl-FromResidual-for-FunctionOutcome"]]},\
"particle_modules":{"doc":"","t":"DNNNENNNNNNNNNNNNDNENNNDDNNNNNNNNNDNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLFMFLFMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM","n":["AddBlueprint","AddModule","AllEffectors","BlueprintNotFound","EffectorsMode","EmptyDependenciesList","FacadeShouldBeHash","ForbiddenEffector","IncorrectBlueprint","IncorrectModuleConfig","IncorrectVaultModuleConfig","InvalidEffectorMountedBinary","InvalidModuleConfigPath","InvalidModuleName","InvalidModulePath","InvalidModuleReference","MaxHeapSizeOverflow","ModuleConfig","ModuleConvertError","ModuleError","ModuleInfo","ModuleInvalidBase64","ModuleNotFound","ModuleRepository","NamedModuleConfig","NoModuleConfig","NoSuchBlueprint","ReadModuleInterfaceError","RestrictedEffectors","SerializeBlueprint","SerializeBlueprintJson","SerializeConfig","SerializeConfigJson","Vault","WASIConfig","WriteBlueprint","WriteConfig","WrongModuleHash","add_blueprint","add_module","add_module_base64","add_module_from_vault","add_system_module","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","debug","debug","debug","debug","debug","debug","debug","decode","default","default","default","default","dependencies","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","encode","envs","file_name","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","get_blueprint_from_cache","get_blueprints","get_facade_interface","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_interface","get_interface_by_hash","get_ipld","init","init","init","init","init","init","init","into","into","into","into","into","into","into","list_files","list_modules","load_blueprint","load_from","load_module_by_path","load_module_config_from_vault","load_module_descriptor","logger_enabled","logging_mask","mapped_dirs","mounted_binaries","name","name","new","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","references","references","references","references","references","references","references","resolve_blueprint","serialize","serialize","serialize","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wasi","binaries","effectors","binary_name","blueprint","config","config_path","config_path","err","err","err","err","err","err","err","err","err","err","err","err","err","err","err","err","forbidden_cid","id","id","id","max_heap_size_allowed","max_heap_size_wanted","module_cid","module_name","module_name","module_path","path","path","path","path","path","path","path","reference"],"q":[[0,"particle_modules"],[234,"particle_modules::EffectorsMode"],[236,"particle_modules::ModuleError"],[275,"alloc::string"],[276,"core::result"],[277,"alloc::vec"],[278,"cid_utils::hash"],[279,"particle_execution::particle_vault"],[280,"libp2p_identity::peer_id"],[281,"particle_execution::particle_params"],[282,"core::fmt"],[283,"core::fmt"],[284,"serde::de"],[285,"core::fmt"],[286,"marine_module_info_parser::errors"],[287,"service_modules::modules::blueprint"],[288,"serde_json::value"],[289,"system_interface::fs::fd_flags"],[290,"std::io::error"],[291,"particle_args::args_error"],[292,"libipld_core::ipld"],[293,"std::path"],[294,"core::iter::traits::iterator"],[295,"core::option"],[296,"marine::wasmtime"],[297,"system_interface::fs::fd_flags"],[298,"libipld_core::raw"],[299,"anyhow"],[300,"std::io"],[301,"cid::cid"],[302,"core::iter::traits::collect"],[303,"serde::ser"],[304,"core::error"],[305,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Saves new blueprint to disk","","Adds a module to the filesystem, overwriting existing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","encode IPLD object with DAG JSON codec","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get available blueprints","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","List files in directory","","Load blueprint from disk","","","","Load ModuleDescriptor from disk for a given module name","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,4,13,4,0,4,4,4,4,4,4,4,4,4,4,4,4,0,4,0,4,4,4,0,0,4,4,4,13,4,4,4,4,4,0,4,4,4,1,1,1,1,1,2,4,13,1,9,14,15,2,4,13,1,9,14,15,2,13,1,9,14,15,2,13,1,9,14,15,9,2,4,13,1,9,14,15,2,13,9,14,15,2,2,4,13,1,9,14,15,2,4,13,1,9,14,15,9,14,15,2,4,13,1,9,14,15,2,15,9,2,4,4,13,1,9,14,15,2,4,4,4,4,4,13,1,9,14,15,1,1,1,2,4,13,1,9,14,15,1,1,2,2,4,13,1,9,14,15,2,4,13,1,9,14,15,0,1,0,9,0,1,0,14,14,15,14,2,9,2,1,2,4,13,1,9,14,15,2,4,13,1,9,14,15,1,9,14,15,2,4,13,1,9,14,15,4,2,13,1,9,14,15,2,4,2,4,13,1,9,14,15,2,4,13,1,9,14,15,2,4,13,1,9,14,15,2,4,13,1,9,14,15,14,48,49,50,51,52,53,54,55,52,51,56,57,58,59,60,61,62,63,64,65,66,53,54,67,68,69,70,71,71,50,67,50,66,55,56,57,59,61,63,64,72],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],[[5,[3,4]]]],[[1,3,[7,[6]]],[[5,[8,4]]]],[[1,3,9],[[5,[3,4]]]],[[1,10,11,3,3,12],[[5,[3,4]]]],[[1,[7,[6]],9],[[5,[8,4]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,2],[13,13],[1,1],[9,9],[14,14],[15,15],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],0,[17,[[5,[16,18]]]],[17,[[5,[16,18]]]],[17,[[5,[16,18]]]],[17,[[5,[16,18]]]],[17,[[5,[16,18]]]],[17,[[5,[16,18]]]],[17,[[5,[16,18]]]],[[[19,[6]]],[[5,[2,20]]]],[[],13],[[],9],[[],14],[[],15],0,[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[-1,[[5,[9]]],22],[-1,[[5,[14]]],22],[-1,[[5,[15]]],22],[21,16],[21,16],[21,16],[21,16],[21,16],[21,16],[21,16],[2,[[5,[[7,[6]],20]]]],0,0,[[2,17],[[5,[16,18]]]],[[4,17],23],[[4,17],23],[[13,17],23],[[1,17],23],[[9,17],[[5,[16,18]]]],[[14,17],[[5,[16,18]]]],[[15,17],[[5,[16,18]]]],[-1,-1,[]],[-1,-1,[]],[24,4],[25,4],[26,4],[20,4],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[1,27],[[5,[28,4]]]],[1,[[7,[28]]]],[[1,27],[[5,[29,4]]]],[-1,[[5,[30,31]]],[]],[-1,[[5,[30,31]]],[]],[-1,[[5,[30,31]]],[]],[-1,[[5,[30,31]]],[]],[-1,[[5,[30,31]]],[]],[-1,[[5,[30,31]]],[]],[-1,[[5,[30,31]]],[]],[[1,27],[[5,[29,32]]]],[[1,8],[[5,[29,4]]]],[2,33],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[34,[[36,[[0,[35]]]]]],[1,[[5,[29,32]]]],[[34,27],[[5,[28,4]]]],0,[34,[[5,[[7,[6]],4]]]],[[10,11,3,12],[[5,[9,4]]]],[[34,8],[[5,[37,4]]]],0,0,0,0,0,0,[[3,[7,[8]]],2],[[34,34,13],1],[[-1,30],[[5,[[38,[-2]],31]]],[],39],[[-1,30],[[5,[[38,[-2]],31]]],[],39],[[-1,30],[[5,[[38,[-2]],31]]],[],39],[[-1,30],[[5,[[38,[-2]],31]]],[],39],[[-1,30],[[5,[[38,[-2]],31]]],[],39],[[-1,30],[[5,[[38,[-2]],31]]],[],39],[[-1,30],[[5,[[38,[-2]],31]]],[],39],[[40,-1,-2],[[5,[16,41]]],42,[[44,[43]]]],[[40,-1,-2],[[5,[16,41]]],42,[[44,[43]]]],[[40,-1,-2],[[5,[16,41]]],42,[[44,[43]]]],[[40,-1,-2],[[5,[16,41]]],42,[[44,[43]]]],[[40,-1,-2],[[5,[16,41]]],42,[[44,[43]]]],[[40,-1,-2],[[5,[16,41]]],42,[[44,[43]]]],[[40,-1,-2],[[5,[16,41]]],42,[[44,[43]]]],[[1,27],[[5,[[7,[37]],4]]]],[[9,-1],5,45],[[14,-1],5,45],[[15,-1],5,45],[[-1,[38,[-2]]],[[5,[16,31]]],[],39],[[-1,[38,[-2]]],[[5,[16,31]]],[],39],[[-1,[38,[-2]]],[[5,[16,31]]],[],39],[[-1,[38,[-2]]],[[5,[16,31]]],[],39],[[-1,[38,[-2]]],[[5,[16,31]]],[],39],[[-1,[38,[-2]]],[[5,[16,31]]],[],39],[[-1,[38,[-2]]],[[5,[16,31]]],[],39],[4,[[36,[46]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,[[5,[3,20]]]],[-1,3,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,47,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"ModuleRepository",0],[3,"AddBlueprint",0],[3,"String",275],[4,"ModuleError",0],[4,"Result",276],[15,"u8"],[3,"Vec",277],[3,"Hash",278],[3,"NamedModuleConfig",0],[3,"ParticleVault",279],[3,"PeerId",280],[3,"ParticleParams",281],[4,"EffectorsMode",0],[3,"ModuleConfig",0],[3,"WASIConfig",0],[15,"tuple"],[3,"Formatter",282],[3,"Error",282],[15,"slice"],[3,"Report",283],[15,"usize"],[8,"Deserializer",284],[6,"Result",282],[4,"VaultError",279],[4,"DecodeError",285],[4,"ModuleInfoError",286],[15,"str"],[3,"Blueprint",287],[4,"Value",288],[3,"FdFlags",289],[3,"Error",290],[3,"JError",291],[4,"Ipld",292],[3,"Path",293],[8,"Iterator",294],[4,"Option",295],[6,"ModuleDescriptor",296],[3,"SetFdFlags",289],[8,"AsFilelike",297],[3,"RawCodec",298],[3,"Error",299],[8,"Read",300],[3,"Cid",301],[8,"Extend",302],[8,"Serializer",303],[8,"Error",304],[3,"TypeId",305],[13,"AllEffectors",234],[13,"RestrictedEffectors",234],[13,"InvalidEffectorMountedBinary",236],[13,"SerializeBlueprint",236],[13,"SerializeConfig",236],[13,"InvalidModuleConfigPath",236],[13,"IncorrectVaultModuleConfig",236],[13,"AddModule",236],[13,"WriteConfig",236],[13,"NoSuchBlueprint",236],[13,"IncorrectBlueprint",236],[13,"NoModuleConfig",236],[13,"IncorrectModuleConfig",236],[13,"WriteBlueprint",236],[13,"ModuleConvertError",236],[13,"ModuleNotFound",236],[13,"ReadModuleInterfaceError",236],[13,"ModuleInvalidBase64",236],[13,"InvalidModulePath",236],[13,"ForbiddenEffector",236],[13,"BlueprintNotFound",236],[13,"EmptyDependenciesList",236],[13,"FacadeShouldBeHash",236],[13,"MaxHeapSizeOverflow",236],[13,"InvalidModuleReference",236]],"b":[[111,"impl-Debug-for-ModuleError"],[112,"impl-Display-for-ModuleError"],[120,"impl-From%3CVaultError%3E-for-ModuleError"],[121,"impl-From%3CDecodeError%3E-for-ModuleError"],[122,"impl-From%3CModuleInfoError%3E-for-ModuleError"],[123,"impl-From%3CReport%3E-for-ModuleError"]]},\
"particle_protocol":{"doc":"","t":"ENDNDENNNNNNNRDNEDNEENNNNNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLMLMMLLLLMLLLLLMLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLMLLLLLLLLLLMMMMMMMMMMMM","n":["CompletionChannel","ConnectionPoolDied","Contact","DecodingError","ExtendedParticle","HandlerMessage","Ignore","InParticle","InvalidKeypair","NotConnected","Ok","Oneshot","OutParticle","PROTOCOL_NAME","Particle","Particle","ParticleError","ProtocolConfig","ProtocolError","ProtocolMessage","SendStatus","SignatureVerificationFailed","SigningFailed","TimedOut","Upgrade","Upgrade","addresses","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","data","deadline","default","default","default","default","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","id","init_peer_id","into","into","into","into","into","into","into","into","into","into_protocol_message","is_expired","linked","new","new","new","outbound_substream_timeout","outlet","particle","peer_id","protocol_info","protocol_info","protocol_info","protocol_info","script","serialize","serialize","serialize","serialize","sign","signature","source","span","time_to_live","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttl","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upgrade_inbound","upgrade_inbound","upgrade_outbound","upgrade_outbound","upgrade_timeout","verify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","err","err","err","given_peer_id","init_peer_id","particle_id","particle_id","particle_id","particle_id","peer_id","after","error"],"q":[[0,"particle_protocol"],[185,"particle_protocol::ParticleError"],[195,"particle_protocol::SendStatus"],[197,"core::option"],[198,"core::result"],[199,"serde::de"],[200,"core::fmt"],[201,"core::fmt"],[202,"tracing::span"],[203,"alloc::sync"],[204,"core::time"],[205,"libp2p_identity::peer_id"],[206,"multiaddr"],[207,"alloc::vec"],[208,"serde::ser"],[209,"fluence_keypair::key_pair"],[210,"core::error"],[211,"alloc::string"],[212,"core::any"],[213,"libp2p_swarm::stream"],[214,"futures_io::if_std"],[215,"core::marker"],[216,"core::marker"]],"d":["","","","","","","","Particle being received from a remote peer. Receive-only, …","","","","","Particle being sent to remote peer. Contains a channel to …","","","","","","","","","","","","Dummy plug. Generated by the <code>OneshotHandler</code> when Inbound …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","base64-encoded","Deadline in milliseconds","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Timeout for outbound substream upgrades.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Timeout for applying the given upgrade on a substream","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,10,0,18,0,0,11,17,18,10,10,11,17,0,0,4,0,0,10,0,0,18,18,10,17,4,6,1,1,10,11,17,4,5,6,18,1,3,10,11,17,4,5,6,18,1,3,4,5,6,1,3,4,5,6,1,3,3,3,10,11,5,3,4,5,6,3,4,6,3,6,6,6,10,11,17,4,4,5,6,6,18,18,1,3,3,10,11,17,17,17,4,5,6,18,1,3,3,3,10,11,17,4,5,6,18,1,3,17,3,1,5,6,1,5,11,1,6,17,17,5,5,3,4,5,6,3,3,3,18,1,3,3,4,5,6,1,3,4,6,18,3,10,11,17,4,5,6,18,1,3,10,11,17,4,5,6,18,1,3,3,10,11,17,4,5,6,18,1,3,5,5,17,17,5,3,10,11,17,4,5,6,18,1,3,36,37,38,39,39,39,36,37,38,37,40,40],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[1,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[4,4],[5,5],[6,6],[1,1],[3,3],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],[[-1,-2],7,[],[]],0,[3,[[9,[8]]]],[[],10],[[],11],[[],5],[[],3],[-1,[[12,[4]]],13],[-1,[[12,[5]]],13],[-1,[[12,[6]]],13],[-1,[[12,[3]]],13],[[4,4],14],[[6,6],14],[[3,3],14],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[10,15],16],[[11,15],16],[[17,15],16],[[4,15],16],[[4,15],16],[[5,15],16],[[6,15],16],[[6,15],16],[[18,15],16],[[18,15],16],[[1,15],16],[[3,15],16],[[3,15],16],[-1,-1,[]],[-1,-1,[]],[7,17],[-1,-1,[]],[4,17],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[17,[[7,[4,[9,[[19,[10]]]]]]]],[3,14],[[3,[21,[20]]],1],[[22,22],5],[[23,[25,[24]]],6],[[3,20],1],0,[11,[[9,[[19,[10]]]]]],0,0,[17],[-1,[],[]],[-1,[],[]],[5],0,[[4,-1],12,26],[[5,-1],12,26],[[6,-1],12,26],[[3,-1],12,26],[[3,27],[[12,[7,18]]]],0,[18,[[9,[28]]]],0,[3,22],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],0,[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[[-1,31,-2],[],[],[]],[[5,-1],[],[32,33,34]],[[17,-1],[],[32,35,33,34]],[[-1,31,-2],[],[],[]],0,[3,[[12,[7,18]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"ExtendedParticle",0],[15,"str"],[3,"Particle",0],[4,"ProtocolMessage",0],[3,"ProtocolConfig",0],[3,"Contact",0],[15,"tuple"],[15,"u64"],[4,"Option",197],[4,"SendStatus",0],[4,"CompletionChannel",0],[4,"Result",198],[8,"Deserializer",199],[15,"bool"],[3,"Formatter",200],[6,"Result",200],[4,"HandlerMessage",0],[4,"ParticleError",0],[3,"Sender",201],[3,"Span",202],[3,"Arc",203],[3,"Duration",204],[3,"PeerId",205],[3,"Multiaddr",206],[3,"Vec",207],[8,"Serializer",208],[4,"KeyPair",209],[8,"Error",210],[3,"String",211],[3,"TypeId",212],[3,"Stream",213],[8,"AsyncRead",214],[8,"Send",215],[8,"Unpin",215],[8,"AsyncWrite",214],[13,"SigningFailed",185],[13,"SignatureVerificationFailed",185],[13,"DecodingError",185],[13,"InvalidKeypair",185],[13,"TimedOut",195]],"b":[[27,"impl-AsRef%3Cstr%3E-for-ExtendedParticle"],[28,"impl-AsRef%3CParticle%3E-for-ExtendedParticle"],[76,"impl-Display-for-ProtocolMessage"],[77,"impl-Debug-for-ProtocolMessage"],[79,"impl-Debug-for-Contact"],[80,"impl-Display-for-Contact"],[81,"impl-Debug-for-ParticleError"],[82,"impl-Display-for-ParticleError"],[84,"impl-Debug-for-Particle"],[85,"impl-Display-for-Particle"],[88,"impl-From%3C()%3E-for-HandlerMessage"],[90,"impl-From%3CProtocolMessage%3E-for-HandlerMessage"]]},\
"particle_services":{"doc":"","t":"NNNNNNNNNNNNNNNNNNNNNNNNNNNEENNNNNDENNNNNNNNNNNNNEDENNNNNNNNNNNSSNNNNNLMLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLMLLLLLLLLMLLMLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMMMMMMMMMMMMMMMMMMMMMMM","n":["AliasAsServiceId","ArgParseError","Array","Array","Boolean","Boolean","ByteArray","ByteArray","CallServiceFailedWrongWorker","CorruptedFaaSInterface","CreateServicesDir","DeserializePersistedService","Engine","F32","F32","F64","F64","FailedToCreateDirectory","Forbidden","ForbiddenAlias","ForbiddenAliasRoot","ForbiddenAliasWorker","Host","I32","I32","I64","I64","IType","IValue","InternalError","ModuleError","NoSuchAlias","NoSuchService","NoSuchServiceWithFunction","ParticleAppServices","PeerScope","ReadPersistedService","Record","Record","S16","S16","S32","S32","S64","S64","S8","S8","SerializePersistedService","Service","ServiceError","ServiceInfo","ServiceType","Spell","String","String","U16","U16","U32","U32","U64","U64","U8","U8","VARIANT_COUNT","VARIANT_COUNT","VaultError","VaultLink","WorkerId","WorkerNotFound","WritePersistedService","add_alias","aliases","as_","as_","as_","as_","as_","as_","as_","blueprint_id","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_function","call_service","check_service_worker_id","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","create_persisted_services","create_service","debug","debug","debug","debug","debug","debug","debug","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_hash","get_hash","get_interface","get_service","get_service_info","get_service_mem_stats","get_service_owner","hash","hash","id","init","init","init","init","init","init","init","into","into","into","into","into","into","into","is_spell","list_services","list_services_all","metrics","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","owner_id","parse","partial_cmp","peer_scope","references","references","references","references","references","references","references","remove_service","remove_services","resolve_alias","serialize","serialize","serialize","service_exists","service_type","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","source","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_service_id","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vault","vzip","vzip","vzip","vzip","vzip","vzip","vzip","config","err","err","err","err","err","err","err","function","function","particle_id","path","path","path","path","path","peer_scope","reason","service","service_id","service_id","user","worker_id"],"q":[[0,"particle_services"],[301,"particle_services::ServiceError"],[324,"alloc::string"],[325,"libp2p_identity::peer_id"],[326,"core::result"],[327,"bnum::cast"],[328,"serde_json::value"],[329,"alloc::vec"],[330,"core::option"],[331,"core::time"],[332,"particle_execution::function_outcome"],[333,"particle_args::args"],[334,"particle_execution::particle_params"],[335,"core::cmp"],[336,"eyre"],[337,"core::fmt"],[338,"core::fmt"],[339,"core::fmt"],[340,"particle_args::args_error"],[341,"particle_execution::particle_vault"],[342,"fluence_app_service::errors"],[343,"system_interface::fs::fd_flags"],[344,"std::io::error"],[345,"core::hash"],[346,"core::marker"],[347,"core::hash"],[348,"particle_args::args_error"],[349,"particle_modules::modules"],[350,"peer_metrics::services_metrics"],[351,"health"],[352,"workers::workers"],[353,"workers::scope"],[354,"system_interface::fs::fd_flags"],[355,"wast::parser"],[356,"wast"],[357,"libipld_core::raw"],[358,"anyhow"],[359,"std::io"],[360,"cid::cid"],[361,"core::iter::traits::collect"],[362,"serde::ser"],[363,"core::error"],[364,"std::io"]],"d":["","","An array of values of the same type.","A byte array.","Boolean.","Boolean value.","Specialization of arrays for byte vector.","Specialization of array type for byte vector.","","","","","","A 32-bits float.","A 32-bits float.","A 64-bits float.","A 64-bits float.","","","","","","","A 32-bits integer (as defined in WebAssembly core).","A 32-bits integer (as defined in WebAssembly core).","A 64-bits integer (as defined in WebAssembly core).","A 64-bits integer (as defined in WebAssembly core).","Represents the types supported by WIT.","A WIT value.","","","","","","","","","A record contains record index from interfaces AST.","A record.","A 16-bits signed integer.","A 16-bits signed integer.","A 32-bits signed integer.","A 32-bits signed integer.","A 64-bits signed integer.","A 64-bits signed integer.","A 8-bits signed integer.","A 8-bits signed integer.","","","","","","","A string.","A string.","A 16-bits unsigned integer.","A 16-bits unsigned integer.","A 32-bits unsigned integer.","A 32-bits unsigned integer.","A 64-bits unsigned integer.","A 64-bits unsigned integer.","A 8-bits unsigned integer.","A 8-bits unsigned integer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[6,6,19,20,19,20,19,20,6,6,6,6,6,19,20,19,20,6,6,6,6,6,2,19,20,19,20,0,0,6,6,6,6,6,0,0,6,19,20,19,20,19,20,19,20,19,20,6,18,0,0,0,18,19,20,19,20,19,20,19,20,19,20,19,20,6,6,2,6,6,1,28,2,18,28,1,19,6,20,28,2,18,28,1,19,6,20,2,18,28,1,19,6,20,1,1,1,2,18,1,19,20,2,18,1,19,20,2,2,1,1,2,18,28,1,19,6,20,20,2,18,28,1,19,6,20,2,18,28,1,19,6,20,2,18,19,2,18,28,1,19,6,20,2,18,19,20,2,2,2,2,2,18,18,18,18,18,19,19,19,19,19,2,18,28,1,19,6,6,20,2,18,28,1,19,6,6,6,6,6,20,20,20,20,20,20,20,20,20,20,20,20,20,2,18,28,1,19,6,20,2,19,1,1,1,1,1,2,19,28,2,18,28,1,19,6,20,2,18,28,1,19,6,20,18,1,1,1,1,2,18,28,1,19,6,20,28,19,2,28,2,18,28,1,19,6,20,1,1,1,2,18,19,1,28,2,18,28,1,19,6,20,6,19,2,18,1,19,20,1,19,6,2,18,28,1,19,6,20,2,18,28,1,19,6,20,2,18,28,1,19,6,20,1,2,18,28,1,19,6,20,70,71,72,73,74,70,75,76,77,78,74,71,72,73,75,76,79,78,77,79,74,78,80],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,3,3,4],[[7,[5,6]]]],0,[-1,-3,[],[],[[8,[-2]]]],[-1,-3,[],[],[[8,[-2]]]],[-1,-3,[],[],[[8,[-2]]]],[-1,-3,[],[],[[8,[-2]]]],[-1,-3,[],[],[[8,[-2]]]],[-1,-3,[],[],[[8,[-2]]]],[-1,-3,[],[],[[8,[-2]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1,2,9,9,[11,[10]],[12,[3]],4,13],14],[[1,15,16,17],14],[[1,2,3,9],[[7,[5,6]]]],[2,2],[18,18],[1,1],[19,19],[20,20],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[2,2],21],[[-1,-2],21,[],[]],[1,[[22,[5]]]],[[1,2,18,3,4],[[7,[3,6]]]],[23,[[7,[5,24]]]],[23,[[7,[5,24]]]],[23,[[7,[5,24]]]],[23,[[7,[5,24]]]],[23,[[7,[5,24]]]],[23,[[7,[5,24]]]],[23,[[7,[5,24]]]],[[],20],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[-1,[[7,[2]]],26],[-1,[[7,[18]]],26],[-1,[[7,[19]]],26],[25,5],[25,5],[25,5],[25,5],[25,5],[25,5],[25,5],[[2,2],17],[[18,18],17],[[19,19],17],[[20,20],17],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[2,23],[[7,[5,24]]]],[[18,23],27],[[28,23],27],[[1,23],27],[[19,23],[[7,[5,24]]]],[[6,23],27],[[6,23],27],[[20,23],[[7,[5,24]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[29,6],[30,6],[31,6],[32,6],[-1,-1,[]],[33,20],[-1,-1,[]],[34,20],[35,20],[[[11,[35]]],20],[36,20],[3,20],[37,20],[38,20],[39,20],[40,20],[41,20],[42,20],[-1,[[7,[43,44]]],[]],[-1,[[7,[43,44]]],[]],[-1,[[7,[43,44]]],[]],[-1,[[7,[43,44]]],[]],[-1,[[7,[43,44]]],[]],[-1,[[7,[43,44]]],[]],[-1,[[7,[43,44]]],[]],[[-1,-2],37,[45,46],47],[[-1,-2],37,[45,46],47],[[1,2,3,9],[[7,[10,6]]]],[[1,2,3,9],[[7,[[5,[[48,[0]],3]],6]]]],[[1,2,3,9],[[7,[28,6]]]],[[1,2,3,9],[[7,[[11,[10]],49]]]],[[1,2,3,9],[[7,[4,6]]]],[[2,-1],5,50],[[19,-1],5,50],0,[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[18,17],[[1,2],[[11,[28]]]],[1,[[11,[28]]]],0,[[51,52,[12,[53]],[12,[54]],[48,[55]],56],1],[[-1,43],[[7,[[57,[-2]],44]]],[],58],[[-1,43],[[7,[[57,[-2]],44]]],[],58],[[-1,43],[[7,[[57,[-2]],44]]],[],58],[[-1,43],[[7,[[57,[-2]],44]]],[],58],[[-1,43],[[7,[[57,[-2]],44]]],[],58],[[-1,43],[[7,[[57,[-2]],44]]],[],58],[[-1,43],[[7,[[57,[-2]],44]]],[],58],0,[59,[[7,[19,60]]]],[[2,2],[[12,[21]]]],0,[[61,-1,-2],[[7,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[7,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[7,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[7,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[7,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[7,[5,62]]],63,[[65,[64]]]],[[61,-1,-2],[[7,[5,62]]],63,[[65,[64]]]],[[1,2,9,9,4,17],[[7,[5,6]]]],[[1,2],[[7,[5,6]]]],[[1,2,3,9],[[7,[3,6]]]],[[2,-1],7,66],[[18,-1],7,66],[[19,-1],7,66],[[1,2,9],17],0,[[-1,[57,[-2]]],[[7,[5,44]]],[],58],[[-1,[57,[-2]]],[[7,[5,44]]],[],58],[[-1,[57,[-2]]],[[7,[5,44]]],[],58],[[-1,[57,[-2]]],[[7,[5,44]]],[],58],[[-1,[57,[-2]]],[[7,[5,44]]],[],58],[[-1,[57,[-2]]],[[7,[5,44]]],[],58],[[-1,[57,[-2]]],[[7,[5,44]]],[],58],[6,[[12,[67]]]],[[19,-1],[[7,[5,44]]],68],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1,2,3,9],[[7,[3,6]]]],[19,3],[-1,3,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,69,[]],[-1,69,[]],[-1,69,[]],[-1,69,[]],[-1,69,[]],[-1,69,[]],[-1,69,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"ParticleAppServices",0],[4,"PeerScope",0],[3,"String",324],[3,"PeerId",325],[15,"tuple"],[4,"ServiceError",0],[4,"Result",326],[8,"CastFrom",327],[15,"str"],[4,"Value",328],[3,"Vec",329],[4,"Option",330],[3,"Duration",331],[4,"FunctionOutcome",332],[3,"Args",333],[3,"ParticleParams",334],[15,"bool"],[4,"ServiceType",0],[4,"IType",0],[4,"IValue",0],[4,"Ordering",335],[6,"Result",336],[3,"Formatter",337],[3,"Error",337],[15,"usize"],[8,"Deserializer",338],[6,"Result",337],[3,"ServiceInfo",0],[4,"ModuleError",339],[4,"ArgsError",340],[4,"VaultError",341],[4,"AppServiceError",342],[15,"f32"],[15,"i8"],[15,"u8"],[15,"i16"],[15,"u64"],[15,"u16"],[15,"i32"],[15,"f64"],[15,"u32"],[15,"i64"],[3,"FdFlags",343],[3,"Error",344],[8,"Hash",345],[8,"Sized",346],[8,"BuildHasher",345],[3,"Arc",347],[3,"JError",340],[8,"Hasher",345],[3,"ServicesConfig",348],[3,"ModuleRepository",349],[3,"ServicesMetrics",350],[3,"HealthCheckRegistry",351],[3,"Workers",352],[3,"PeerScopes",353],[3,"SetFdFlags",343],[8,"AsFilelike",354],[3,"Parser",355],[3,"Error",356],[3,"RawCodec",357],[3,"Error",358],[8,"Read",359],[3,"Cid",360],[8,"Extend",361],[8,"Serializer",362],[8,"Error",363],[8,"Write",359],[3,"TypeId",364],[13,"SerializePersistedService",301],[13,"ReadPersistedService",301],[13,"DeserializePersistedService",301],[13,"CreateServicesDir",301],[13,"VaultLink",301],[13,"WritePersistedService",301],[13,"FailedToCreateDirectory",301],[13,"NoSuchServiceWithFunction",301],[13,"Forbidden",301],[13,"CallServiceFailedWrongWorker",301],[13,"WorkerNotFound",301]],"b":[[167,"impl-Display-for-ServiceError"],[168,"impl-Debug-for-ServiceError"],[175,"impl-From%3CModuleError%3E-for-ServiceError"],[176,"impl-From%3CArgsError%3E-for-ServiceError"],[177,"impl-From%3CVaultError%3E-for-ServiceError"],[178,"impl-From%3CAppServiceError%3E-for-ServiceError"],[180,"impl-From%3Cf32%3E-for-IValue"],[182,"impl-From%3Ci8%3E-for-IValue"],[183,"impl-From%3Cu8%3E-for-IValue"],[184,"impl-From%3CVec%3Cu8%3E%3E-for-IValue"],[185,"impl-From%3Ci16%3E-for-IValue"],[186,"impl-From%3CString%3E-for-IValue"],[187,"impl-From%3Cu64%3E-for-IValue"],[188,"impl-From%3Cu16%3E-for-IValue"],[189,"impl-From%3Ci32%3E-for-IValue"],[190,"impl-From%3Cf64%3E-for-IValue"],[191,"impl-From%3Cu32%3E-for-IValue"],[192,"impl-From%3Ci64%3E-for-IValue"]]},\
"peer_metrics":{"doc":"","t":"NDNNDDDNENNNNNNDNDEENNEDEDDDDNNDNDNDEFMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLMMMMMLMMMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLMMMMM","n":["Builtin","ChainListenerMetrics","Common","ConnectionFailed","ConnectionPoolMetrics","ConnectivityMetrics","DispatcherMetrics","Fail","FunctionKind","Host","Kademlia","KademliaError","KademliaNotFound","Local","NotHappened","ParticleExecutorMetrics","ParticleFunction","ParticleLabel","ParticleType","Resolution","Service","Service","ServiceCallStats","ServiceMemoryStat","ServiceType","ServicesMetrics","ServicesMetricsBackend","ServicesMetricsBuiltin","ServicesMetricsExternal","Spell","Spell","SpellMetrics","Success","VmPoolMetrics","Worker","WorkerLabel","WorkerType","add_info_metrics","alive_actors","bootstrap_connected","bootstrap_disconnected","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builtin","call_failed_count","call_success_count","call_time_sec","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","connected_peers","count_resolution","creation_count","creation_failure_count","creation_time_msec","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode","encode","encode","encode","encode","encode","encode","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expired_particles","external","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","free_vms","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_used_memory","get_vm","hash","hash","hash","hash","hash","hash","hash","incoming_particle","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","interpretation_failures","interpretation_successes","interpretation_time_sec","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","lock_wait_time_sec","measure_memory","memory_metrics","modules_in_services_count","modules_stats","new","new","new","new","new","new","new","new","new","new","new","new","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","no_free_vm","observe_builtins","observe_ccp_reply","observe_ccp_request","observe_created","observe_created","observe_created_failed","observe_finished_spell","observe_new_block","observe_processed_block","observe_proof_failed","observe_proof_submitted","observe_proof_tx_failed","observe_proof_tx_success","observe_removed","observe_removed","observe_service_state","observe_service_state_failed","observe_spell_cast","observe_started_spell","particle_expired","particle_queue_size","particle_send_failure","particle_send_success","particle_sizes","put_vm","read","received_particles","removal_count","removal_time_msec","send_particle_failed","send_particle_ok","service_call","services_count","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_pool_size","start","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total_actors_mailbox","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","used_mem","vm_mem_avg","vm_mem_cma","vm_mem_histo","vm_mem_max","vm_mem_max_value","vm_mem_measures","vm_mem_min","vm_mem_min_value","vm_mem_total","vm_mems","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_external_backend","with_external_metrics","with_simple_backend","call_time_sec","lock_wait_time_sec","memory_delta_bytes","timestamp","timestamp"],"q":[[0,"peer_metrics"],[574,"peer_metrics::ServiceCallStats"],[579,"prometheus_client::registry"],[580,"alloc::string"],[581,"core::fmt"],[582,"core::fmt"],[583,"prometheus_client::encoding"],[584,"prometheus_client::encoding"],[585,"std::io::error"],[586,"core::hash"],[587,"core::marker"],[588,"core::hash"],[589,"core::hash"],[590,"core::option"],[591,"tokio::sync::mpsc::unbounded"],[592,"core::time"],[593,"tokio::runtime::task::join"],[594,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","","Service function call stats to store in memory","","","","The backend creates a separate threads that processes …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Service call time","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of (srv create) calls","Number of (srv create) failures","How long it took to create a service","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Memory metrics","How many modules a service includes.","Memory used by the modules that belongs to the service","Create a backend with only builtin metrics gathering …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Collect all metrics that are relevant on service creation.","","","","","","","","","Collect all metrics that are relevant on service removal.","","","","","","","","","","","","","","Number of (srv remove) calls","How long it took to remove a service","","","","Number of currently running services","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Memory used by the service","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create fully a functional backend for both external and …","","","","","",""],"i":[14,0,19,6,0,0,0,30,0,12,6,6,6,6,9,0,9,0,0,0,9,14,0,0,0,0,0,0,0,14,19,0,30,0,12,0,0,0,10,7,7,43,4,5,6,7,8,9,10,11,12,13,14,15,30,24,16,17,18,19,20,43,4,5,6,7,8,9,10,11,12,13,14,15,30,24,16,17,18,19,20,16,15,15,15,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,5,7,15,15,15,43,4,5,6,7,8,9,10,11,12,13,14,15,30,24,16,17,18,19,20,24,43,4,5,6,7,8,9,10,11,12,13,14,15,30,24,16,17,18,19,20,43,4,5,6,7,8,9,10,11,12,13,14,15,30,24,16,17,18,19,20,43,4,5,6,7,8,9,10,11,12,13,14,15,30,24,16,17,18,19,20,6,9,11,12,14,19,20,6,9,11,12,14,19,20,6,6,6,6,6,9,9,9,9,9,11,11,11,11,11,12,12,12,12,12,14,14,14,14,14,19,19,19,19,19,20,20,20,20,20,8,16,6,9,11,12,14,30,24,16,19,20,18,43,4,5,6,7,8,9,10,11,12,13,14,15,30,24,16,17,18,19,20,43,4,5,6,7,8,9,10,11,12,13,14,15,30,24,16,17,18,19,20,6,9,11,12,14,19,20,13,18,6,9,11,12,14,19,20,5,43,4,5,6,7,8,9,10,11,12,13,14,15,30,24,16,17,18,19,20,10,10,10,43,4,5,6,7,8,9,10,11,12,13,14,15,30,24,16,17,18,19,20,15,18,15,15,24,43,4,5,7,8,10,11,13,15,24,16,17,18,43,4,5,6,7,8,9,10,11,12,13,14,15,30,24,16,17,18,19,20,18,16,4,4,15,16,16,17,4,4,4,4,4,4,15,16,16,16,17,17,8,5,7,7,5,18,13,5,15,15,7,7,10,15,43,4,5,6,7,8,9,10,11,12,13,14,15,30,24,16,17,18,19,20,18,43,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,10,43,4,5,6,7,8,9,10,11,12,13,14,15,30,24,16,17,18,19,20,43,4,5,6,7,8,9,10,11,12,13,14,15,30,24,16,17,18,19,20,43,4,5,6,7,8,9,10,11,12,13,14,15,30,24,16,17,18,19,20,13,24,18,18,18,18,18,18,18,18,18,18,43,4,5,6,7,8,9,10,11,12,13,14,15,30,24,16,17,18,19,20,16,43,16,52,52,52,52,53],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,2,2],3],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[4,4],[5,5],[6,6],[7,7],[8,8],[9,9],[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],0,[[7,6],3],0,0,0,[21,[[23,[3,22]]]],[21,[[23,[3,22]]]],[21,[[23,[3,22]]]],[21,[[23,[3,22]]]],[21,[[23,[3,22]]]],[21,[[23,[3,22]]]],[21,[[23,[3,22]]]],[21,[[23,[3,22]]]],[21,[[23,[3,22]]]],[21,[[23,[3,22]]]],[21,[[23,[3,22]]]],[21,[[23,[3,22]]]],[21,[[23,[3,22]]]],[21,[[23,[3,22]]]],[21,[[23,[3,22]]]],[21,[[23,[3,22]]]],[21,[[23,[3,22]]]],[21,[[23,[3,22]]]],[21,[[23,[3,22]]]],[21,[[23,[3,22]]]],[[],24],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,-1,[]],[25,3],[25,3],[25,3],[25,3],[25,3],[25,3],[25,3],[25,3],[25,3],[25,3],[25,3],[25,3],[25,3],[25,3],[25,3],[25,3],[25,3],[25,3],[25,3],[25,3],[[6,26],[[23,[3,22]]]],[[9,26],[[23,[3,22]]]],[[11,27],[[23,[3,22]]]],[[12,26],[[23,[3,22]]]],[[14,26],[[23,[3,22]]]],[[19,26],[[23,[3,22]]]],[[20,27],[[23,[3,22]]]],[[6,6],28],[[9,9],28],[[11,11],28],[[12,12],28],[[14,14],28],[[19,19],28],[[20,20],28],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],[[-1,-2],28,[],[]],0,0,[[6,21],29],[[9,21],29],[[11,21],29],[[12,21],29],[[14,21],29],[[30,21],29],[[24,21],29],[[16,21],29],[[19,21],29],[[20,21],29],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[[23,[31,32]]],[]],[-1,[[23,[31,32]]],[]],[-1,[[23,[31,32]]],[]],[-1,[[23,[31,32]]],[]],[-1,[[23,[31,32]]],[]],[-1,[[23,[31,32]]],[]],[-1,[[23,[31,32]]],[]],[-1,[[23,[31,32]]],[]],[-1,[[23,[31,32]]],[]],[-1,[[23,[31,32]]],[]],[-1,[[23,[31,32]]],[]],[-1,[[23,[31,32]]],[]],[-1,[[23,[31,32]]],[]],[-1,[[23,[31,32]]],[]],[-1,[[23,[31,32]]],[]],[-1,[[23,[31,32]]],[]],[-1,[[23,[31,32]]],[]],[-1,[[23,[31,32]]],[]],[-1,[[23,[31,32]]],[]],[-1,[[23,[31,32]]],[]],[[-1,-2],33,[34,35],36],[[-1,-2],33,[34,35],36],[[-1,-2],33,[34,35],36],[[-1,-2],33,[34,35],36],[[-1,-2],33,[34,35],36],[[-1,-2],33,[34,35],36],[[-1,-2],33,[34,35],36],[37,33],0,[[6,-1],3,38],[[9,-1],3,38],[[11,-1],3,38],[[12,-1],3,38],[[14,-1],3,38],[[19,-1],3,38],[[20,-1],3,38],[[5,39,40,41],3],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[18,25,33],3],0,0,0,[[13,[42,[0]]],43],[1,4],[1,5],[1,7],[[1,[44,[25]]],8],[1,10],[[12,2],11],[25,13],[1,15],[37,24],[[[44,[15]],[45,[0]],25],16],[1,17],[1,18],[[-1,31],[[23,[[46,[-2]],32]]],[],47],[[-1,31],[[23,[[46,[-2]],32]]],[],47],[[-1,31],[[23,[[46,[-2]],32]]],[],47],[[-1,31],[[23,[[46,[-2]],32]]],[],47],[[-1,31],[[23,[[46,[-2]],32]]],[],47],[[-1,31],[[23,[[46,[-2]],32]]],[],47],[[-1,31],[[23,[[46,[-2]],32]]],[],47],[[-1,31],[[23,[[46,[-2]],32]]],[],47],[[-1,31],[[23,[[46,[-2]],32]]],[],47],[[-1,31],[[23,[[46,[-2]],32]]],[],47],[[-1,31],[[23,[[46,[-2]],32]]],[],47],[[-1,31],[[23,[[46,[-2]],32]]],[],47],[[-1,31],[[23,[[46,[-2]],32]]],[],47],[[-1,31],[[23,[[46,[-2]],32]]],[],47],[[-1,31],[[23,[[46,[-2]],32]]],[],47],[[-1,31],[[23,[[46,[-2]],32]]],[],47],[[-1,31],[[23,[[46,[-2]],32]]],[],47],[[-1,31],[[23,[[46,[-2]],32]]],[],47],[[-1,31],[[23,[[46,[-2]],32]]],[],47],[[-1,31],[[23,[[46,[-2]],32]]],[],47],0,[[16,28,41],3],[[4,41],3],[4,3],[[15,14,41,41],3],[[16,2,14,24,41],3],[16,3],[17,3],[[4,33],3],[[4,33],3],[4,3],[4,3],[[4,2],3],[4,3],[[15,14,41],3],[[16,14,41],3],[[16,2,2,14,24,30],3],[[16,2,[44,[2]],14,30],3],[17,3],[[17,48],3],[[8,39],3],0,0,0,0,0,[[13,2],[[44,[0]]]],0,0,0,[[7,39],3],[[7,39],3],[[10,28,9,[44,[49]]],3],0,[[-1,[46,[-2]]],[[23,[3,32]]],[],47],[[-1,[46,[-2]]],[[23,[3,32]]],[],47],[[-1,[46,[-2]]],[[23,[3,32]]],[],47],[[-1,[46,[-2]]],[[23,[3,32]]],[],47],[[-1,[46,[-2]]],[[23,[3,32]]],[],47],[[-1,[46,[-2]]],[[23,[3,32]]],[],47],[[-1,[46,[-2]]],[[23,[3,32]]],[],47],[[-1,[46,[-2]]],[[23,[3,32]]],[],47],[[-1,[46,[-2]]],[[23,[3,32]]],[],47],[[-1,[46,[-2]]],[[23,[3,32]]],[],47],[[-1,[46,[-2]]],[[23,[3,32]]],[],47],[[-1,[46,[-2]]],[[23,[3,32]]],[],47],[[-1,[46,[-2]]],[[23,[3,32]]],[],47],[[-1,[46,[-2]]],[[23,[3,32]]],[],47],[[-1,[46,[-2]]],[[23,[3,32]]],[],47],[[-1,[46,[-2]]],[[23,[3,32]]],[],47],[[-1,[46,[-2]]],[[23,[3,32]]],[],47],[[-1,[46,[-2]]],[[23,[3,32]]],[],47],[[-1,[46,[-2]]],[[23,[3,32]]],[],47],[[-1,[46,[-2]]],[[23,[3,32]]],[],47],[[18,25],3],[43,[[50,[3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[[13,2,2,30],3],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[49,25,1],[[3,[43,16]]]],0,[25,[[3,[43,16]]]],0,0,0,0,0],"c":[],"p":[[3,"Registry",579],[3,"String",580],[15,"tuple"],[3,"ChainListenerMetrics",0],[3,"ConnectionPoolMetrics",0],[4,"Resolution",0],[3,"ConnectivityMetrics",0],[3,"DispatcherMetrics",0],[4,"FunctionKind",0],[3,"ParticleExecutorMetrics",0],[3,"WorkerLabel",0],[4,"WorkerType",0],[3,"ServicesMetricsBuiltin",0],[4,"ServiceType",0],[3,"ServicesMetricsExternal",0],[3,"ServicesMetrics",0],[3,"SpellMetrics",0],[3,"VmPoolMetrics",0],[4,"ParticleType",0],[3,"ParticleLabel",0],[3,"Formatter",581],[3,"Error",581],[4,"Result",582],[3,"ServiceMemoryStat",0],[15,"usize"],[3,"LabelValueEncoder",583],[3,"LabelSetEncoder",583],[15,"bool"],[6,"Result",581],[4,"ServiceCallStats",0],[3,"FdFlags",584],[3,"Error",585],[15,"u64"],[8,"Hash",586],[8,"Sized",587],[8,"BuildHasher",586],[3,"MemoryStats",588],[8,"Hasher",586],[15,"str"],[15,"i64"],[15,"f64"],[3,"UnboundedReceiver",589],[3,"ServicesMetricsBackend",0],[4,"Option",590],[3,"UnboundedSender",589],[3,"SetFdFlags",584],[8,"AsFilelike",591],[15,"u32"],[3,"Duration",592],[3,"JoinHandle",593],[3,"TypeId",594],[13,"Success",574],[13,"Fail",574]],"b":[]},\
"server_config":{"doc":"","t":"CDDDDCNDDDNDDNCEDDMMMMALLLLLLLLLLLLLMFMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLLLLLFFFMFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFMFFFFFFFMMFFFFFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMMLLLLLLLLLLLLMMFMLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLFFMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLMMMMMMMMMMFMMMMMMMLLLLLLLLLLLLMLMMLLLLLLLLLFMMLLLLLLLLLLLLMMMALLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMMMLMMNDNENNDNDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDDNDNDEDNLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLMMMMLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMM","n":["AquaIpfsConfig","BootstrapConfig","ChainConfig","ChainListenerConfig","ConfigData","DeciderConfig","Disabled","KademliaConfig","NetworkConfig","NodeConfig","Otlp","ResolvedConfig","ServicesConfig","Stdout","SystemServicesConfig","TracingConfig","TransportConfig","UnresolvedConfig","allow_local_addresses","allowed_effectors","allowed_effectors","aquavm_pool_size","args","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_","as_libp2p","authors","avm_base_dir","avm_config","ban_cooldown","binary_name","blueprint_dir","bootstrap","bootstrap_config","bootstrap_delay","bootstrap_frequency","bootstrap_frequency","bootstrap_max_delay","bootstrap_nodes","bootstrap_nodes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builtins_key_pair","builtins_management_peer_id","cc_contract_address","ccp_endpoint","chain_config","chain_listener_config","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","connection_idle_timeout","connection_idle_timeout","connection_limits","connection_pool_metrics","connectivity_metrics","core_contract_address","cpus_range","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","default","default","default_allowed_binaries","default_aquavm_pool_size","default_base_dir","default_base_fee","default_binaries_mapping","default_bootstrap_frequency","default_bootstrap_nodes","default_builtins_keypair_path","default_connection_idle_timeout","default_cpus_range","default_curl_binary_path","default_decider_network_api_endpoint","default_decider_network_id","default_decider_spell_period_sec","default_decider_start_block_hex","default_decider_worker_gas","default_effectors","default_effects_queue_buffer_size","default_execution_timeout","default_health_check_enabled","default_http_port","default_ipfs_binary_path","default_ipfs_multiaddr","default_key_format","default_keypair_path","default_listen_ip","default_management_peer_id","default_matcher_address","default_max_builtin_metrics_storage_size","default_max_established_per_peer_limit","default_max_spell_particle_ttl","default_metrics_enabled","default_particle_processor_parallelism","default_particle_queue_buffer_size","default_priority_fee","default_processing_timeout","default_proof_poll_period","default_registry_expired_spell_period_sec","default_registry_renew_spell_period_sec","default_registry_replicate_spell_period_sec","default_registry_spell_period_sec","default_service_memory_limit","default_service_memory_limit","default_service_memory_limit","default_services_metrics_timer_resolution","default_socket_timeout","default_system_cpu_count","default_system_services","default_tcp_port","default_tokio_metrics_enabled","default_tokio_metrics_poll_histogram_enabled","default_transport","default_websocket_port","default_worker_spell_period_sec","default_workers_queue_buffer_size","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dev_mode_config","dir_config","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","effects_queue_buffer","envs","ephemeral_dir","ephemeral_work_dir","eq","external_address","external_addresses","external_multiaddresses","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","health_config","http_config","http_endpoint","http_listen_addr","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","is_dev_mode","kademlia","kademlia_config","key_pair","libp2p_metrics","listen_config","listen_multiaddrs","load_config","load_config_with_args","local_peer_id","local_peer_id","management_peer_id","management_peer_id","market_contract_address","max_established","max_established_incoming","max_established_outgoing","max_established_per_peer","max_packet_size","max_pending_incoming","max_pending_outgoing","max_spell_particle_ttl","metrics_config","modules_dir","mounted_binaries_mapping","network_id","new","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","no_banner","node_config","node_config","node_version","particle_execution_timeout","particle_processor_parallelism","particle_queue_buffer","particle_queue_buffer","particles_vault_dir","peer_fail_threshold","persistent_dir","persistent_work_dir","print_config","proof_poll_period","protocol_config","protocol_config","query_timeout","reconnect_delay","references","references","references","references","references","references","references","references","references","references","references","references","replication_factor","resolve","root_key_pair","root_weights","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","services_dir","services_dir","services_envs","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","socket_timeout","system_cpu_count","system_services","system_services_config","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","tracing","transport","transport_config","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wallet_key","workers_queue_buffer","ws_endpoint","zero","endpoint","sample_ratio","All","DevModeArgs","Disabled","EnabledSystemServices","None","Otlp","RootKeyPairArgs","Some","TracingArgs","TracingType","as_","as_","as_","as_","as_","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","command","command_for_update","debug","debug","debug","debug","debug","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","endpoint","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","group_id","group_id","group_id","init","init","init","init","init","into","into","into","into","into","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","references","references","references","references","references","serialize","serialize","serialize","serialize","serialize","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","to_owned","to_owned","to_owned","to_owned","to_owned","to_possible_value","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","value_variants","vzip","vzip","vzip","vzip","vzip","AquaIpfs","AquaIpfsConfig","ConnectorConfig","Decider","DeciderConfig","Registry","RegistryConfig","ServiceKey","SystemServicesConfig","TrustGraph","all_values","aqua_ipfs","as_","as_","as_","as_","as_","as_","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","connector","curl_binary_path","debug","debug","debug","debug","debug","debug","decider","decider_period_sec","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","enable","eq","equivalent","equivalent","equivalent","equivalent","equivalent","expired_period_sec","external_api_multiaddr","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_string","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_hash","hash","init","init","init","init","init","init","into","into","into","into","into","into","ipfs_binary_path","local_api_multiaddr","matcher_address","network_api_endpoint","network_id","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","references","references","references","references","references","references","registry","registry_period_sec","renew_period_sec","replicate_period_sec","serialize","serialize","serialize","serialize","serialize","serialize","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","start_block","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","wallet_key","worker_gas","worker_ipfs_multiaddr","worker_period_sec"],"q":[[0,"server_config"],[462,"server_config::TracingConfig"],[464,"server_config::args"],[615,"server_config::system_services_config"],[808,"bnum::cast"],[809,"libp2p_kad::behaviour"],[810,"std::path"],[811,"std::path"],[812,"core::fmt"],[813,"alloc::string"],[814,"alloc::vec"],[815,"alloc::collections::btree::map"],[816,"multiaddr"],[817,"core::time"],[818,"core_manager::core_range"],[819,"core::option"],[820,"std::collections::hash::map"],[821,"core::net::ip_addr"],[822,"libp2p_identity::peer_id"],[823,"bytesize"],[824,"fluence_libp2p::transport"],[825,"serde::de"],[826,"core::fmt"],[827,"std::io::error"],[828,"core::net::socket_addr"],[829,"eyre"],[830,"std::ffi::os_str"],[831,"libp2p_metrics"],[832,"alloc::sync"],[833,"peer_metrics::connectivity"],[834,"peer_metrics::connection_pool"],[835,"libp2p_identity::keypair"],[836,"libp2p_connection_limits"],[837,"cid_utils::hash"],[838,"system_interface::fs::fd_flags"],[839,"libipld_core::raw"],[840,"anyhow"],[841,"std::io"],[842,"cid::cid"],[843,"core::iter::traits::collect"],[844,"serde::ser"],[845,"core::any"],[846,"clap_builder::builder::command"],[847,"clap_builder::parser::matches::arg_matches"],[848,"clap_builder"],[849,"clap_builder::util::id"],[850,"clap_builder::builder::possible_value"],[851,"core::hash"],[852,"core::marker"],[853,"core::hash"]],"d":["","","","","","","","see <code>libp2p_kad::KademliaConfig</code>","","","","","","","","","","","","","List of allowed effector modules by CID","Number of AVMs to create. By default, <code>num_cpus::get() * 2</code> …","","","","","","","","","","","","","","","","","These are the AquaVM limits that are used by the AquaVM …","Period after which peer ban is lifted","","Path of the blueprint directory containing blueprints and …","","","","","","","","Bootstrap nodes to join to the Fluence network","","","","","","","","","","","","","","","","","","","","","","","","","","key to manage builtins services initialization","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If none, comes from the chain","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If none, comes from the chain","","","","","","","","Default heap size in bytes available for a WASM service …","Default heap size in bytes available for the module unless …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Opaque environment variables to be passed on each service …","","Ephemeral working dir for services","","External address to advertise via identify protocol","","External multiaddresses to advertise; more flexible that …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Is in the developer mode","","","","","","","Hierarchically loads the configuration using args and envs.","","","Peer id of the current node","","key that could manage services","","","","","","","","","","","Dir to store .wasm modules and their configs","Mapping of binary names to their paths for mounted …","","","","","","","","","","","","","","","","","","","","","","","","Dir to store directories shared between services in the …","Number of times peer is failed to be discovered before it …","","Persistent working dir for services","","How often to poll proofs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Dir to persist info about running services","","","","","","","","","","","","","","Socket timeout for main transport","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates config with all values to zero, so no delays. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,12,0,0,0,12,0,0,12,0,0,0,0,7,7,14,7,0,52,42,6,2,7,8,9,10,11,12,13,14,2,42,0,7,2,42,14,52,7,6,52,7,6,52,7,52,42,6,2,7,8,9,10,11,12,13,14,52,42,6,2,7,8,9,10,11,12,13,14,7,14,9,10,7,7,6,2,7,8,9,10,11,12,13,14,6,2,7,8,9,10,11,12,13,14,52,8,52,52,52,9,7,52,42,6,2,7,8,9,10,11,12,13,14,6,2,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,7,14,0,0,0,0,0,0,0,0,0,0,0,52,42,6,2,7,8,9,10,11,12,13,13,14,52,42,6,2,7,8,9,10,11,12,13,13,14,42,6,2,8,9,10,11,12,7,13,52,42,6,2,7,8,9,10,11,12,13,14,7,14,0,14,12,7,13,7,6,2,7,8,9,10,11,12,13,14,52,42,6,2,7,8,9,10,11,12,13,14,52,42,6,2,7,8,9,10,11,12,13,14,7,7,9,13,52,42,6,2,7,8,9,10,11,12,13,14,52,42,6,2,7,8,9,10,11,12,13,14,14,7,52,52,52,7,13,0,0,52,14,7,14,9,8,8,8,8,2,8,8,7,7,14,14,9,52,14,52,42,6,2,7,8,9,10,11,12,13,14,11,11,13,52,7,7,52,7,14,2,0,14,11,10,52,7,2,6,52,42,6,2,7,8,9,10,11,12,13,14,2,11,7,7,6,2,7,8,9,10,11,12,13,0,14,7,52,42,6,2,7,8,9,10,11,12,13,14,8,7,7,0,6,2,7,8,9,10,11,12,13,14,11,8,7,52,42,6,2,7,8,9,10,11,12,13,14,52,42,6,2,7,8,9,10,11,12,13,14,52,42,6,2,7,8,9,10,11,12,13,14,42,52,42,6,2,7,8,9,10,11,12,13,14,9,7,10,6,83,83,67,0,66,0,67,66,0,67,0,0,64,65,66,67,68,64,65,68,64,65,68,64,65,66,67,68,64,65,66,67,68,64,65,66,67,68,64,65,66,67,68,68,68,64,65,66,67,68,64,65,66,67,68,64,65,66,67,68,64,65,66,67,68,65,64,65,66,67,68,64,65,66,67,68,64,65,68,64,65,68,64,65,66,67,68,64,65,68,64,65,66,67,68,64,65,66,67,68,64,65,66,67,68,64,65,66,67,68,64,65,66,67,68,64,65,66,67,68,64,65,66,67,68,66,64,65,66,67,68,64,65,66,67,68,64,65,66,67,68,64,65,68,64,65,68,66,64,65,66,67,68,35,0,0,35,0,35,0,0,0,35,35,74,35,74,75,76,77,78,35,74,75,76,77,78,35,74,75,76,77,78,35,74,75,76,77,78,35,74,75,76,77,78,74,76,35,74,75,76,77,78,74,77,74,75,76,77,78,35,74,75,76,77,78,35,74,75,76,77,78,35,74,75,76,77,78,35,74,75,76,77,78,74,35,35,35,35,35,35,78,75,35,35,74,75,76,77,78,35,74,75,76,77,78,35,35,74,75,76,77,78,35,35,35,74,75,76,77,78,35,74,75,76,77,78,75,75,77,77,77,35,74,75,76,77,78,35,74,75,76,77,78,74,78,78,78,35,74,75,76,77,78,35,74,75,76,77,78,77,35,74,75,76,77,78,35,35,74,75,76,77,78,35,74,75,76,77,78,35,74,75,76,77,78,35,74,75,76,77,78,77,77,77,77],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[2,3],0,[4,5],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[6,6],[2,2],[7,7],[8,8],[9,9],[10,10],[11,11],[12,12],[13,13],[14,14],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],0,0,0,0,0,0,0,[16,[[18,[15,17]]]],[16,[[18,[15,17]]]],[16,[[18,[15,17]]]],[16,[[18,[15,17]]]],[16,[[18,[15,17]]]],[16,[[18,[15,17]]]],[16,[[18,[15,17]]]],[16,[[18,[15,17]]]],[16,[[18,[15,17]]]],[16,[[18,[15,17]]]],[16,[[18,[15,17]]]],[16,[[18,[15,17]]]],[[],6],[[],2],[[],[[20,[19]]]],[[],21],[[],5],0,[[],[[22,[19,19]]]],[[],21],[[],[[20,[23]]]],0,[[],24],[[],[[26,[25]]]],[[],19],[[],19],[[],27],[[],28],[[],19],[[],27],[[],[[29,[19,[15,[19,[29,[19,19]]]]]]]],[[],21],[[],24],[[],30],[[],31],[[],19],[[],19],[[],19],0,[[],32],[[],33],[[],19],[[],21],[[],[[26,[28]]]],[[],24],[[],30],[[],[[26,[21]]]],[[],21],0,[[],24],[[],24],[[],28],[[],28],[[],28],[[],28],[[],34],0,0,[[],24],[[],24],[[],21],[[],[[20,[35]]]],[[],31],[[],30],[[],30],[[],36],[[],31],[[],28],[[],21],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[13],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[13],[21,-1,[]],[21,-1,[]],0,[-1,[[18,[6]]],37],[-1,[[18,[2]]],37],[-1,[[18,[8]]],37],[-1,[[18,[9]]],37],[-1,[[18,[10]]],37],[-1,[[18,[11]]],37],[-1,[[18,[12]]],37],0,0,[21,15],[21,15],[21,15],[21,15],[21,15],[21,15],[21,15],[21,15],[21,15],[21,15],[21,15],[21,15],0,0,[4,5],0,[[12,12],30],0,[13,[[20,[23]]]],0,[[6,16],38],[[2,16],38],[[7,16],38],[[8,16],38],[[9,16],38],[[10,16],38],[[11,16],38],[[12,16],38],[[13,16],38],[[14,16],38],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[[18,[39,40]]],[]],[-1,[[18,[39,40]]],[]],[-1,[[18,[39,40]]],[]],[-1,[[18,[39,40]]],[]],[-1,[[18,[39,40]]],[]],[-1,[[18,[39,40]]],[]],[-1,[[18,[39,40]]],[]],[-1,[[18,[39,40]]],[]],[-1,[[18,[39,40]]],[]],[-1,[[18,[39,40]]],[]],[-1,[[18,[39,40]]],[]],[-1,[[18,[39,40]]],[]],0,0,0,[13,[[26,[41]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[13,[[20,[23]]]],[[[26,[42]]],[[43,[11]]]],[[[20,[44]],[26,[42]]],[[43,[11]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[26,[[46,[45]]]],[26,[47]],[26,[48]],49,13,50,51],52],[[33,5,5,5,[29,[19,19]],33,33,[26,[34]],[29,[53,[29,[19,19]]]],[29,[19,19]],30],[[18,[14,40]]]],[[-1,39],[[18,[[54,[-2]],40]]],[],55],[[-1,39],[[18,[[54,[-2]],40]]],[],55],[[-1,39],[[18,[[54,[-2]],40]]],[],55],[[-1,39],[[18,[[54,[-2]],40]]],[],55],[[-1,39],[[18,[[54,[-2]],40]]],[],55],[[-1,39],[[18,[[54,[-2]],40]]],[],55],[[-1,39],[[18,[[54,[-2]],40]]],[],55],[[-1,39],[[18,[[54,[-2]],40]]],[],55],[[-1,39],[[18,[[54,[-2]],40]]],[],55],[[-1,39],[[18,[[54,[-2]],40]]],[],55],[[-1,39],[[18,[[54,[-2]],40]]],[],55],[[-1,39],[[18,[[54,[-2]],40]]],[],55],0,0,0,0,0,0,0,0,0,0,[4,5],0,0,0,0,0,0,0,[[56,-1,-2],[[18,[15,57]]],58,[[60,[59]]]],[[56,-1,-2],[[18,[15,57]]],58,[[60,[59]]]],[[56,-1,-2],[[18,[15,57]]],58,[[60,[59]]]],[[56,-1,-2],[[18,[15,57]]],58,[[60,[59]]]],[[56,-1,-2],[[18,[15,57]]],58,[[60,[59]]]],[[56,-1,-2],[[18,[15,57]]],58,[[60,[59]]]],[[56,-1,-2],[[18,[15,57]]],58,[[60,[59]]]],[[56,-1,-2],[[18,[15,57]]],58,[[60,[59]]]],[[56,-1,-2],[[18,[15,57]]],58,[[60,[59]]]],[[56,-1,-2],[[18,[15,57]]],58,[[60,[59]]]],[[56,-1,-2],[[18,[15,57]]],58,[[60,[59]]]],[[56,-1,-2],[[18,[15,57]]],58,[[60,[59]]]],0,[11,[[43,[13]]]],0,0,[[6,-1],18,61],[[2,-1],18,61],[[7,-1],18,61],[[8,-1],18,61],[[9,-1],18,61],[[10,-1],18,61],[[11,-1],18,61],[[12,-1],18,61],[[13,-1],18,61],[4,5],0,0,[[-1,[54,[-2]]],[[18,[15,40]]],[],55],[[-1,[54,[-2]]],[[18,[15,40]]],[],55],[[-1,[54,[-2]]],[[18,[15,40]]],[],55],[[-1,[54,[-2]]],[[18,[15,40]]],[],55],[[-1,[54,[-2]]],[[18,[15,40]]],[],55],[[-1,[54,[-2]]],[[18,[15,40]]],[],55],[[-1,[54,[-2]]],[[18,[15,40]]],[],55],[[-1,[54,[-2]]],[[18,[15,40]]],[],55],[[-1,[54,[-2]]],[[18,[15,40]]],[],55],[[-1,[54,[-2]]],[[18,[15,40]]],[],55],[[-1,[54,[-2]]],[[18,[15,40]]],[],55],[[-1,[54,[-2]]],[[18,[15,40]]],[],55],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[],6],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[63,63],[63,63],[63,63],[63,63],[63,63],[63,63],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[64,64],[65,65],[66,66],[67,67],[68,68],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[],63],[[],63],[16,[[18,[15,17]]]],[16,[[18,[15,17]]]],[16,[[18,[15,17]]]],[16,[[18,[15,17]]]],[16,[[18,[15,17]]]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,15],[21,15],[21,15],[21,15],[21,15],0,[[64,16],38],[[65,16],38],[[66,16],38],[[67,16],38],[[68,16],38],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[69,[[18,[64,70]]]],[69,[[18,[65,70]]]],[69,[[18,[68,70]]]],[69,[[18,[64,70]]]],[69,[[18,[65,70]]]],[69,[[18,[68,70]]]],[-1,[[18,[39,40]]],[]],[-1,[[18,[39,40]]],[]],[-1,[[18,[39,40]]],[]],[-1,[[18,[39,40]]],[]],[-1,[[18,[39,40]]],[]],[[],[[26,[71]]]],[[],[[26,[71]]]],[[],[[26,[71]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,39],[[18,[[54,[-2]],40]]],[],55],[[-1,39],[[18,[[54,[-2]],40]]],[],55],[[-1,39],[[18,[[54,[-2]],40]]],[],55],[[-1,39],[[18,[[54,[-2]],40]]],[],55],[[-1,39],[[18,[[54,[-2]],40]]],[],55],[[56,-1,-2],[[18,[15,57]]],58,[[60,[59]]]],[[56,-1,-2],[[18,[15,57]]],58,[[60,[59]]]],[[56,-1,-2],[[18,[15,57]]],58,[[60,[59]]]],[[56,-1,-2],[[18,[15,57]]],58,[[60,[59]]]],[[56,-1,-2],[[18,[15,57]]],58,[[60,[59]]]],[[64,-1],18,61],[[65,-1],18,61],[[66,-1],18,61],[[67,-1],18,61],[[68,-1],18,61],[[-1,[54,[-2]]],[[18,[15,40]]],[],55],[[-1,[54,[-2]]],[[18,[15,40]]],[],55],[[-1,[54,[-2]]],[[18,[15,40]]],[],55],[[-1,[54,[-2]]],[[18,[15,40]]],[],55],[[-1,[54,[-2]]],[[18,[15,40]]],[],55],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[66,[[26,[72]]]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[[64,69],[[18,[15,70]]]],[[65,69],[[18,[15,70]]]],[[68,69],[[18,[15,70]]]],[[64,69],[[18,[15,70]]]],[[65,69],[[18,[15,70]]]],[[68,69],[[18,[15,70]]]],[[],[[73,[66]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[[],[[20,[35]]]],0,[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[35,35],[74,74],[75,75],[76,76],[77,77],[78,78],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],0,0,[16,[[18,[15,17]]]],[16,[[18,[15,17]]]],[16,[[18,[15,17]]]],[16,[[18,[15,17]]]],[16,[[18,[15,17]]]],[16,[[18,[15,17]]]],0,0,[[],74],[[],75],[[],76],[[],77],[[],78],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[21,-1,[]],[-1,[[18,[35]]],37],[-1,[[18,[74]]],37],[-1,[[18,[75]]],37],[-1,[[18,[76]]],37],[-1,[[18,[77]]],37],[-1,[[18,[78]]],37],[21,15],[21,15],[21,15],[21,15],[21,15],[21,15],0,[[35,35],30],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],[[-1,-2],30,[],[]],0,0,[[35,16],38],[[35,16],38],[[74,16],38],[[75,16],38],[[76,16],38],[[77,16],38],[[78,16],38],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[50,[[26,[35]]]],[-1,[[18,[39,40]]],[]],[-1,[[18,[39,40]]],[]],[-1,[[18,[39,40]]],[]],[-1,[[18,[39,40]]],[]],[-1,[[18,[39,40]]],[]],[-1,[[18,[39,40]]],[]],[[-1,-2],27,[79,80],81],[[35,-1],15,82],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[-1,39],[[18,[[54,[-2]],40]]],[],55],[[-1,39],[[18,[[54,[-2]],40]]],[],55],[[-1,39],[[18,[[54,[-2]],40]]],[],55],[[-1,39],[[18,[[54,[-2]],40]]],[],55],[[-1,39],[[18,[[54,[-2]],40]]],[],55],[[-1,39],[[18,[[54,[-2]],40]]],[],55],[[56,-1,-2],[[18,[15,57]]],58,[[60,[59]]]],[[56,-1,-2],[[18,[15,57]]],58,[[60,[59]]]],[[56,-1,-2],[[18,[15,57]]],58,[[60,[59]]]],[[56,-1,-2],[[18,[15,57]]],58,[[60,[59]]]],[[56,-1,-2],[[18,[15,57]]],58,[[60,[59]]]],[[56,-1,-2],[[18,[15,57]]],58,[[60,[59]]]],0,0,0,0,[[35,-1],18,61],[[74,-1],18,61],[[75,-1],18,61],[[76,-1],18,61],[[77,-1],18,61],[[78,-1],18,61],[[-1,[54,[-2]]],[[18,[15,40]]],[],55],[[-1,[54,[-2]]],[[18,[15,40]]],[],55],[[-1,[54,[-2]]],[[18,[15,40]]],[],55],[[-1,[54,[-2]]],[[18,[15,40]]],[],55],[[-1,[54,[-2]]],[[18,[15,40]]],[],55],[[-1,[54,[-2]]],[[18,[15,40]]],[],55],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,19,[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0],"c":[],"p":[[8,"CastFrom",808],[3,"KademliaConfig",0],[3,"Config",809],[3,"Path",810],[3,"PathBuf",810],[3,"BootstrapConfig",0],[3,"NodeConfig",0],[3,"TransportConfig",0],[3,"ChainConfig",0],[3,"ChainListenerConfig",0],[3,"UnresolvedConfig",0],[4,"TracingConfig",0],[3,"ResolvedConfig",0],[3,"ServicesConfig",0],[15,"tuple"],[3,"Formatter",811],[3,"Error",811],[4,"Result",812],[3,"String",813],[3,"Vec",814],[15,"usize"],[3,"BTreeMap",815],[3,"Multiaddr",816],[3,"Duration",817],[3,"CoreRange",818],[4,"Option",819],[15,"u64"],[15,"u32"],[3,"HashMap",820],[15,"bool"],[15,"u16"],[4,"IpAddr",821],[3,"PeerId",822],[3,"ByteSize",823],[4,"ServiceKey",615],[4,"Transport",824],[8,"Deserializer",825],[6,"Result",811],[3,"FdFlags",826],[3,"Error",827],[4,"SocketAddr",828],[3,"ConfigData",0],[6,"Result",829],[3,"OsString",830],[3,"Metrics",831],[3,"Arc",832],[3,"ConnectivityMetrics",833],[3,"ConnectionPoolMetrics",834],[3,"Keypair",835],[15,"str"],[3,"ConnectionLimits",836],[3,"NetworkConfig",0],[3,"Hash",837],[3,"SetFdFlags",826],[8,"AsFilelike",838],[3,"RawCodec",839],[3,"Error",840],[8,"Read",841],[3,"Cid",842],[8,"Extend",843],[8,"Serializer",844],[3,"TypeId",845],[3,"Command",846],[3,"RootKeyPairArgs",464],[3,"TracingArgs",464],[4,"TracingType",464],[4,"EnabledSystemServices",464],[3,"DevModeArgs",464],[3,"ArgMatches",847],[6,"Error",848],[3,"Id",849],[3,"PossibleValue",850],[15,"slice"],[3,"SystemServicesConfig",615],[3,"AquaIpfsConfig",615],[3,"ConnectorConfig",615],[3,"DeciderConfig",615],[3,"RegistryConfig",615],[8,"Hash",851],[8,"Sized",852],[8,"BuildHasher",851],[8,"Hasher",851],[13,"Otlp",462]],"b":[[705,"impl-Debug-for-ServiceKey"],[706,"impl-Display-for-ServiceKey"]]},\
"service_modules":{"doc":"","t":"DDDLFFLLLLLLLLLLLLLMMLLLLLLLFLLLLLLLLLLLMLLLFFFFFFFFFMMLLLLLLLLFLLLLLLLLLLLLLL","n":["AddBlueprint","Blueprint","Hash","as_bytes","blueprint_file_name","blueprint_fname","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","decode","dependencies","dependencies","deserialize","deserialize","encode","eq","equivalent","equivalent","equivalent","extract_module_file_name","fmt","fmt","fmt","fmt","from","from","from","from_string","get_facade_module","get_ipld","hash","id","into","into","into","is_blueprint","is_module_wasm","is_service","load_module","module_config","module_config_name_hash","module_config_name_json","module_file_name","module_file_name_hash","name","name","new","new","new","references","references","references","serialize","serialize","service_file_name","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"service_modules"],[78,"alloc::vec"],[79,"alloc::string"],[80,"eyre"],[81,"core::result"],[82,"serde::de"],[83,"std::path"],[84,"core::option"],[85,"core::fmt"],[86,"core::fmt"],[87,"libipld_core::ipld"],[88,"core::hash"],[89,"core::convert"],[90,"serde_json::value"],[91,"eyre"],[92,"anyhow"],[93,"std::io"],[94,"cid::cid"],[95,"core::iter::traits::collect"],[96,"serde::ser"],[97,"core::any"]],"d":["","","","","Calculates filename of the blueprint","","","","","","","","","","","","","","","","","","","encode IPLD object with DAG JSON codec","","","","","Return file name with .wasm extension stripped. None if …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if file is named like a blueprint would be","","","","","Calculates filename of the config for a wasm module","Calculates filename of the config for a wasm module, given …","Calculates the name of a wasm module file, given a hash or …","Calculates the name of a wasm module file, given a hash of …","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,1,0,0,7,4,1,7,4,1,7,4,1,7,4,1,7,7,4,4,1,7,1,1,1,1,0,7,4,1,1,7,4,1,1,4,7,1,4,7,4,1,0,0,0,0,0,0,0,0,0,7,4,7,4,1,7,4,1,4,1,0,7,4,1,7,1,7,4,1,7,4,1,7,4,1],"f":[0,0,0,[1,[[3,[2]]]],[4,5],[6,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[7,7],[4,4],[1,1],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[[9,[2]]],[[10,[7]]]],0,0,[-1,[[11,[4]]],12],[-1,[[11,[1]]],12],[7,[[10,[[3,[2]]]]]],[[1,1],13],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[14,[[15,[6]]]],[[7,16],17],[[4,16],17],[[1,16],[[11,[8,18]]]],[[1,16],[[11,[8,18]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[6,[[11,[1,19]]]],[4,[[15,[1]]]],[7,20],[[1,-1],8,21],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[6,13],[14,13],[14,13],[[6,-1],[[10,[[3,[2]]]]],[[22,[5]]]],[6,23],[1,5],[1,5],[6,5],[1,5],0,0,[[5,[3,[1]]],7],[7,[[10,[4]]]],[[[9,[2]]],[[11,[1,24]]]],[[25,-1,-2],[[11,[8,26]]],27,[[29,[28]]]],[[25,-1,-2],[[11,[8,26]]],27,[[29,[28]]]],[[25,-1,-2],[[11,[8,26]]],27,[[29,[28]]]],[[4,-1],11,30],[[1,-1],11,30],[6,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[7,[[10,[5]]]],[-1,5,[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]]],"c":[],"p":[[3,"Hash",0],[15,"u8"],[3,"Vec",78],[3,"Blueprint",0],[3,"String",79],[15,"str"],[3,"AddBlueprint",0],[15,"tuple"],[15,"slice"],[6,"Result",80],[4,"Result",81],[8,"Deserializer",82],[15,"bool"],[3,"Path",83],[4,"Option",84],[3,"Formatter",85],[6,"Result",85],[3,"Error",85],[4,"Error",86],[4,"Ipld",87],[8,"Hasher",88],[8,"Into",89],[4,"Value",90],[3,"Report",80],[3,"RawCodec",91],[3,"Error",92],[8,"Read",93],[3,"Cid",94],[8,"Extend",95],[8,"Serializer",96],[3,"TypeId",97]],"b":[[31,"impl-Display-for-Hash"],[32,"impl-Debug-for-Hash"]]},\
"sorcerer":{"doc":"","t":"DDMLLLLLLLLLLLLLLLLLLLLLLLLLFLLFLLMLLLLLFMMLMLLMMMMMLLLMLLLLLLLLMM","n":["Sorcerer","SpellInfo","aquamarine","as_","as_","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","debug","debug","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","execute_script","fmt","from","from","get_fd_flags","get_fd_flags","get_spell_info","init","init","install_spell","into","into","key_storage","new","new_set_fd_flags","new_set_fd_flags","references","references","remove_spell","scopes","script","serialize","services","set_fd_flags","set_fd_flags","spell_event_bus_api","spell_metrics","spell_script_particle_ttl","spell_service_api","spell_storage","start","to_owned","to_owned","trigger_config","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","worker_period_sec","workers"],"q":[[0,"sorcerer"],[66,"bnum::cast"],[67,"core::fmt"],[68,"core::fmt"],[69,"serde::de"],[70,"spell_event_bus::api"],[71,"tracing::span"],[72,"alloc::sync"],[73,"core::fmt"],[74,"std::io::error"],[75,"spell_service_api"],[76,"types::peer_scope"],[77,"core::time"],[78,"alloc::string"],[79,"libp2p_identity::peer_id"],[80,"particle_args::args_error"],[81,"particle_services::app_services"],[82,"spell_storage::storage"],[83,"spell_event_bus::api"],[84,"serde_json::value"],[85,"particle_modules::modules"],[86,"aquamarine::aquamarine"],[87,"server_config::resolved_config"],[88,"workers::workers"],[89,"workers::key_storage"],[90,"workers::scope"],[91,"peer_metrics::spell_metrics"],[92,"core::option"],[93,"particle_builtins::builtins"],[94,"std::collections::hash::map"],[95,"system_interface::fs::fd_flags"],[96,"libipld_core::raw"],[97,"anyhow"],[98,"std::io"],[99,"cid::cid"],[100,"core::iter::traits::collect"],[101,"serde::ser"],[102,"tokio::sync::mpsc::unbounded"],[103,"tokio::runtime::task::join"],[104,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,2,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,3,2,3,2,3,2,3,2,3,0,2,3,0,2,3,2,2,2,3,2,3,0,2,3,3,2,2,3,2,2,2,2,2,2,2,3,3,2,3,2,3,2,3,2,3,2,2],"f":[0,0,0,[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,2],[3,3],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[5,[[7,[4,6]]]],[5,[[7,[4,6]]]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[-1,[[7,[3]]],9],[8,4],[8,4],[[2,10,[12,[11]]],4],[[3,5],13],[-1,-1,[]],[-1,-1,[]],[-1,[[7,[14,15]]],[]],[-1,[[7,[14,15]]],[]],[[16,17,18,19,20],[[7,[3,21]]]],[[],8],[[],8],[[22,23,24,16,17,19,18,25,19,26,20],[[7,[19,21]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[22,27,28,29,24,[12,[30]],[12,[31]],32,16,[34,[33]]],[[4,[2,[36,[19,35]],19]]]],[[-1,14],[[7,[[37,[-2]],15]]],[],38],[[-1,14],[[7,[[37,[-2]],15]]],[],38],[[39,-1,-2],[[7,[4,40]]],41,[[43,[42]]]],[[39,-1,-2],[[7,[4,40]]],41,[[43,[42]]]],[[44,23,22,24,44,17,20],[[7,[4,21]]]],0,0,[[3,-1],7,45],0,[[-1,[37,[-2]]],[[7,[4,15]]],[],38],[[-1,[37,[-2]]],[[7,[4,15]]],[],38],0,0,0,0,0,[[2,[46,[10]]],[[47,[4]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,48,[]],[-1,48,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0],"c":[],"p":[[8,"CastFrom",66],[3,"Sorcerer",0],[3,"SpellInfo",0],[15,"tuple"],[3,"Formatter",67],[3,"Error",67],[4,"Result",68],[15,"usize"],[8,"Deserializer",69],[3,"TriggerEvent",70],[3,"Span",71],[3,"Arc",72],[6,"Result",67],[3,"FdFlags",73],[3,"Error",74],[3,"SpellServiceApi",75],[4,"PeerScope",76],[3,"Duration",77],[3,"String",78],[3,"PeerId",79],[3,"JError",80],[3,"ParticleAppServices",81],[3,"SpellStorage",82],[3,"SpellEventBusApi",70],[3,"TriggerConfig",83],[4,"Value",84],[3,"ModuleRepository",85],[3,"AquamarineApi",86],[3,"ResolvedConfig",87],[3,"Workers",88],[3,"KeyStorage",89],[3,"PeerScopes",90],[3,"SpellMetrics",91],[4,"Option",92],[3,"CustomService",93],[3,"HashMap",94],[3,"SetFdFlags",73],[8,"AsFilelike",95],[3,"RawCodec",96],[3,"Error",97],[8,"Read",98],[3,"Cid",99],[8,"Extend",100],[15,"str"],[8,"Serializer",101],[3,"UnboundedReceiver",102],[3,"JoinHandle",103],[3,"TypeId",104]],"b":[]},\
"spell_event_bus":{"doc":"","t":"AAEENNENNRNDENNDGDNNNDDEDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMDLLLLLLLLLLLLLLLLLL","n":["api","bus","Action","ConfigError","Connected","Disconnected","EventBusError","InvalidEndSec","InvalidPeriod","MAX_PERIOD_SEC","Peer","PeerEvent","PeerEventType","ReplyError","SendError","SpellEventBusApi","SpellId","SpellTriggerConfigs","Start","Subscribe","Timer","TimerEvent","TriggerEvent","TriggerInfo","TriggerInfoAqua","Unsubscribe","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","connected","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","debug","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_user_config","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_hash","hash","info","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into_rescheduled","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","peer_id","serialize","serialize","serialize","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","spell_id","start_scheduling","subscribe","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unsubscribe","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","action","reason","SpellEventBus","borrow","borrow_mut","debug","deref","deref_mut","drop","from","get_fd_flags","init","into","new","new_set_fd_flags","set_fd_flags","start","try_from","try_into","type_id","vzip"],"q":[[0,"spell_event_bus"],[2,"spell_event_bus::api"],[268,"spell_event_bus::api::EventBusError"],[270,"spell_event_bus::bus"],[289,"core::fmt"],[290,"core::fmt"],[291,"serde::de"],[292,"core::fmt"],[293,"fluence_spell_dtos::trigger_config"],[294,"core::option"],[295,"system_interface::fs::fd_flags"],[296,"std::io::error"],[297,"core::hash"],[298,"core::marker"],[299,"core::hash"],[300,"serde::ser"],[301,"alloc::string"],[302,"core::any"],[303,"peer_metrics::spell_metrics"],[304,"futures_core::stream"],[305,"alloc::vec"],[306,"tokio::sync::mpsc::unbounded"],[307,"tokio::runtime::task::join"]],"d":["","","","","","","","","","Max period is 100 years in secs: 60 sec * 60 min * 24 …","Event is triggered by a peer event.","Event is triggered by connection pool event","Types of events that are available for subscription.","","","","","","Actually start the scheduling","Subscribe a spell to a list of triggers","Event is triggered by timer.","","","","","Remove all subscriptions of a spell","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert user-friendly config to event-bus-friendly config, …","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Subscribe a spell to a list of events The spell can be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unsubscribe a spell from all events.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","",""],"i":[0,0,0,0,5,5,0,19,19,0,2,0,0,18,18,0,0,0,6,6,2,0,0,0,0,6,1,2,3,4,5,15,6,18,7,19,8,1,2,3,4,5,15,6,18,7,19,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,4,1,2,3,4,5,15,6,18,7,19,8,1,2,3,4,5,15,6,18,7,19,8,1,2,3,4,5,15,6,18,7,19,8,3,4,15,1,2,3,4,5,15,6,18,7,19,8,5,5,5,5,5,5,1,2,3,4,5,15,6,18,18,7,19,19,8,1,2,2,3,4,4,5,15,15,6,18,7,19,8,0,1,2,3,4,5,15,6,18,7,19,8,5,5,1,1,2,3,4,5,15,6,18,7,19,8,1,2,3,4,5,15,6,18,7,19,8,8,1,2,3,4,5,15,6,18,7,19,8,4,3,4,15,1,2,3,4,5,15,6,18,7,19,8,1,7,7,3,1,2,3,4,5,6,7,8,18,19,1,2,3,4,5,15,6,18,7,19,8,1,2,3,4,5,15,6,18,7,19,8,1,2,3,4,5,15,6,18,7,19,8,7,1,2,3,4,5,15,6,18,7,19,8,42,42,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[8,8],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],0,[10,[[12,[9,11]]]],[10,[[12,[9,11]]]],[10,[[12,[9,11]]]],[10,[[12,[9,11]]]],[10,[[12,[9,11]]]],[10,[[12,[9,11]]]],[10,[[12,[9,11]]]],[10,[[12,[9,11]]]],[10,[[12,[9,11]]]],[10,[[12,[9,11]]]],[10,[[12,[9,11]]]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[-1,[[12,[3]]],14],[-1,[[12,[4]]],14],[-1,[[12,[15]]],14],[13,9],[13,9],[13,9],[13,9],[13,9],[13,9],[13,9],[13,9],[13,9],[13,9],[13,9],[[5,5],16],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[-1,-2],16,[],[]],[[1,10],17],[[2,10],17],[[3,10],17],[[4,10],17],[[5,10],17],[[15,10],17],[[6,10],17],[[18,10],17],[[18,10],17],[[7,10],17],[[19,10],17],[[19,10],17],[[8,10],17],[-1,-1,[]],[-1,-1,[]],[15,2],[-1,-1,[]],[20,4],[-1,-1,[]],[-1,-1,[]],[2,15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[21,[[12,[[22,[8]],19]]]],[-1,[[12,[23,24]]],[]],[-1,[[12,[23,24]]],[]],[-1,[[12,[23,24]]],[]],[-1,[[12,[23,24]]],[]],[-1,[[12,[23,24]]],[]],[-1,[[12,[23,24]]],[]],[-1,[[12,[23,24]]],[]],[-1,[[12,[23,24]]],[]],[-1,[[12,[23,24]]],[]],[-1,[[12,[23,24]]],[]],[-1,[[12,[23,24]]],[]],[[-1,-2],25,[26,27],28],[[5,-1],9,29],0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[8,[[22,[8]]]],[[-1,23],[[12,[[30,[-2]],24]]],[],31],[[-1,23],[[12,[[30,[-2]],24]]],[],31],[[-1,23],[[12,[[30,[-2]],24]]],[],31],[[-1,23],[[12,[[30,[-2]],24]]],[],31],[[-1,23],[[12,[[30,[-2]],24]]],[],31],[[-1,23],[[12,[[30,[-2]],24]]],[],31],[[-1,23],[[12,[[30,[-2]],24]]],[],31],[[-1,23],[[12,[[30,[-2]],24]]],[],31],[[-1,23],[[12,[[30,[-2]],24]]],[],31],[[-1,23],[[12,[[30,[-2]],24]]],[],31],[[-1,23],[[12,[[30,[-2]],24]]],[],31],0,[[3,-1],12,32],[[4,-1],12,32],[[15,-1],12,32],[[-1,[30,[-2]]],[[12,[9,24]]],[],31],[[-1,[30,[-2]]],[[12,[9,24]]],[],31],[[-1,[30,[-2]]],[[12,[9,24]]],[],31],[[-1,[30,[-2]]],[[12,[9,24]]],[],31],[[-1,[30,[-2]]],[[12,[9,24]]],[],31],[[-1,[30,[-2]]],[[12,[9,24]]],[],31],[[-1,[30,[-2]]],[[12,[9,24]]],[],31],[[-1,[30,[-2]]],[[12,[9,24]]],[],31],[[-1,[30,[-2]]],[[12,[9,24]]],[],31],[[-1,[30,[-2]]],[[12,[9,24]]],[],31],[[-1,[30,[-2]]],[[12,[9,24]]],[],31],0,[7,[[12,[9,18]]]],[[7,33,8],[[12,[9,18]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,34,[]],[-1,34,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[[7,33],[[12,[9,18]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[10,[[12,[9,11]]]],[13,-1,[]],[13,-1,[]],[13,9],[-1,-1,[]],[-1,[[12,[23,24]]],[]],[[],13],[-1,-2,[],[]],[[[22,[36]],[38,[[37,[4]]]]],[[9,[39,7,[40,[1]]]]]],[[-1,23],[[12,[[30,[-2]],24]]],[],31],[[-1,[30,[-2]]],[[12,[9,24]]],[],31],[39,[[41,[9]]]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,35,[]],[-1,-2,[],[]]],"c":[],"p":[[3,"TriggerEvent",2],[4,"TriggerInfo",2],[3,"TimerEvent",2],[3,"PeerEvent",2],[4,"PeerEventType",2],[4,"Action",2],[3,"SpellEventBusApi",2],[3,"SpellTriggerConfigs",2],[15,"tuple"],[3,"Formatter",289],[3,"Error",289],[4,"Result",290],[15,"usize"],[8,"Deserializer",291],[3,"TriggerInfoAqua",2],[15,"bool"],[6,"Result",289],[4,"EventBusError",2],[4,"ConfigError",2],[4,"LifecycleEvent",292],[3,"TriggerConfig",293],[4,"Option",294],[3,"FdFlags",295],[3,"Error",296],[15,"u64"],[8,"Hash",297],[8,"Sized",298],[8,"BuildHasher",297],[8,"Hasher",297],[3,"SetFdFlags",295],[8,"AsFilelike",299],[8,"Serializer",300],[6,"SpellId",2],[3,"String",301],[3,"TypeId",302],[3,"SpellMetrics",303],[6,"BoxStream",304],[3,"Vec",305],[3,"SpellEventBus",270],[3,"UnboundedReceiver",306],[3,"JoinHandle",307],[13,"SendError",268]],"b":[[125,"impl-Debug-for-EventBusError"],[126,"impl-Display-for-EventBusError"],[128,"impl-Display-for-ConfigError"],[129,"impl-Debug-for-ConfigError"]]},\
"spell_service_api":{"doc":"","t":"EDNNNNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMM","n":["CallError","CallParams","EmptyResult","ExecutionError","OtherError","ResultParseError","ServiceNotFound","SpellServiceApi","as_","as_","as_","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","debug","debug","debug","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","from","from","from","from","get_counter","get_fd_flags","get_fd_flags","get_fd_flags","get_script","get_string","get_trigger_config","init","init","init","into","into","into","local","new","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","references","references","references","set_counter","set_fd_flags","set_fd_flags","set_fd_flags","set_script","set_string","set_trigger_config","set_trigger_event","store_error","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_kv","vzip","vzip","vzip","function_name","function_name","function_name","function_name","function_name","reason","reason","reason","spell_id","spell_id","spell_id","spell_id","spell_id","target_type"],"q":[[0,"spell_service_api"],[87,"spell_service_api::CallError"],[101,"bnum::cast"],[102,"core::fmt"],[103,"core::fmt"],[104,"core::fmt"],[105,"particle_execution::particle_params"],[106,"core::option"],[107,"system_interface::fs::fd_flags"],[108,"std::io::error"],[109,"fluence_spell_dtos::trigger_config"],[110,"types::peer_scope"],[111,"libp2p_identity::peer_id"],[112,"core::time"],[113,"particle_services::app_services"],[114,"system_interface::fs::fd_flags"],[115,"libipld_core::raw"],[116,"anyhow"],[117,"std::io"],[118,"cid::cid"],[119,"core::iter::traits::collect"],[120,"serde_json::value"],[121,"alloc::vec"],[122,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Load the counter (how many times the spell was run)","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Update the counter (how many times the spell was run) …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,9,9,9,9,9,0,9,2,3,9,2,3,9,2,3,2,3,2,3,9,2,3,9,2,3,9,2,3,9,2,3,9,9,3,9,2,2,3,3,9,2,3,3,3,3,9,2,3,9,2,3,2,2,3,9,2,3,9,2,3,3,9,2,3,3,3,3,3,3,2,3,9,9,2,3,9,2,3,9,2,3,3,9,2,3,32,33,34,35,36,34,35,36,32,33,34,35,36,35],"f":[0,0,0,0,0,0,0,0,[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,2],[3,3],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[5,[[7,[4,6]]]],[5,[[7,[4,6]]]],[5,[[7,[4,6]]]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,-1,[]],[8,4],[8,4],[8,4],[[9,5],10],[[9,5],10],[[3,5],10],[-1,-1,[]],[-1,-1,[]],[[11,12],2],[-1,-1,[]],[[3,2],[[7,[[14,[13]],9]]]],[-1,[[7,[15,16]]],[]],[-1,[[7,[15,16]]],[]],[-1,[[7,[15,16]]],[]],[[3,2],[[7,[11,9]]]],[[3,2,11],[[7,[[14,[11]],9]]]],[[3,2],[[7,[17,9]]]],[[],8],[[],8],[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[18,11,19,20],2],[[19,18,11,[14,[11]],20],2],[21,3],[[-1,15],[[7,[[22,[-2]],16]]],[],23],[[-1,15],[[7,[[22,[-2]],16]]],[],23],[[-1,15],[[7,[[22,[-2]],16]]],[],23],[[24,-1,-2],[[7,[4,25]]],26,[[28,[27]]]],[[24,-1,-2],[[7,[4,25]]],26,[[28,[27]]]],[[24,-1,-2],[[7,[4,25]]],26,[[28,[27]]]],[[3,2,13],[[7,[4,9]]]],[[-1,[22,[-2]]],[[7,[4,16]]],[],23],[[-1,[22,[-2]]],[[7,[4,16]]],[],23],[[-1,[22,[-2]]],[[7,[4,16]]],[],23],[[3,2,11],[[7,[4,9]]]],[[3,2,11,11],[[7,[4,9]]]],[[3,2,17],[[7,[4,9]]]],[[3,2,11],[[7,[4,9]]]],[[3,2,[30,[29]]],[[7,[4,9]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,11,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[[3,2,29],[[7,[4,9]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[8,"CastFrom",101],[3,"CallParams",0],[3,"SpellServiceApi",0],[15,"tuple"],[3,"Formatter",102],[3,"Error",102],[4,"Result",103],[15,"usize"],[4,"CallError",0],[6,"Result",102],[3,"String",104],[3,"ParticleParams",105],[15,"u32"],[4,"Option",106],[3,"FdFlags",107],[3,"Error",108],[3,"TriggerConfig",109],[4,"PeerScope",110],[3,"PeerId",111],[3,"Duration",112],[3,"ParticleAppServices",113],[3,"SetFdFlags",107],[8,"AsFilelike",114],[3,"RawCodec",115],[3,"Error",116],[8,"Read",117],[3,"Cid",118],[8,"Extend",119],[4,"Value",120],[3,"Vec",121],[3,"TypeId",122],[13,"ServiceNotFound",87],[13,"EmptyResult",87],[13,"OtherError",87],[13,"ResultParseError",87],[13,"ExecutionError",87]],"b":[[33,"impl-Debug-for-CallError"],[34,"impl-Display-for-CallError"]]},\
"spell_storage":{"doc":"","t":"DLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["SpellStorage","as_","borrow","borrow_mut","clone","clone_into","create","debug","deref","deref_mut","drop","fmt","from","get_blueprint","get_fd_flags","get_registered_spells","get_registered_spells_by","get_scope","init","into","new_set_fd_flags","references","register_spell","set_fd_flags","to_owned","try_from","try_into","type_id","unregister_spell","vzip"],"q":[[0,"spell_storage"],[30,"bnum::cast"],[31,"std::path"],[32,"particle_services::app_services"],[33,"particle_modules::modules"],[34,"alloc::string"],[35,"eyre"],[36,"core::fmt"],[37,"core::fmt"],[38,"core::fmt"],[39,"std::io::error"],[40,"types::peer_scope"],[41,"alloc::vec"],[42,"std::collections::hash::map"],[43,"core::option"],[44,"system_interface::fs::fd_flags"],[45,"libipld_core::raw"],[46,"anyhow"],[47,"std::io"],[48,"cid::cid"],[49,"core::iter::traits::collect"],[50,"core::any"]],"d":["","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","",""],"i":[0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],"f":[0,[-1,-3,[],[],[[1,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[2,2],[[-1,-2],3,[],[]],[[4,5,6],[[8,[[3,[2,7]]]]]],[9,[[11,[3,10]]]],[12,-1,[]],[12,-1,[]],[12,3],[[2,9],13],[-1,-1,[]],[2,7],[-1,[[11,[14,15]]],[]],[2,[[18,[16,[17,[7]]]]]],[[2,16],[[17,[7]]]],[[2,7],[[19,[16]]]],[[],12],[-1,-2,[],[]],[[-1,14],[[11,[[20,[-2]],15]]],[],21],[[22,-1,-2],[[11,[3,23]]],24,[[26,[25]]]],[[2,16,7],3],[[-1,[20,[-2]]],[[11,[3,15]]],[],21],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,27,[]],[[2,16,28],3],[-1,-2,[],[]]],"c":[],"p":[[8,"CastFrom",30],[3,"SpellStorage",0],[15,"tuple"],[3,"Path",31],[3,"ParticleAppServices",32],[3,"ModuleRepository",33],[3,"String",34],[6,"Result",35],[3,"Formatter",36],[3,"Error",36],[4,"Result",37],[15,"usize"],[6,"Result",36],[3,"FdFlags",38],[3,"Error",39],[4,"PeerScope",40],[3,"Vec",41],[3,"HashMap",42],[4,"Option",43],[3,"SetFdFlags",38],[8,"AsFilelike",44],[3,"RawCodec",45],[3,"Error",46],[8,"Read",47],[3,"Cid",48],[8,"Extend",49],[3,"TypeId",50],[15,"str"]],"b":[]},\
"subnet_resolver":{"doc":"","t":"DDLLLLLLLLLLLLMLLLLMLLMFLLMLLLLLLLLLLMM","n":["SubnetResolveResult","Worker","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","error","fmt","fmt","from","from","host_id","into","into","pat_id","resolve_subnet","serialize","serialize","success","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","worker_id","workers"],"q":[[0,"subnet_resolver"],[39,"core::result"],[40,"serde::de"],[41,"core::fmt"],[42,"core::fmt"],[43,"serde::ser"],[44,"core::any"]],"d":["","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","",""],"i":[0,0,1,2,1,2,1,2,1,2,1,2,1,2,2,1,2,1,2,1,1,2,1,0,1,2,2,1,2,1,2,1,2,1,2,1,2,1,2],"f":[0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[2,2],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[-1,[[4,[1]]],5],[-1,[[4,[2]]],5],[[1,1],6],[[2,2],6],0,[[1,7],8],[[2,7],8],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[9,10],2],[[1,-1],4,11],[[2,-1],4,11],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,12,[]],[-1,12,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0],"c":[],"p":[[3,"Worker",0],[3,"SubnetResolveResult",0],[15,"tuple"],[4,"Result",39],[8,"Deserializer",40],[15,"bool"],[3,"Formatter",41],[6,"Result",41],[3,"String",42],[15,"str"],[8,"Serializer",43],[3,"TypeId",44]],"b":[]},\
"system_services":{"doc":"","t":"GNDDNGDDEDDDMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLMMMLLLLLLLLMMLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLL","n":["CallService","Created","Deployer","DeploymentStatus","Existing","InitService","PackageDistro","ServiceDistro","ServiceStatus","SpellDistro","SystemServiceDistros","Versions","air","aqua_ipfs_version","as_","as_","as_","as_","as_","as_","as_","as_","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","debug","debug","debug","debug","debug","debug","debug","debug","decider_version","default_from","deploy_system_services","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","get_fd_flags","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","kv","modules","name","name","name","new","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","new_set_fd_flags","references","references","references","references","references","references","references","references","registry_version","services","services","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","set_fd_flags","spells","spells","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","trigger_config","trust_graph_version","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","versions","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"system_services"],[211,"bnum::cast"],[212,"core::fmt"],[213,"core::fmt"],[214,"server_config::system_services_config"],[215,"eyre"],[216,"alloc::vec"],[217,"core::fmt"],[218,"std::io::error"],[219,"particle_services::app_services"],[220,"particle_modules::modules"],[221,"spell_storage::storage"],[222,"spell_event_bus::api"],[223,"spell_service_api"],[224,"libp2p_identity::peer_id"],[225,"system_interface::fs::fd_flags"],[226,"libipld_core::raw"],[227,"anyhow"],[228,"std::io"],[229,"cid::cid"],[230,"core::iter::traits::collect"],[231,"core::any"]],"d":["Call service functions. Accepts","Id of a newly created service","","Status of package deployment for each services and spells …","Id of a already existing service","Initialization function to initialize services","Package distribution description Contains enough …","Service distribution description that provides enough …","A status of a service/spell after deployment","Spell distribution description that provides enough …","","","The AIR script of the spell","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Marine config of the service","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","With overriding existing packages","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Optionally, initialization function for the services.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Initial values for the KV storage of the spell Note that …","WASM modules of the service by their names","High-level name of the package. For the system services …","High-level names of the service used as an alias","The name of the spell which is also used as an alias for …","","","","","","","","","","","","","","","","","","","List services needed by the package","Statuses of services deployment","","","","","","","","","List of spells needed by the package","Statuses of spells deployment  ","","","","","","","","","The trigger config for the spell","","","","","","","","","","","","","","","","","","","","","","","","","","Version of the package, the field is used to display …","","","","","","","","",""],"i":[0,8,0,0,8,0,0,0,0,0,0,0,7,3,2,3,4,5,6,7,8,9,2,3,4,5,6,7,8,9,2,3,4,5,6,7,8,9,2,3,4,5,6,7,8,9,2,3,4,5,6,7,8,9,6,2,3,4,5,6,7,8,9,3,4,2,2,3,4,5,6,7,8,9,2,3,4,5,6,7,8,9,2,3,4,5,6,7,8,9,4,2,3,4,5,6,7,8,9,2,3,4,5,6,7,8,9,2,3,4,5,6,7,8,9,2,3,4,5,6,7,8,9,5,2,3,4,5,6,7,8,9,7,6,5,6,7,2,2,3,4,5,6,7,8,9,2,3,4,5,6,7,8,9,3,5,9,2,3,4,5,6,7,8,9,5,9,2,3,4,5,6,7,8,9,7,3,2,3,4,5,6,7,8,9,2,3,4,5,6,7,8,9,2,3,4,5,6,7,8,9,5,2,2,3,4,5,6,7,8,9],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[8,8],[9,9],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],0,[11,[[13,[10,12]]]],[11,[[13,[10,12]]]],[11,[[13,[10,12]]]],[11,[[13,[10,12]]]],[11,[[13,[10,12]]]],[11,[[13,[10,12]]]],[11,[[13,[10,12]]]],[11,[[13,[10,12]]]],0,[14,[[15,[4]]]],[2,[[15,[10]]]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,-1,[]],[16,10],[16,10],[16,10],[16,10],[16,10],[16,10],[16,10],[16,10],[[4,[17,[5]]],4],[[2,11],18],[[3,11],18],[[4,11],18],[[5,11],18],[[6,11],18],[[7,11],18],[[8,11],18],[[9,11],18],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[[13,[19,20]]],[]],[-1,[[13,[19,20]]],[]],[-1,[[13,[19,20]]],[]],[-1,[[13,[19,20]]],[]],[-1,[[13,[19,20]]],[]],[-1,[[13,[19,20]]],[]],[-1,[[13,[19,20]]],[]],[-1,[[13,[19,20]]],[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[[21,22,23,24,25,26,26,4],2],[[-1,19],[[13,[[27,[-2]],20]]],[],28],[[-1,19],[[13,[[27,[-2]],20]]],[],28],[[-1,19],[[13,[[27,[-2]],20]]],[],28],[[-1,19],[[13,[[27,[-2]],20]]],[],28],[[-1,19],[[13,[[27,[-2]],20]]],[],28],[[-1,19],[[13,[[27,[-2]],20]]],[],28],[[-1,19],[[13,[[27,[-2]],20]]],[],28],[[-1,19],[[13,[[27,[-2]],20]]],[],28],[[29,-1,-2],[[13,[10,30]]],31,[[33,[32]]]],[[29,-1,-2],[[13,[10,30]]],31,[[33,[32]]]],[[29,-1,-2],[[13,[10,30]]],31,[[33,[32]]]],[[29,-1,-2],[[13,[10,30]]],31,[[33,[32]]]],[[29,-1,-2],[[13,[10,30]]],31,[[33,[32]]]],[[29,-1,-2],[[13,[10,30]]],31,[[33,[32]]]],[[29,-1,-2],[[13,[10,30]]],31,[[33,[32]]]],[[29,-1,-2],[[13,[10,30]]],31,[[33,[32]]]],0,0,0,[[-1,[27,[-2]]],[[13,[10,20]]],[],28],[[-1,[27,[-2]]],[[13,[10,20]]],[],28],[[-1,[27,[-2]]],[[13,[10,20]]],[],28],[[-1,[27,[-2]]],[[13,[10,20]]],[],28],[[-1,[27,[-2]]],[[13,[10,20]]],[],28],[[-1,[27,[-2]]],[[13,[10,20]]],[],28],[[-1,[27,[-2]]],[[13,[10,20]]],[],28],[[-1,[27,[-2]]],[[13,[10,20]]],[],28],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],[-1,34,[]],0,[2,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[8,"CastFrom",211],[3,"Deployer",0],[3,"Versions",0],[3,"SystemServiceDistros",0],[3,"PackageDistro",0],[3,"ServiceDistro",0],[3,"SpellDistro",0],[4,"ServiceStatus",0],[3,"DeploymentStatus",0],[15,"tuple"],[3,"Formatter",212],[3,"Error",212],[4,"Result",213],[3,"SystemServicesConfig",214],[6,"Result",215],[15,"usize"],[3,"Vec",216],[6,"Result",212],[3,"FdFlags",217],[3,"Error",218],[3,"ParticleAppServices",219],[3,"ModuleRepository",220],[3,"SpellStorage",221],[3,"SpellEventBusApi",222],[3,"SpellServiceApi",223],[3,"PeerId",224],[3,"SetFdFlags",217],[8,"AsFilelike",225],[3,"RawCodec",226],[3,"Error",227],[8,"Read",228],[3,"Cid",229],[8,"Extend",230],[3,"TypeId",231]],"b":[]},\
"test_constants":{"doc":"","t":"HHHHHH","n":["EXECUTION_TIMEOUT","IDLE_CONNECTION_TIMEOUT","PARTICLE_TTL","SHORT_TIMEOUT","TIMEOUT","TRANSPORT_TIMEOUT"],"q":[[0,"test_constants"]],"d":["","","","","In debug, VM startup time is big, account for that",""],"i":[0,0,0,0,0,0],"f":[0,0,0,0,0,0],"c":[],"p":[],"b":[]},\
"test_utils":{"doc":"","t":"DDLLLLLLLLLLFFLLLLLLLLMLLLLLLMLLLLLLLLFMMLLFFLLLLLLLLLL","n":["CreatedService","RetStruct","as_","as_","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","create_service","create_service_worker","debug","debug","deref","deref","deref_mut","deref_mut","drop","drop","error","fmt","fmt","from","from","get_fd_flags","get_fd_flags","id","init","init","into","into","new_set_fd_flags","new_set_fd_flags","references","references","response_to_return","result","ret_code","set_fd_flags","set_fd_flags","string_result","timeout","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"test_utils"],[55,"bnum::cast"],[56,"connected_client::connected_client"],[57,"alloc::vec"],[58,"alloc::string"],[59,"core::fmt"],[60,"core::fmt"],[61,"core::fmt"],[62,"std::io::error"],[63,"system_interface::fs::fd_flags"],[64,"libipld_core::raw"],[65,"anyhow"],[66,"std::io"],[67,"cid::cid"],[68,"core::iter::traits::collect"],[69,"fluence_it_types::values"],[70,"core::time"],[71,"eyre"],[72,"core::future::future"],[73,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,2,3,2,3,2,3,2,3,2,3,0,0,2,3,2,3,2,3,2,3,3,2,3,2,3,2,3,2,2,3,2,3,2,3,2,3,0,3,3,2,3,0,0,2,3,2,3,2,3,2,3,2,3],"f":[0,0,[-1,-3,[],[],[[1,[-2]]]],[-1,-3,[],[],[[1,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,2],[3,3],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[5,6,[8,[7]]],2],[[5,6,[8,[7]],9],2],[10,[[12,[4,11]]]],[10,[[12,[4,11]]]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,-1,[]],[13,4],[13,4],0,[[2,10],14],[[3,10],14],[-1,-1,[]],[-1,-1,[]],[-1,[[12,[15,16]]],[]],[-1,[[12,[15,16]]],[]],0,[[],13],[[],13],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,15],[[12,[[17,[-2]],16]]],[],18],[[-1,15],[[12,[[17,[-2]],16]]],[],18],[[19,-1,-2],[[12,[4,20]]],21,[[23,[22]]]],[[19,-1,-2],[[12,[4,20]]],21,[[23,[22]]]],[24,3],0,0,[[-1,[17,[-2]]],[[12,[4,16]]],[],18],[[-1,[17,[-2]]],[[12,[4,16]]],[],18],[3,[[12,[9,9]]]],[[25,-1],[[26,[-2]]],27,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[8,"CastFrom",55],[3,"CreatedService",0],[3,"RetStruct",0],[15,"tuple"],[3,"ConnectedClient",56],[15,"str"],[15,"u8"],[3,"Vec",57],[3,"String",58],[3,"Formatter",59],[3,"Error",59],[4,"Result",60],[15,"usize"],[6,"Result",59],[3,"FdFlags",61],[3,"Error",62],[3,"SetFdFlags",61],[8,"AsFilelike",63],[3,"RawCodec",64],[3,"Error",65],[8,"Read",66],[3,"Cid",67],[8,"Extend",68],[4,"IValue",69],[3,"Duration",70],[6,"Result",71],[8,"Future",72],[3,"TypeId",73]],"b":[]},\
"toml_utils":{"doc":"","t":"F","n":["table"],"q":[[0,"toml_utils"],[1,"alloc::string"],[2,"alloc::vec"],[3,"toml::value"]],"d":[""],"i":[0],"f":[[[[3,[[2,[1,1]]]]],4]],"c":[],"p":[[3,"String",1],[15,"tuple"],[3,"Vec",2],[6,"Table",3]],"b":[]},\
"toy_vms":{"doc":"","t":"DLLLLLLLLLLLLLLLLLLLLLL","n":["EasyVM","as_","borrow","borrow_mut","call","create_runtime","debug","deref","deref_mut","drop","from","get_fd_flags","init","into","into_effects","memory_stats","new_set_fd_flags","references","set_fd_flags","try_from","try_into","type_id","vzip"],"q":[[0,"toy_vms"],[23,"bnum::cast"],[24,"avm_interface::particle_parameters"],[25,"avm_interface::call_service_result"],[26,"fluence_keypair::key_pair"],[27,"avm_interface::raw_outcome"],[28,"core::result"],[29,"alloc::string"],[30,"core::convert"],[31,"alloc::vec"],[32,"core::time"],[33,"core::option"],[34,"core::task::wake"],[35,"core::fmt"],[36,"core::fmt"],[37,"std::io::error"],[38,"aquamarine::particle_effects"],[39,"avm_server::runner"],[40,"system_interface::fs::fd_flags"],[41,"libipld_core::raw"],[42,"anyhow"],[43,"std::io"],[44,"cid::cid"],[45,"core::iter::traits::collect"],[46,"core::any"]],"d":["","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],"f":[0,[-1,-3,[],[],[[1,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[2,-1,-2,-3,3,4,5],[[7,[6]]],[[9,[8]]],[[9,[[11,[10]]]]],[[9,[[11,[10]]]]]],[[[13,[12]],14],[[7,[2]]]],[15,[[7,[16,17]]]],[18,-1,[]],[18,-1,[]],[18,16],[-1,-1,[]],[-1,[[7,[19,20]]],[]],[[],18],[-1,-2,[],[]],[[[7,[6]],8],21],[2,22],[[-1,19],[[7,[[23,[-2]],20]]],[],24],[[25,-1,-2],[[7,[16,26]]],27,[[29,[28]]]],[[-1,[23,[-2]]],[[7,[16,20]]],[],24],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,30,[]],[-1,-2,[],[]]],"c":[],"p":[[8,"CastFrom",23],[3,"EasyVM",0],[3,"ParticleParameters",24],[6,"CallResults",25],[4,"KeyPair",26],[3,"RawAVMOutcome",27],[4,"Result",28],[3,"String",29],[8,"Into",30],[15,"u8"],[3,"Vec",31],[3,"Duration",32],[4,"Option",33],[3,"Waker",34],[3,"Formatter",35],[15,"tuple"],[3,"Error",35],[15,"usize"],[3,"FdFlags",36],[3,"Error",37],[3,"ParticleEffects",38],[3,"AVMMemoryStats",39],[3,"SetFdFlags",36],[8,"AsFilelike",40],[3,"RawCodec",41],[3,"Error",42],[8,"Read",43],[3,"Cid",44],[8,"Extend",45],[3,"TypeId",46]],"b":[]},\
"types":{"doc":"","t":"DLLLLLLLLLLLLLLLLLLLLLAALLLLLLLLLAFFNEDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["DealId","borrow","borrow_mut","clone","clone_into","cmp","deserialize","eq","eq","eq","eq","eq","fmt","fmt","from","from","from","get_contract_address","hash","into","normalize","partial_cmp","peer_id","peer_scope","serialize","to_address","to_bytes","to_owned","to_string","try_from","try_into","type_id","vzip","serde","deserialize","serialize","Host","PeerScope","WorkerId","WorkerId","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","deserialize","deserialize","eq","eq","fmt","fmt","fmt","from","from","from","hash","hash","into","into","partial_cmp","partial_cmp","serialize","serialize","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"types"],[33,"types::peer_id"],[34,"types::peer_id::serde"],[36,"types::peer_scope"],[79,"core::cmp"],[80,"core::result"],[81,"serde::de"],[82,"alloc::string"],[83,"core::fmt"],[84,"core::fmt"],[85,"core::option"],[86,"serde::ser"],[87,"alloc::vec"],[88,"core::any"],[89,"libp2p_identity::peer_id"]],"d":["","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,0,0,0,18,0,0,18,18,19,18,19,18,19,18,19,18,19,18,19,18,19,18,19,19,18,19,19,18,19,18,19,18,19,18,19,18,19,19,18,19,18,19,18,19,18,19],"f":[0,[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[-1,-2],2,[],[]],[[1,1],3],[-1,[[4,[1]]],5],[[1,6],7],[[1,6],7],[[1,8],7],[[1,1],7],[[1,8],7],[[1,9],10],[[1,9],10],[6,1],[8,1],[-1,-1,[]],[1,8],[[1,-1],2,11],[-1,-2,[],[]],[6,8],[[1,1],[[12,[3]]]],0,0,[[1,-1],4,13],[1,8],[1,[[15,[14]]]],[-1,-2,[],[]],[-1,8,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,16,[]],[-1,-2,[],[]],0,[-1,[[4,[17]]],5],[[17,-1],4,13],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[18,18],[19,19],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[18,18],3],[[19,19],3],[-1,[[4,[18]]],5],[-1,[[4,[19]]],5],[[18,18],7],[[19,19],7],[[18,9],10],[[19,9],10],[[19,9],10],[-1,-1,[]],[-1,-1,[]],[17,19],[[18,-1],2,11],[[19,-1],2,11],[-1,-2,[],[]],[-1,-2,[],[]],[[18,18],[[12,[3]]]],[[19,19],[[12,[3]]]],[[18,-1],4,13],[[19,-1],4,13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,8,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"DealId",0],[15,"tuple"],[4,"Ordering",79],[4,"Result",80],[8,"Deserializer",81],[15,"str"],[15,"bool"],[3,"String",82],[3,"Formatter",83],[6,"Result",83],[8,"Hasher",84],[4,"Option",85],[8,"Serializer",86],[15,"u8"],[3,"Vec",87],[3,"TypeId",88],[3,"PeerId",89],[4,"PeerScope",36],[3,"WorkerId",36]],"b":[[7,"impl-PartialEq%3C%26str%3E-for-%26DealId"],[8,"impl-PartialEq%3C%26str%3E-for-DealId"],[9,"impl-PartialEq%3CString%3E-for-%26DealId"],[10,"impl-PartialEq-for-DealId"],[11,"impl-PartialEq%3CString%3E-for-DealId"],[12,"impl-Debug-for-DealId"],[13,"impl-Display-for-DealId"],[14,"impl-From%3C%26str%3E-for-DealId"],[15,"impl-From%3CString%3E-for-DealId"],[55,"impl-Display-for-WorkerId"],[56,"impl-Debug-for-WorkerId"]]},\
"uuid_utils":{"doc":"","t":"F","n":["uuid"],"q":[[0,"uuid_utils"],[1,"alloc::string"]],"d":[""],"i":[0],"f":[[[],1]],"c":[],"p":[[3,"String",1]],"b":[]},\
"waiting_queues":{"doc":"","t":"ENNDLLLLLLLLLLLLLLLLLLLLL","n":["Enqueued","Existing","New","WaitingQueues","borrow","borrow","borrow_mut","borrow_mut","count","default","enqueue","fmt","from","from","into","into","new","remove","remove_with","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"waiting_queues"],[25,"core::cmp"],[26,"core::hash"],[27,"core::fmt"],[28,"core::fmt"],[29,"core::ops::function"],[30,"core::result"],[31,"core::any"]],"d":["Represents a result of the enqueue_promise operation","","","","","","","","Returns number of items on key <code>k</code>. Useful for debug.","","Inserts <code>item</code> in the queue associated with <code>key</code>","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Removes queue associated with <code>key</code>","Removes items on key <code>k</code> that satisfy <code>remove</code> predicate …","","","","","",""],"i":[0,6,6,0,6,1,6,1,1,1,1,1,6,1,6,1,1,1,1,6,1,6,1,6,1],"f":[0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1,-2]],-1],2,[3,4,5],5],[[],[[1,[-1,-2]]],[3,4,5],5],[[[1,[-1,-2]],-1,-2],6,[3,4,5],5],[[[1,[-1,-2]],7],8,5,5],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[1,[-1,-2]]],[3,4,5],5],[[[1,[-1,-2]],-1],[[0,[9]]],[3,4,5],5],[[[1,[-1,-2]],-1,-3],[[0,[9]]],[3,4,5],5,10],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,12,[]],[-1,12,[]]],"c":[],"p":[[3,"WaitingQueues",0],[15,"usize"],[8,"Eq",25],[8,"Hash",26],[8,"Debug",27],[4,"Enqueued",0],[3,"Formatter",27],[6,"Result",27],[8,"Iterator",28],[8,"FnMut",29],[4,"Result",30],[3,"TypeId",31]],"b":[]},\
"workers":{"doc":"","t":"DNENNNNNNNNNDENNDENNDNNNNNDNNNNNDNNDNNDNDENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM","n":["CUID","CannotExtractRSASecretKey","CoreManager","CreateKeypairsDir","CreateRuntime","CreateWorkerKeyPair","CreateWorkersDir","DeserializePersistedKeypair","DeserializePersistedWorker","Dev","DirectoryListError","Dummy","DummyCoreManager","Event","FailedToAssignCores","FailedToNotifySubsystem","KeyStorage","KeyStorageError","KeypairNotFound","KeypairNotFound","PeerScopes","PersistedKeypairDecodingError","PersistedKeypairInvalidKeyFormat","Persistent","ReadPersistedKeypair","ReadPersistedWorker","Receiver","RemoveErrorPersistedKeypair","RemoveErrorPersistedWorker","RemoveWorkerKeyPair","SerializePersistedKeypair","SerializePersistedWorker","StrictCoreManager","WorkerAlreadyExists","WorkerCreated","WorkerId","WorkerNotFound","WorkerNotFoundByDeal","WorkerParams","WorkerRemoved","Workers","WorkersError","WriteErrorPersistedKeypair","WriteErrorPersistedWorker","acquire_worker_core","acquire_worker_core","acquire_worker_core","activate_worker","as_ref","blocking_recv","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","close","cmp","cmp","compare","compare","create_key_pair","create_worker","deactivate_worker","default","default","deserialize","deserialize","encode_hex","encode_hex_upper","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_hex","from_path","from_path","from_path","get_deal_id","get_host_peer_id","get_keypair","get_runtime_handle","get_system_cpu_assignment","get_system_cpu_assignment","get_system_cpu_assignment","get_worker_creator","get_worker_id","get_worker_key_pair","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","is_host","is_management","is_worker_active","list_workers","new","new","new","partial_cmp","partial_cmp","poll_recv","poll_recv_many","recv","recv_many","release","release","release","remove_key_pair","remove_worker","root_key_pair","scope","serialize","serialize","shutdown","source","source","to_owned","to_owned","to_owned","to_peer_id","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_recv","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","thread_count","worker_id","worker_id","err","err","err","err","err","err","err","err","err","path","path","path","path","path","path","path","path","worker_id","deal_id","err","err","err","err","err","err","err","err","err","err","path","path","path","path","path","worker_id","worker_id","worker_id","worker_id"],"q":[[0,"workers"],[250,"workers::Event"],[253,"workers::KeyStorageError"],[271,"workers::WorkersError"],[291,"core_manager::types"],[292,"core_manager::types"],[293,"core::result"],[294,"core::option"],[295,"core::cmp"],[296,"fluence_keypair::key_pair"],[297,"serde::de"],[298,"core::iter::traits::collect"],[299,"core::fmt"],[300,"core::fmt"],[301,"core_manager::dev"],[302,"core::convert"],[303,"std::path"],[304,"eyre"],[305,"alloc::sync"],[306,"core_manager::core_range"],[307,"core_manager::persistence"],[308,"core_manager::errors"],[309,"types::peer_scope"],[310,"tokio::runtime::handle"],[311,"core::hash"],[312,"alloc::vec"],[313,"core::task::wake"],[314,"core::task::poll"],[315,"serde::ser"],[316,"core::error"],[317,"alloc::string"],[318,"tokio::sync::mpsc::error"],[319,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","Represents information about various peer IDs.","","","","","","Receives values from the associated <code>Sender</code>.","","","","","","<code>StrictCoreManager</code> is a CPU core manager responsible for …","","","","","","","","Manages a collection of workers.","","","","","","","Activates the worker with the specified <code>worker_id</code>.","","Blocking receive to call outside of asynchronous contexts.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Closes the receiving half of a channel without dropping it.","","","","","","Creates a new worker with the given <code>deal_id</code> and initial …","Deactivates the worker with the specified <code>worker_id</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Creates a <code>Workers</code> instance by loading persisted worker …","Loads the state from <code>file_name</code> if exists. If not creates a …","Retrieves the deal ID associated with the specified worker …","","","","","","","Retrieves the creator <code>PeerId</code> associated with the specified …","Retrieves the worker ID associated with the specified …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Checks the activation status of the worker with the …","Retrieves a list of all worker IDs.","","","","","","Polls to receive the next message on this channel.","Polls to receive multiple messages on this channel, …","Receives the next value for this receiver.","Receives the next values for this receiver and extends …","","","","","Removes a worker with the specified <code>worker_id</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to receive the next value for this receiver.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,21,0,21,11,11,11,21,11,7,21,7,0,0,11,11,0,0,21,11,0,21,21,7,21,11,0,21,11,11,21,11,0,11,30,0,11,11,0,30,0,0,21,11,1,6,7,8,12,15,19,22,8,9,21,11,1,17,30,12,6,7,15,19,22,8,9,21,11,1,17,30,12,6,7,15,9,17,12,9,17,12,15,9,12,9,12,19,8,8,12,6,9,12,12,12,9,12,9,9,9,12,12,12,9,9,21,21,11,11,17,30,12,12,15,19,22,8,9,9,21,11,1,17,30,12,6,7,7,7,7,15,12,19,8,1,8,17,19,8,1,6,7,8,8,19,9,12,19,22,8,9,21,11,1,17,30,12,6,7,15,17,17,8,8,22,17,12,9,12,15,15,15,15,1,6,7,19,8,19,17,9,12,8,21,11,9,17,12,17,9,21,11,12,19,22,8,9,21,11,1,17,30,12,6,7,15,19,22,8,9,21,11,1,17,30,12,6,7,7,7,7,15,15,19,22,8,9,21,11,1,17,30,12,6,7,15,19,22,8,9,21,11,1,17,30,12,6,7,15,54,54,55,56,57,58,59,60,61,62,63,64,56,57,58,59,60,62,63,64,63,65,66,67,68,69,70,71,72,73,74,75,66,69,70,72,73,73,74,75,76],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],[[5,[3,4]]]],[[6,2],[[5,[3,4]]]],[[7,2],[[5,[3,4]]]],[[8,9],[[5,[10,11]]]],[12,[[14,[13]]]],[[[15,[-1]]],[[16,[-1]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[9,9],[17,17],[12,12],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[-1,-2],10,[],[]],[[[15,[-1]]],10,[]],[[9,9],18],[[12,12],18],[[-1,-2],18,[],[]],[[-1,-2],18,[],[]],[19,[[5,[20,21]]]],[[8,22],[[5,[9,11]]]],[[8,9],[[5,[10,11]]]],[[],12],[[],6],[-1,[[5,[9]]],23],[-1,[[5,[12]]],23],[12,-1,[[25,[24]]]],[12,-1,[[25,[24]]]],[[9,9],26],[[12,12],26],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[-1,-2],26,[],[]],[[9,27],[[5,[10,28]]]],[[9,27],[[5,[10,28]]]],[[21,27],29],[[21,27],29],[[11,27],29],[[11,27],29],[[17,27],29],[[30,27],29],[[12,27],[[5,[10,28]]]],[[12,27],[[5,[10,28]]]],[[[15,[-1]],27],[[5,[10,28]]],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[31,9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[1,7],[6,7],[32,7],[-1,-1,[]],[-1,-1,[]],[-1,[[5,[12]]],[[34,[[33,[13]]]]]],[[35,20],[[36,[19]]]],[[35,[37,[19]],[37,[7]],38],[[36,[[10,[8,[15,[30]]]]]]]],[[35,38,39],[[5,[[10,[1,40]],41]]]],[[8,9],[[5,[42,11]]]],[17,31],[[19,43],[[16,[20]]]],[[8,9],[[16,[44]]]],[1,3],[6,3],[7,3],[[8,9],[[5,[31,11]]]],[[8,42],[[5,[9,11]]]],[[19,9],[[16,[20]]]],[[9,-1],10,45],[[12,-1],10,45],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[17,31],26],[[17,31],26],[[8,9],26],[8,[[46,[9]]]],[[42,31,[46,[12]]],22],[[31,31,31,[37,[19]]],17],[[[14,[13]]],12],[[9,9],[[16,[18]]]],[[12,12],[[16,[18]]]],[[[15,[-1]],47],[[48,[[16,[-1]]]]],[]],[[[15,[-1]],47,[46,[-1]],38],[[48,[38]]],[]],[[[15,[-1]]],[[16,[-1]]],[]],[[[15,[-1]],[46,[-1]],38],38,[]],[[1,[46,[12]]],10],[[6,[46,[12]]],10],[[7,[46,[12]]],10],[[19,9],[[5,[10,21]]]],[[8,9],[[5,[10,11]]]],0,[[17,31],[[5,[43,0]]]],[[9,-1],5,49],[[12,-1],5,49],[8,10],[21,[[16,[50]]]],[11,[[16,[50]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[17,43],31],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,51,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[7,[[5,[6]]]],[7,[[5,[1]]]],[7,[[5,[32]]]],[-1,[[5,[-2]]],[],[]],[[[15,[-1]]],[[5,[-1,52]]],[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,53,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"StrictCoreManager",0],[3,"AcquireRequest",291],[3,"Assignment",291],[4,"AcquireError",292],[4,"Result",293],[3,"DummyCoreManager",0],[4,"CoreManager",0],[3,"Workers",0],[3,"WorkerId",0],[15,"tuple"],[4,"WorkersError",0],[3,"CUID",0],[15,"u8"],[15,"array"],[3,"Receiver",0],[4,"Option",294],[3,"PeerScopes",0],[4,"Ordering",295],[3,"KeyStorage",0],[4,"KeyPair",296],[4,"KeyStorageError",0],[3,"WorkerParams",0],[8,"Deserializer",297],[15,"char"],[8,"FromIterator",298],[15,"bool"],[3,"Formatter",299],[3,"Error",299],[6,"Result",299],[4,"Event",0],[3,"PeerId",300],[3,"DevCoreManager",301],[15,"slice"],[8,"AsRef",302],[3,"PathBuf",303],[6,"Result",304],[3,"Arc",305],[15,"usize"],[3,"CoreRange",306],[3,"PersistenceTask",307],[4,"LoadingError",292],[3,"DealId",308],[4,"PeerScope",309],[3,"Handle",310],[8,"Hasher",311],[3,"Vec",312],[3,"Context",313],[4,"Poll",314],[8,"Serializer",315],[8,"Error",316],[3,"String",317],[4,"TryRecvError",318],[3,"TypeId",319],[13,"WorkerCreated",250],[13,"WorkerRemoved",250],[13,"ReadPersistedKeypair",253],[13,"DirectoryListError",253],[13,"DeserializePersistedKeypair",253],[13,"PersistedKeypairDecodingError",253],[13,"PersistedKeypairInvalidKeyFormat",253],[13,"SerializePersistedKeypair",253],[13,"WriteErrorPersistedKeypair",253],[13,"RemoveErrorPersistedKeypair",253],[13,"CreateKeypairsDir",253],[13,"WorkerAlreadyExists",271],[13,"CreateWorkersDir",271],[13,"CreateWorkerKeyPair",271],[13,"RemoveWorkerKeyPair",271],[13,"ReadPersistedWorker",271],[13,"DeserializePersistedWorker",271],[13,"SerializePersistedWorker",271],[13,"WriteErrorPersistedWorker",271],[13,"RemoveErrorPersistedWorker",271],[13,"CreateRuntime",271],[13,"FailedToAssignCores",271],[13,"FailedToNotifySubsystem",271]],"b":[[104,"impl-Display-for-WorkerId"],[105,"impl-Debug-for-WorkerId"],[106,"impl-Debug-for-KeyStorageError"],[107,"impl-Display-for-KeyStorageError"],[108,"impl-Display-for-WorkersError"],[109,"impl-Debug-for-WorkersError"],[112,"impl-Display-for-CUID"],[113,"impl-Debug-for-CUID"],[127,"impl-From%3CStrictCoreManager%3E-for-CoreManager"],[128,"impl-From%3CDummyCoreManager%3E-for-CoreManager"],[129,"impl-From%3CDevCoreManager%3E-for-CoreManager"],[219,"impl-TryInto%3CDummyCoreManager%3E-for-CoreManager"],[220,"impl-TryInto%3CStrictCoreManager%3E-for-CoreManager"],[221,"impl-TryInto%3CDevCoreManager%3E-for-CoreManager"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
