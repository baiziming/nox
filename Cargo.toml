[workspace]
resolver = "2"
members = [
    "crates/libp2p",
    "crates/control-macro",
    "crates/local-vm",
    "crates/uuid-utils",
    "crates/test-utils",
    "crates/fs-utils",
    "crates/log-utils",
    "crates/config-utils",
    "crates/service-modules",
    "crates/ivalue-utils",
    "crates/particle-args",
    "crates/json-utils",
    "crates/server-config",
    "crates/cid-utils",
    "crates/kademlia",
    "crates/async-unlock",
    "crates/now-millis",
    "crates/toml-utils",
    "crates/air-interpreter-fs",
    "crates/created-swarm",
    "crates/toy-vms",
    "crates/connected-client",
    "crates/test-constants",
    "crates/peer-metrics",
    "crates/spell-event-bus",
    "crates/spell-service-api",
    "crates/key-manager",
    "crates/health",
    "sorcerer",
    "crates/nox-tests",
    "crates/subnet-resolver",
    "nox",
    "aquamarine",
    "particle-protocol",
    "particle-services",
    "particle-builtins",
    "particle-modules",
    "connection-pool",
    "spell-storage",
    "particle-execution",
    "crates/system-services",
]
exclude = [
    "nox/tests/tetraplets",
]

[workspace.dependencies]
fluence-libp2p     = { path = "crates/libp2p",             version = "0.2.0", publish = false }
nox                = { path = "nox",                       package = "fluence-nox",                version = "0.16.0", publish = false }
created-swarm      = { path = "crates/created-swarm",      package = "fluence-created-swarm",      version = "0.1.0", publish = true }
log-utils          = { path = "crates/log-utils",          package = "fluence-log-utils",          version = "0.1.0", publish = true }
connected-client   = { path = "crates/connected-client",   package = "fluence-connected-client",   version = "0.1.0", publish = true }
control-macro      = { path = "crates/control-macro",      package = "fluence-control-macro",      version = "0.1.0", publish = false }
local-vm           = { path = "crates/local-vm",           package = "fluence-local-vm",           version = "0.1.0", publish = false }
uuid-utils         = { path = "crates/uuid-utils",         package = "fluence-uuid-utils",         version = "0.1.0", publish = false }
test-utils         = { path = "crates/test-utils",         package = "fluence-test-utils",         version = "0.3.0", publish = false }
fs-utils           = { path = "crates/fs-utils",           package = "fluence-fs-utils",           version = "0.1.0", publish = false }
config-utils       = { path = "crates/config-utils",       package = "fluence-config-utils",       version = "0.2.0", publish = false }
service-modules    = { path = "crates/service-modules",    package = "fluence-service-modules",    version = "0.1.0", publish = false }
ivalue-utils       = { path = "crates/ivalue-utils",       package = "fluence-ivalue-utils",       version = "0.1.0", publish = false }
particle-args      = { path = "crates/particle-args",      package = "fluence-particle-args",      version = "0.1.0", publish = false }
json-utils         = { path = "crates/json-utils",         package = "fluence-json-utils",         version = "0.0.2", publish = false }
server-config      = { path = "crates/server-config",      package = "fluence-server-config",      version = "0.2.0", publish = false }
kademlia           = { path = "crates/kademlia",           package = "fluence-kademlia",           version = "0.1.0", publish = false }
async-unlock       = { path = "crates/async-unlock",       package = "fluence-async-unlock",       version = "0.1.0", publish = false }
now-millis         = { path = "crates/now-millis",         package = "fluence-now-millis",         version = "0.1.0", publish = false }
toml-utils         = { path = "crates/toml-utils",         package = "fluence-toml-utils",         version = "0.0.1", publish = false }
air-interpreter-fs = { path = "crates/air-interpreter-fs", package = "fluence-air-interpreter-fs", version = "0.1.0", publish = false }
toy-vms            = { path = "crates/toy-vms",            package = "fluence-toy-vms",            version = "0.1.0", publish = false }
test-constants     = { path = "crates/test-constants",     package = "fluence-test-constants",     version = "0.1.0", publish = false }
peer-metrics       = { path = "crates/peer-metrics",       package = "fluence-peer-metrics",       version = "0.1.0", publish = false }
spell-event-bus    = { path = "crates/spell-event-bus",    package = "fluence-spell-event-bus",    version = "0.1.0", publish = false }
spell-service-api  = { path = "crates/spell-service-api",  package = "fluence-spell-service-api",  version = "0.1.0", publish = false }
key-manager        = { path = "crates/key-manager",        package = "fluence-key-manager",        version = "0.1.0", publish = false }
cid-utils          = { path = "crates/cid-utils",          package = "fluence-cid-utils",          version = "0.1.0", publish = false }
sorcerer           = { path = "sorcerer",                  package = "fluence-sorcerer",           version = "0.1.0", publish = false }
aquamarine         = { path = "aquamarine",                package = "fluence-aquamarine",         version = "0.2.0", publish = false }
particle-protocol  = { path = "particle-protocol",         package = "fluence-particle-protocol",  version = "0.3.0", publish = false }
particle-services  = { path = "particle-services",         package = "fluence-particle-services",  version = "0.1.0", publish = false }
particle-builtins  = { path = "particle-builtins",         package = "fluence-particle-builtins",  version = "0.2.0", publish = false }
particle-modules   = { path = "particle-modules",          package = "fluence-particle-modules",   version = "0.1.0", publish = false }
connection-pool    = { path = "connection-pool",           package = "fluence-connection-pool",    version = "0.1.0", publish = false }
spell-storage      = { path = "spell-storage",             package = "fluence-spell-storage",      version = "0.1.0", publish = false }
particle-execution = { path = "particle-execution",        package = "fluence-particle-execution", version = "0.1.0", publish = false }
system-services    = { path = "crates/system-services",    package = "fluence-system-services",    version = "0.1.0", publish = false }
health             = { path = "crates/health",             package = "fluence-health",             version = "0.1.0", publish = false }
subnet-resolver    = { path = "crates/subnet-resolver",    package = "fluence-subnet-resolver",    version = "0.1.0", publish = false }

# spell
fluence-spell-dtos = "=0.5.26"
fluence-spell-distro = "=0.5.26"

# marine
fluence-app-service = { version = "0.29.0" }
marine-utils = "0.5.0"
marine-it-parser = "0.13.0"

# avm
avm-server = { version = "0.33.3" }
air-interpreter-wasm = { version = "0.54.0" }

# libp2p
libp2p = { version = "0.52.4", features = ["noise", "tcp", "dns", "websocket", "yamux", "tokio", "kad", "ping", "identify", "macros"] }
libp2p-core = { version = "0.40.1", default-features = false, features = ["secp256k1"] }
libp2p-metrics = "0.13.1"
libp2p-noise = "0.43.2"
libp2p-mplex = "0.40.0"
libp2p-swarm = "0.43.7"
libp2p-identity = "0.2.7"
libp2p-connection-limits = "0.2.1"
libp2p-kad = "0.44.6"
multihash = "0.19.1"
prometheus-client = "0.21.2"

eyre = "0.6.8"
base64 = "0.21.5"
bs58 = "0.5.0"
fluence-keypair = "0.10.3"
parking_lot = "0.12.1"
tokio = { version = "1.33.0", features = ["full", "tracing"] }
tokio-stream = { version = "0.1.14" }
tokio-util = { version = "0.7.10" }
uuid = { version = "1.5.0", features = ["v4"] }
derivative = "2.2.0"
serde_json = { version = "1.0.107", features = ["preserve_order"] }
fstrings = "0.2.3"
maplit = "1.0.2"
log = "0.4.20"
tracing = { version = "0.1.40", default-features = false, features = ["log"] }
tracing-subscriber = "0.3.17"
console-subscriber = "0.2.0"
futures = "0.3.29"
thiserror = "1.0.50"
serde = "1.0.190"
toml = "0.5.10"
itertools = "0.11.0"
humantime-serde = "1.1.1"
cid = "0.10.1"
libipld = "0.16.0"
axum = "0.6.20"
hyper = "0.14.27"

# Enable a small amount of optimization in debug mode
[profile.dev]
opt-level = 1

# Enable high optimizations for dependencies, but not for our code:
[profile.dev.package."*"]
opt-level = 3
codegen-units = 256

[profile.dev.package.clap]
debug-assertions = false

[profile.release]
strip = true
lto = false
codegen-units = 1 # Reduce number of codegen units to increase optimizations

[profile.profiling]
inherits = "release"
debug = true
strip = false
lto = false
